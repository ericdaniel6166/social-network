{
	"info": {
		"_postman_id": "7fe1a6ed-6a85-46c2-9068-67500240ded7",
		"name": "social-network-app",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13249139"
	},
	"item": [
		{
			"name": "01.01_Prepare",
			"item": [
				{
					"name": "Prepare root admin account rootAdmin",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"domain\", \"http://localhost:8080\");\r",
									"pm.environment.set(\"email\", \"rootAdmin@socialnetwork.com\");\r",
									"pm.environment.set(\"username\", \"rootAdmin\");\r",
									"pm.environment.set(\"password\", \"P@ssw0rd\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "Prepare admin account admin",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"domain\", \"http://localhost:8080\");\r",
									"pm.environment.set(\"email\", \"admin@socialnetwork.com\");\r",
									"pm.environment.set(\"username\", \"admin\");\r",
									"pm.environment.set(\"password\", \"P@ssw0rd\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "Prepare admin account admin1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"domain\", \"http://localhost:8080\");\r",
									"pm.environment.set(\"email\", \"admin@socialnetwork.com\");\r",
									"pm.environment.set(\"username\", \"admin1\");\r",
									"pm.environment.set(\"password\", \"P@ssw0rd\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "Prepare moderator account moderator",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"domain\", \"http://localhost:8080\");\r",
									"pm.environment.set(\"email\", \"admin@socialnetwork.com\");\r",
									"pm.environment.set(\"username\", \"moderator\");\r",
									"pm.environment.set(\"password\", \"P@ssw0rd\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "Prepare moderator account moderator1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"domain\", \"http://localhost:8080\");\r",
									"pm.environment.set(\"email\", \"admin@socialnetwork.com\");\r",
									"pm.environment.set(\"username\", \"moderator1\");\r",
									"pm.environment.set(\"password\", \"P@ssw0rd\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "Prepare user account user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"domain\", \"http://localhost:8080\");\r",
									"pm.environment.set(\"email\", \"admin@socialnetwork.com\");\r",
									"pm.environment.set(\"username\", \"user\");\r",
									"pm.environment.set(\"password\", \"P@ssw0rd\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "Prepare user account user1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"domain\", \"http://localhost:8080\");\r",
									"pm.environment.set(\"email\", \"admin@socialnetwork.com\");\r",
									"pm.environment.set(\"username\", \"user1\");\r",
									"pm.environment.set(\"password\", \"P@ssw0rd\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "Prepare account javadev311",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"domain\", \"http://localhost:8080\");\r",
									"/////////////////////////////////////////////////////////////////////////\r",
									"pm.environment.set(\"email\", \"javadev311@javadev111.com\");\r",
									"pm.environment.set(\"username\", \"javadev311\");\r",
									"pm.environment.set(\"password\", \"P@ssw0rd\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "Prepare account aaa123",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"domain\", \"http://localhost:8080\");\r",
									"/////////////////////////////////////////////////////////////////////////\r",
									"pm.environment.set(\"email\", \"aaa123@zzz.com\");\r",
									"pm.environment.set(\"username\", \"aaa123\");\r",
									"pm.environment.set(\"password\", \"P@ssw0rd\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "Prepare account manual",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"domain\", \"http://localhost:8080\");\r",
									"pm.environment.set(\"email\", \"block123@block123.com\");\r",
									"pm.environment.set(\"username\", \"block123\");\r",
									"pm.environment.set(\"password\", \"P@ssw0rd\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "02.01_/auth/signUp",
			"item": [
				{
					"name": "account from prepare",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/auth/signUp",
							"host": [
								"{{domain}}"
							],
							"path": [
								"auth",
								"signUp"
							]
						}
					},
					"response": [
						{
							"name": "409",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signUp",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signUp"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 14:06:13 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 21:06:13 +0700\",\n    \"status\": 409,\n    \"operationId\": \"e9c9d846bcc77ee9\",\n    \"error\": \"VALIDATION_ERROR\",\n    \"path\": \"/auth/signUp\",\n    \"errorDetails\": [\n        {\n            \"field\": \"email\",\n            \"message\": \"This email has already been taken.\\nPlease try another.\"\n        },\n        {\n            \"field\": \"username\",\n            \"message\": \"This username has already been taken.\\nPlease try another.\"\n        }\n    ]\n}"
						},
						{
							"name": "500",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signUp",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signUp"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 14:09:56 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 21:09:56 +0700\",\n    \"status\": 500,\n    \"operationId\": \"2a3abe862c56bf06\",\n    \"error\": \"SEND_MAIL_ERROR\",\n    \"message\": \"Error sending email to j********1@j********1.com.\",\n    \"path\": \"/auth/signUp\"\n}"
						},
						{
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signUp",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signUp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 14:12:51 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"VERIFICATION LINK SENT\",\n    \"message\": \"Hi javadev311, we've sent an email to j********1@j********1.com. Please click on the link given in email to verify your account.\\nThe link in the email will expire in 24 hours.\"\n}"
						}
					]
				},
				{
					"name": "validation exception",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"email\", \"javadev111javadev111.com\");\r",
									"pm.environment.set(\"username\", \"\");\r",
									"pm.environment.set(\"password\", \"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/auth/signUp",
							"host": [
								"{{domain}}"
							],
							"path": [
								"auth",
								"signUp"
							]
						}
					},
					"response": [
						{
							"name": "422",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signUp",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signUp"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 14:25:36 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 21:25:36 +0700\",\n    \"status\": 422,\n    \"operationId\": \"97ab1984adac0d8a\",\n    \"error\": \"VALIDATION_ERROR\",\n    \"path\": \"/auth/signUp\",\n    \"errorDetails\": [\n        {\n            \"field\": \"email\",\n            \"message\": \"must be a well-formed email address\"\n        },\n        {\n            \"field\": \"password\",\n            \"message\": \"Password is required\"\n        },\n        {\n            \"field\": \"username\",\n            \"message\": \"Username is required\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "account random email username",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));\r",
									"pm.environment.set(\"username\", pm.variables.replaceIn('{{$randomUserName}}'));\r",
									"pm.environment.set(\"password\", \"P@ssw0rd\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/auth/signUp",
							"host": [
								"{{domain}}"
							],
							"path": [
								"auth",
								"signUp"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "02.02_/auth/verifyAccount/{token}",
			"item": [
				{
					"name": "Token found",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", \"c1b7d497-28d4-409e-b3f7-7115c185d652\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/auth/verifyAccount/{{token}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"auth",
								"verifyAccount",
								"{{token}}"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/auth/verifyAccount/{{token}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"verifyAccount",
										"{{token}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 14:14:00 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"VERIFICATION SUCCESS\",\n    \"message\": \"Hi javadev311, your account has been verified.\"\n}"
						},
						{
							"name": "400",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/auth/verifyAccount/{{token}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"verifyAccount",
										"{{token}}"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 14:14:19 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 21:14:19 +0700\",\n    \"status\": 400,\n    \"operationId\": \"5271e06af8aa98d7\",\n    \"error\": \"ACCOUNT_ALREADY_ACTIVATED_ERROR\",\n    \"message\": \"Your account has been already activated.\",\n    \"path\": \"/auth/verifyAccount/1a777711-7bbd-4709-90e6-3d4748321bf9\"\n}"
						}
					]
				},
				{
					"name": "Token not found",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", \"hgvjvc\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/auth/verifyAccount/{{token}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"auth",
								"verifyAccount",
								"{{token}}"
							]
						}
					},
					"response": [
						{
							"name": "404",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/auth/verifyAccount/{{token}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"verifyAccount",
										"{{token}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 14:14:57 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 21:14:57 +0700\",\n    \"status\": 404,\n    \"operationId\": \"d72c1f7da20e5607\",\n    \"error\": \"RESOURCE_NOT_FOUND_ERROR\",\n    \"message\": \"Verification token hgvjvc not found\",\n    \"path\": \"/auth/verifyAccount/hgvjvc\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "02.03_/auth/signIn",
			"item": [
				{
					"name": "Correct username + password",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"if (pm.response.code === 200) {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.test(\"accessToken is not null\", function () {\r",
									"        pm.expect(jsonData.accessToken).is.not.null;\r",
									"    });\r",
									"    if (jsonData.accessToken != null) {\r",
									"        pm.environment.set(\"accessToken\", jsonData.accessToken);\r",
									"    }\r",
									"\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/auth/signIn",
							"host": [
								"{{domain}}"
							],
							"path": [
								"auth",
								"signIn"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signIn",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signIn"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 14:27:10 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"accessToken\": \"eyJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJzZWxmIiwic3ViIjoiamF2YWRldjMxMSIsImV4cCI6MTY1NzcyMjUyMCwiaWF0IjoxNjU3NzIyNDMwLCJzY29wZSI6WyJST0xFX1VTRVIiXX0.w_6NtnLlJ8rnWCKmS2C4V5ADYAqNwCAcVdxLG2o9ew7BopO5RbQxw-NOZuBUQe2yylotj_cCkSP3CO-yDuq6jerTDuFShp26rmjeQpyLOuF9evjmbr3_ODdQTEYQWYtWjPIlYLyT68yD_htuYv2X2XouhnDWvKbL-uz2dGSFWTUJtN3kfiUJguE7-AT9xjMQLoLzKX5C6Dv5sU7X_UwmB5bCLifkC0Ew0jQNWI9gKeBVNzONPKCuELg79RVF10EQE7WXETfMh_XdrfZqwWAfNiFRZAvaF0GSTqZu_znkE1J2Ww_xYM9dOlSECYacgsRyQhWqOjrFaQRusHcADUaDXA\",\n    \"refreshToken\": \"ebb71cc1-430a-4274-b1f3-83005dd0de52\",\n    \"expiresAt\": \"2022-07-13 21:28:40 +0700\"\n}"
						}
					]
				},
				{
					"name": "wrong password",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"wrongpassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/auth/signIn",
							"host": [
								"{{domain}}"
							],
							"path": [
								"auth",
								"signIn"
							]
						}
					},
					"response": [
						{
							"name": "401",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"wrongpassword\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signIn",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signIn"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 14:29:09 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 21:29:09 +0700\",\n    \"status\": 401,\n    \"operationId\": \"604f42ab2898dac8\",\n    \"error\": \"UNAUTHORIZED\",\n    \"message\": \"Bad credentials\",\n    \"path\": \"/auth/signIn\"\n}"
						}
					]
				},
				{
					"name": "wrong username",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"wrongusername\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/auth/signIn",
							"host": [
								"{{domain}}"
							],
							"path": [
								"auth",
								"signIn"
							]
						}
					},
					"response": [
						{
							"name": "401",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"wrongusername\",\r\n    \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signIn",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signIn"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 14:30:06 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 21:30:06 +0700\",\n    \"status\": 401,\n    \"operationId\": \"323b433d7647dfe8\",\n    \"error\": \"UNAUTHORIZED\",\n    \"message\": \"username wrongusername not found\",\n    \"path\": \"/auth/signIn\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "03.01_/forum POST",
			"item": [
				{
					"name": "create forum",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomWords}}\",\r\n    \"description\": \"{{$randomPhrase}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/forum",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum"
							]
						}
					},
					"response": [
						{
							"name": "200_>=ROLE_MODERATOR",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"forum name 123\",\r\n    \"description\": \"forum description 123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/forum",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 02 Jul 2022 15:49:06 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"CREATE FORUM SUCCESS\",\n    \"message\": \"You have create forum \\\"forum name 123\\\" successfully\"\n}"
						},
						{
							"name": "403_ROLE_USER",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomWords}}\",\r\n    \"description\": \"{{$randomPhrase}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/forum",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 14:33:32 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 21:33:32 +0700\",\n    \"status\": 403,\n    \"operationId\": \"8af643cac2ad5733\",\n    \"error\": \"FORBIDDEN\",\n    \"message\": \"Access is denied\",\n    \"path\": \"/forum\"\n}"
						}
					]
				},
				{
					"name": "No Auth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"forum name\",\r\n    \"description\": \"forum description\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/forum",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum"
							]
						}
					},
					"response": [
						{
							"name": "401",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"forum name\",\r\n    \"description\": \"forum description\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/forum",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 14:41:05 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 21:41:05 +0700\",\n    \"status\": 401,\n    \"operationId\": \"6dc634aa088a3c2d\",\n    \"error\": \"UNAUTHORIZED\",\n    \"message\": \"Full authentication is required to access this resource\",\n    \"path\": \"/forum\"\n}"
						}
					]
				},
				{
					"name": "name and description blank",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"\",\r\n    \"description\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/forum",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum"
							]
						}
					},
					"response": [
						{
							"name": "422",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"\",\r\n    \"description\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/forum",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 14:32:54 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 21:32:54 +0700\",\n    \"status\": 422,\n    \"operationId\": \"c4d17198dd22ab00\",\n    \"error\": \"VALIDATION_ERROR\",\n    \"path\": \"/forum\",\n    \"errorDetails\": [\n        {\n            \"field\": \"description\",\n            \"message\": \"Description is required\"\n        },\n        {\n            \"field\": \"name\",\n            \"message\": \"Name is required\"\n        }\n    ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "03.02_/forum GET",
			"item": [
				{
					"name": "get forum",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/forum",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/forum",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 05 Jul 2022 17:38:15 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 48,\n            \"name\": \"Implemented maximize sensor deposit productivity\",\n            \"description\": \"Try to parse the EXE firewall, maybe it will hack the open-source transmitter!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:18 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:18 +0700\"\n        },\n        {\n            \"id\": 47,\n            \"name\": \"Planner responsive Division digital productize\",\n            \"description\": \"The SAS driver is down, synthesize the back-end protocol so we can input the PCI sensor!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:17 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:17 +0700\"\n        },\n        {\n            \"id\": 46,\n            \"name\": \"program bandwidth Cross-group Bacon Mandatory\",\n            \"description\": \"Try to program the AI microchip, maybe it will copy the redundant panel!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:16 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:16 +0700\"\n        },\n        {\n            \"id\": 45,\n            \"name\": \"multi-byte primary toolset\",\n            \"description\": \"The SMTP panel is down, program the digital bandwidth so we can back up the CSS bandwidth!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:16 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:16 +0700\"\n        },\n        {\n            \"id\": 44,\n            \"name\": \"transmitting synergies\",\n            \"description\": \"bypassing the microchip won't do anything, we need to copy the haptic JSON application!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:15 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:15 +0700\"\n        },\n        {\n            \"id\": 43,\n            \"name\": \"boliviano pixel Washington\",\n            \"description\": \"Try to index the SMTP protocol, maybe it will compress the optical program!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:14 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:14 +0700\"\n        },\n        {\n            \"id\": 42,\n            \"name\": \"Credit Hills applications structure\",\n            \"description\": \"If we index the transmitter, we can get to the JSON array through the open-source XSS feed!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:14 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:14 +0700\"\n        },\n        {\n            \"id\": 41,\n            \"name\": \"auxiliary Fresh Greece Wyoming\",\n            \"description\": \"If we synthesize the bus, we can get to the XML microchip through the bluetooth AI card!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:13 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:13 +0700\"\n        },\n        {\n            \"id\": 40,\n            \"name\": \"Polarised Incredible\",\n            \"description\": \"Use the bluetooth RAM bus, then you can bypass the wireless protocol!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:12 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:12 +0700\"\n        },\n        {\n            \"id\": 39,\n            \"name\": \"system invoice Handcrafted synthesize Card\",\n            \"description\": \"Use the back-end SAS circuit, then you can back up the open-source transmitter!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:12 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:12 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 26,\n    \"totalPages\": 3,\n    \"last\": false,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 10,\n    \"first\": true,\n    \"empty\": false\n}"
						},
						{
							"name": "200 2",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/forum",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jul 2022 15:23:47 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 24,\n            \"name\": \"Music Avon back ROI bluetooth\",\n            \"description\": \"You can't index the program without generating the open-source PNG matrix!\",\n            \"createdBy\": \"admin1\",\n            \"createdDate\": \"2022-07-21 22:21:19 +0700\",\n            \"lastModifiedBy\": \"admin1\",\n            \"lastModifiedDate\": \"2022-07-21 22:21:19 +0700\"\n        },\n        {\n            \"id\": 23,\n            \"name\": \"Health Cloned Functionality TCP metrics\",\n            \"description\": \"backing up the capacitor won't do anything, we need to generate the multi-byte EXE capacitor!\",\n            \"createdBy\": \"admin1\",\n            \"createdDate\": \"2022-07-21 17:49:10 +0700\",\n            \"lastModifiedBy\": \"admin1\",\n            \"lastModifiedDate\": \"2022-07-21 17:49:10 +0700\"\n        },\n        {\n            \"id\": 22,\n            \"name\": \"Fresh Rubber\",\n            \"description\": \"You can't override the matrix without calculating the digital HDD alarm!\",\n            \"createdBy\": \"moderator1\",\n            \"createdDate\": \"2022-07-15 23:07:49 +0700\",\n            \"lastModifiedBy\": \"moderator1\",\n            \"lastModifiedDate\": \"2022-07-15 23:07:49 +0700\"\n        },\n        {\n            \"id\": 21,\n            \"name\": \"Brazilian Outdoors copy e-services\",\n            \"description\": \"You can't index the card without programming the auxiliary RAM bandwidth!\",\n            \"createdBy\": \"moderator1\",\n            \"createdDate\": \"2022-07-15 23:07:48 +0700\",\n            \"lastModifiedBy\": \"moderator1\",\n            \"lastModifiedDate\": \"2022-07-15 23:07:48 +0700\"\n        },\n        {\n            \"id\": 20,\n            \"name\": \"maroon Investment\",\n            \"description\": \"backing up the circuit won't do anything, we need to copy the 1080p SMS driver!\",\n            \"createdBy\": \"admin\",\n            \"createdDate\": \"2022-07-15 23:07:29 +0700\",\n            \"lastModifiedBy\": \"admin\",\n            \"lastModifiedDate\": \"2022-07-15 23:07:29 +0700\"\n        },\n        {\n            \"id\": 19,\n            \"name\": \"quantifying Personal Orchestrator viral\",\n            \"description\": \"You can't override the array without parsing the optical ADP monitor!\",\n            \"createdBy\": \"admin\",\n            \"createdDate\": \"2022-07-15 23:07:28 +0700\",\n            \"lastModifiedBy\": \"admin\",\n            \"lastModifiedDate\": \"2022-07-15 23:07:28 +0700\"\n        },\n        {\n            \"id\": 18,\n            \"name\": \"radical silver Bike\",\n            \"description\": \"We need to connect the wireless THX pixel!\",\n            \"createdBy\": \"admin\",\n            \"createdDate\": \"2022-07-15 23:07:27 +0700\",\n            \"lastModifiedBy\": \"admin\",\n            \"lastModifiedDate\": \"2022-07-15 23:07:27 +0700\"\n        },\n        {\n            \"id\": 17,\n            \"name\": \"Hollow Organic Fundamental Dollar\",\n            \"description\": \"I'll transmit the mobile JBOD program, that should application the SDD circuit!\",\n            \"createdBy\": \"admin\",\n            \"createdDate\": \"2022-07-15 23:07:27 +0700\",\n            \"lastModifiedBy\": \"admin\",\n            \"lastModifiedDate\": \"2022-07-15 23:07:27 +0700\"\n        },\n        {\n            \"id\": 16,\n            \"name\": \"lavender matrix Chips\",\n            \"description\": \"copying the feed won't do anything, we need to hack the neural ADP alarm!\",\n            \"createdBy\": \"admin\",\n            \"createdDate\": \"2022-07-15 23:07:26 +0700\",\n            \"lastModifiedBy\": \"admin\",\n            \"lastModifiedDate\": \"2022-07-15 23:07:26 +0700\"\n        },\n        {\n            \"id\": 15,\n            \"name\": \"Track Ergonomic\",\n            \"description\": \"I'll override the online RAM bus, that should feed the XSS interface!\",\n            \"createdBy\": \"admin\",\n            \"createdDate\": \"2022-07-15 23:07:25 +0700\",\n            \"lastModifiedBy\": \"admin\",\n            \"lastModifiedDate\": \"2022-07-15 23:07:25 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageSize\": 10,\n        \"pageNumber\": 0,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 24,\n    \"totalPages\": 3,\n    \"last\": false,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 10,\n    \"first\": true,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "list all",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/forum?size=99",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum"
							],
							"query": [
								{
									"key": "size",
									"value": "99"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/forum?size=99",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									],
									"query": [
										{
											"key": "size",
											"value": "99"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 05 Jul 2022 17:38:34 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 48,\n            \"name\": \"Implemented maximize sensor deposit productivity\",\n            \"description\": \"Try to parse the EXE firewall, maybe it will hack the open-source transmitter!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:18 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:18 +0700\"\n        },\n        {\n            \"id\": 47,\n            \"name\": \"Planner responsive Division digital productize\",\n            \"description\": \"The SAS driver is down, synthesize the back-end protocol so we can input the PCI sensor!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:17 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:17 +0700\"\n        },\n        {\n            \"id\": 46,\n            \"name\": \"program bandwidth Cross-group Bacon Mandatory\",\n            \"description\": \"Try to program the AI microchip, maybe it will copy the redundant panel!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:16 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:16 +0700\"\n        },\n        {\n            \"id\": 45,\n            \"name\": \"multi-byte primary toolset\",\n            \"description\": \"The SMTP panel is down, program the digital bandwidth so we can back up the CSS bandwidth!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:16 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:16 +0700\"\n        },\n        {\n            \"id\": 44,\n            \"name\": \"transmitting synergies\",\n            \"description\": \"bypassing the microchip won't do anything, we need to copy the haptic JSON application!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:15 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:15 +0700\"\n        },\n        {\n            \"id\": 43,\n            \"name\": \"boliviano pixel Washington\",\n            \"description\": \"Try to index the SMTP protocol, maybe it will compress the optical program!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:14 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:14 +0700\"\n        },\n        {\n            \"id\": 42,\n            \"name\": \"Credit Hills applications structure\",\n            \"description\": \"If we index the transmitter, we can get to the JSON array through the open-source XSS feed!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:14 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:14 +0700\"\n        },\n        {\n            \"id\": 41,\n            \"name\": \"auxiliary Fresh Greece Wyoming\",\n            \"description\": \"If we synthesize the bus, we can get to the XML microchip through the bluetooth AI card!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:13 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:13 +0700\"\n        },\n        {\n            \"id\": 40,\n            \"name\": \"Polarised Incredible\",\n            \"description\": \"Use the bluetooth RAM bus, then you can bypass the wireless protocol!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:12 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:12 +0700\"\n        },\n        {\n            \"id\": 39,\n            \"name\": \"system invoice Handcrafted synthesize Card\",\n            \"description\": \"Use the back-end SAS circuit, then you can back up the open-source transmitter!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:12 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:12 +0700\"\n        },\n        {\n            \"id\": 38,\n            \"name\": \"unleash utilize empowering application\",\n            \"description\": \"We need to navigate the multi-byte AI system!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:11 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:11 +0700\"\n        },\n        {\n            \"id\": 37,\n            \"name\": \"card Steel\",\n            \"description\": \"We need to override the bluetooth SAS matrix!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:10 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:10 +0700\"\n        },\n        {\n            \"id\": 36,\n            \"name\": \"Shoal Ergonomic Plain\",\n            \"description\": \"Use the open-source SMTP capacitor, then you can index the neural bus!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:09 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:09 +0700\"\n        },\n        {\n            \"id\": 35,\n            \"name\": \"Functionality deposit Mountains\",\n            \"description\": \"We need to synthesize the optical SQL system!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:09 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:09 +0700\"\n        },\n        {\n            \"id\": 34,\n            \"name\": \"Diverse deposit\",\n            \"description\": \"Use the digital ADP capacitor, then you can quantify the solid state array!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:08 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:08 +0700\"\n        },\n        {\n            \"id\": 33,\n            \"name\": \"Saudi Stand-alone\",\n            \"description\": \"If we bypass the system, we can get to the EXE capacitor through the virtual TCP port!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:07 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:07 +0700\"\n        },\n        {\n            \"id\": 32,\n            \"name\": \"Loan Buckinghamshire Iowa Trail Pizza\",\n            \"description\": \"I'll override the solid state AI monitor, that should circuit the ADP system!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:07 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:07 +0700\"\n        },\n        {\n            \"id\": 31,\n            \"name\": \"services sensor Account\",\n            \"description\": \"quantifying the interface won't do anything, we need to program the virtual FTP monitor!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:06 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:06 +0700\"\n        },\n        {\n            \"id\": 30,\n            \"name\": \"Interactions Account feed Wooden Gorgeous\",\n            \"description\": \"Use the open-source EXE pixel, then you can calculate the virtual microchip!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:05 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:05 +0700\"\n        },\n        {\n            \"id\": 29,\n            \"name\": \"Corporate bandwidth Finland\",\n            \"description\": \"I'll compress the back-end XSS application, that should hard drive the THX system!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:04 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:04 +0700\"\n        },\n        {\n            \"id\": 28,\n            \"name\": \"JBOD Corner HDD\",\n            \"description\": \"If we calculate the interface, we can get to the SMS array through the open-source TCP array!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:04 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:04 +0700\"\n        },\n        {\n            \"id\": 27,\n            \"name\": \"Quality Frozen Tuna Garden\",\n            \"description\": \"Use the open-source SSL application, then you can transmit the bluetooth matrix!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:03 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:03 +0700\"\n        },\n        {\n            \"id\": 26,\n            \"name\": \"Direct Toys Metal\",\n            \"description\": \"I'll index the digital AGP pixel, that should bandwidth the ADP matrix!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:02 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:02 +0700\"\n        },\n        {\n            \"id\": 25,\n            \"name\": \"synergistic Berkshire Principal quantify Land\",\n            \"description\": \"indexing the alarm won't do anything, we need to bypass the cross-platform THX protocol!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:01 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:01 +0700\"\n        },\n        {\n            \"id\": 24,\n            \"name\": \"collaborative aggregate Tasty Pizza\",\n            \"description\": \"Try to compress the SAS sensor, maybe it will input the solid state feed!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:00 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:00 +0700\"\n        },\n        {\n            \"id\": 23,\n            \"name\": \"quantifying Jewelery Associate Soft Wooden\",\n            \"description\": \"The RSS feed is down, generate the multi-byte transmitter so we can hack the HTTP sensor!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:27:43 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:27:43 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 99,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 26,\n    \"totalPages\": 1,\n    \"last\": true,\n    \"size\": 99,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 26,\n    \"first\": true,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "Page index must not be less than zero!",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/forum?page=-1&size=5&direction=DESC&properties=description",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum"
							],
							"query": [
								{
									"key": "page",
									"value": "-1"
								},
								{
									"key": "size",
									"value": "5"
								},
								{
									"key": "direction",
									"value": "DESC"
								},
								{
									"key": "properties",
									"value": "description"
								}
							]
						}
					},
					"response": [
						{
							"name": "400",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/forum?page=-1&size=5&direction=DESC&properties=description",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									],
									"query": [
										{
											"key": "page",
											"value": "-1"
										},
										{
											"key": "size",
											"value": "5"
										},
										{
											"key": "direction",
											"value": "DESC"
										},
										{
											"key": "properties",
											"value": "description"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 14:36:01 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 21:36:01 +0700\",\n    \"status\": 400,\n    \"operationId\": \"bb08263a4844ac21\",\n    \"error\": \"BAD_REQUEST\",\n    \"message\": \"Page index must not be less than zero!\",\n    \"path\": \"/forum\"\n}"
						}
					]
				},
				{
					"name": "Page size must not be less than one!",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/forum?page=0&size=0&direction=DESC&properties=description",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "0"
								},
								{
									"key": "direction",
									"value": "DESC"
								},
								{
									"key": "properties",
									"value": "description"
								}
							]
						}
					},
					"response": [
						{
							"name": "400",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/forum?page=0&size=0&direction=DESC&properties=description",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "0"
										},
										{
											"key": "direction",
											"value": "DESC"
										},
										{
											"key": "properties",
											"value": "description"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 14:36:17 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 21:36:17 +0700\",\n    \"status\": 400,\n    \"operationId\": \"7d3ab8eca908b9a1\",\n    \"error\": \"BAD_REQUEST\",\n    \"message\": \"Page size must not be less than one!\",\n    \"path\": \"/forum\"\n}"
						}
					]
				},
				{
					"name": "direction not valid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/forum?page=0&size=5&direction=xyz&properties=description",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "5"
								},
								{
									"key": "direction",
									"value": "xyz"
								},
								{
									"key": "properties",
									"value": "description"
								}
							]
						}
					},
					"response": [
						{
							"name": "400",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/forum?page=0&size=5&direction=xyz&properties=description",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "5"
										},
										{
											"key": "direction",
											"value": "xyz"
										},
										{
											"key": "properties",
											"value": "description"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 14:36:31 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 21:36:31 +0700\",\n    \"status\": 400,\n    \"operationId\": \"bdf03825d99ef872\",\n    \"error\": \"BAD_REQUEST\",\n    \"message\": \"No enum constant org.springframework.data.domain.Sort.Direction.xyz\",\n    \"path\": \"/forum\"\n}"
						}
					]
				},
				{
					"name": "page index is equal or greater than totalPages",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/forum?page=99&size=5&direction=DESC&properties=description",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum"
							],
							"query": [
								{
									"key": "page",
									"value": "99"
								},
								{
									"key": "size",
									"value": "5"
								},
								{
									"key": "direction",
									"value": "DESC"
								},
								{
									"key": "properties",
									"value": "description"
								}
							]
						}
					},
					"response": [
						{
							"name": "204",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/forum?page=4&size=5&direction=DESC&properties=description",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									],
									"query": [
										{
											"key": "page",
											"value": "4"
										},
										{
											"key": "size",
											"value": "5"
										},
										{
											"key": "direction",
											"value": "DESC"
										},
										{
											"key": "properties",
											"value": "description"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Sun, 03 Jul 2022 05:49:57 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "search description contains \"to\"",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/forum?search=description==*to*",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum"
							],
							"query": [
								{
									"key": "search",
									"value": "description==*to*"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/forum?search=description==*to*",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									],
									"query": [
										{
											"key": "search",
											"value": "description==*to*"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 05 Jul 2022 17:38:56 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 48,\n            \"name\": \"Implemented maximize sensor deposit productivity\",\n            \"description\": \"Try to parse the EXE firewall, maybe it will hack the open-source transmitter!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:18 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:18 +0700\"\n        },\n        {\n            \"id\": 47,\n            \"name\": \"Planner responsive Division digital productize\",\n            \"description\": \"The SAS driver is down, synthesize the back-end protocol so we can input the PCI sensor!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:17 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:17 +0700\"\n        },\n        {\n            \"id\": 46,\n            \"name\": \"program bandwidth Cross-group Bacon Mandatory\",\n            \"description\": \"Try to program the AI microchip, maybe it will copy the redundant panel!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:16 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:16 +0700\"\n        },\n        {\n            \"id\": 44,\n            \"name\": \"transmitting synergies\",\n            \"description\": \"bypassing the microchip won't do anything, we need to copy the haptic JSON application!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:15 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:15 +0700\"\n        },\n        {\n            \"id\": 43,\n            \"name\": \"boliviano pixel Washington\",\n            \"description\": \"Try to index the SMTP protocol, maybe it will compress the optical program!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:14 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:14 +0700\"\n        },\n        {\n            \"id\": 42,\n            \"name\": \"Credit Hills applications structure\",\n            \"description\": \"If we index the transmitter, we can get to the JSON array through the open-source XSS feed!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:14 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:14 +0700\"\n        },\n        {\n            \"id\": 41,\n            \"name\": \"auxiliary Fresh Greece Wyoming\",\n            \"description\": \"If we synthesize the bus, we can get to the XML microchip through the bluetooth AI card!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:13 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:13 +0700\"\n        },\n        {\n            \"id\": 40,\n            \"name\": \"Polarised Incredible\",\n            \"description\": \"Use the bluetooth RAM bus, then you can bypass the wireless protocol!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:12 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:12 +0700\"\n        },\n        {\n            \"id\": 38,\n            \"name\": \"unleash utilize empowering application\",\n            \"description\": \"We need to navigate the multi-byte AI system!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:11 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:11 +0700\"\n        },\n        {\n            \"id\": 37,\n            \"name\": \"card Steel\",\n            \"description\": \"We need to override the bluetooth SAS matrix!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:10 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:10 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 20,\n    \"totalPages\": 2,\n    \"last\": false,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 10,\n    \"first\": true,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "search description contains \"to\" AND name not contains \"Implemented\"",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/forum?search=description==*to*;name!=*Implemented*",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum"
							],
							"query": [
								{
									"key": "search",
									"value": "description==*to*;name!=*Implemented*"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/forum?search=description==*to*;name!=*Implemented*",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									],
									"query": [
										{
											"key": "search",
											"value": "description==*to*;name!=*Implemented*"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 05 Jul 2022 17:39:12 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 47,\n            \"name\": \"Planner responsive Division digital productize\",\n            \"description\": \"The SAS driver is down, synthesize the back-end protocol so we can input the PCI sensor!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:17 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:17 +0700\"\n        },\n        {\n            \"id\": 46,\n            \"name\": \"program bandwidth Cross-group Bacon Mandatory\",\n            \"description\": \"Try to program the AI microchip, maybe it will copy the redundant panel!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:16 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:16 +0700\"\n        },\n        {\n            \"id\": 44,\n            \"name\": \"transmitting synergies\",\n            \"description\": \"bypassing the microchip won't do anything, we need to copy the haptic JSON application!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:15 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:15 +0700\"\n        },\n        {\n            \"id\": 43,\n            \"name\": \"boliviano pixel Washington\",\n            \"description\": \"Try to index the SMTP protocol, maybe it will compress the optical program!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:14 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:14 +0700\"\n        },\n        {\n            \"id\": 42,\n            \"name\": \"Credit Hills applications structure\",\n            \"description\": \"If we index the transmitter, we can get to the JSON array through the open-source XSS feed!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:14 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:14 +0700\"\n        },\n        {\n            \"id\": 41,\n            \"name\": \"auxiliary Fresh Greece Wyoming\",\n            \"description\": \"If we synthesize the bus, we can get to the XML microchip through the bluetooth AI card!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:13 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:13 +0700\"\n        },\n        {\n            \"id\": 40,\n            \"name\": \"Polarised Incredible\",\n            \"description\": \"Use the bluetooth RAM bus, then you can bypass the wireless protocol!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:12 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:12 +0700\"\n        },\n        {\n            \"id\": 38,\n            \"name\": \"unleash utilize empowering application\",\n            \"description\": \"We need to navigate the multi-byte AI system!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:11 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:11 +0700\"\n        },\n        {\n            \"id\": 37,\n            \"name\": \"card Steel\",\n            \"description\": \"We need to override the bluetooth SAS matrix!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:10 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:10 +0700\"\n        },\n        {\n            \"id\": 36,\n            \"name\": \"Shoal Ergonomic Plain\",\n            \"description\": \"Use the open-source SMTP capacitor, then you can index the neural bus!\",\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:28:09 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:28:09 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 19,\n    \"totalPages\": 2,\n    \"last\": false,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 10,\n    \"first\": true,\n    \"empty\": false\n}"
						}
					]
				}
			]
		},
		{
			"name": "03.03_/forum/{id} GET",
			"item": [
				{
					"name": "200",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"forumId\", 48);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/forum/{{forumId}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum",
								"{{forumId}}"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/forum/{{forumId}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum",
										"{{forumId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 11 Jul 2022 05:54:54 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 48,\n    \"name\": \"Implemented maximize sensor deposit productivity\",\n    \"description\": \"Try to parse the EXE firewall, maybe it will hack the open-source transmitter!\",\n    \"createdBy\": \"javadev111\",\n    \"createdDate\": \"2022-07-06 00:28:18 +0700\",\n    \"lastModifiedBy\": \"javadev111\",\n    \"lastModifiedDate\": \"2022-07-06 00:28:18 +0700\"\n}"
						}
					]
				},
				{
					"name": "400",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"forumId\", \"abc\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/forum/{{forumId}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum",
								"{{forumId}}"
							]
						}
					},
					"response": [
						{
							"name": "400",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/forum/{{forumId}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum",
										"{{forumId}}"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 14:38:03 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 21:38:03 +0700\",\n    \"status\": 400,\n    \"operationId\": \"e6012c8f4da910a9\",\n    \"error\": \"BAD_REQUEST\",\n    \"message\": \"For input string: \\\"abc\\\"\",\n    \"path\": \"/forum/abc\"\n}"
						}
					]
				},
				{
					"name": "404",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"forumId\", 1000000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/forum/{{forumId}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum",
								"{{forumId}}"
							]
						}
					},
					"response": [
						{
							"name": "404",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/forum/{{forumId}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum",
										"{{forumId}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 14:38:20 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 21:38:20 +0700\",\n    \"status\": 404,\n    \"operationId\": \"bd76c0c5e9de8eb1\",\n    \"error\": \"RESOURCE_NOT_FOUND_ERROR\",\n    \"message\": \"Forum, id:1000000 not found\",\n    \"path\": \"/forum/1000000\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "03.06_/forum/:id DELETE",
			"item": [
				{
					"name": "delete forum",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomWords}}\",\r\n    \"description\": \"{{$randomPhrase}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/forum/:id",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "24"
								}
							]
						}
					},
					"response": [
						{
							"name": "403_<=ROLE_USER",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomWords}}\",\r\n    \"description\": \"{{$randomPhrase}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/forum/:id",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jul 2022 15:26:47 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-21 22:26:47 +0700\",\n    \"status\": 403,\n    \"operationId\": \"72ca30904eb33b9e\",\n    \"error\": \"FORBIDDEN\",\n    \"message\": \"Access is denied\",\n    \"path\": \"/forum/24\"\n}"
						},
						{
							"name": "200_>=ROLE_MODERATOR",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomWords}}\",\r\n    \"description\": \"{{$randomPhrase}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/forum/:id",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jul 2022 15:27:46 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"DELETE FORUM SUCCESS\",\n    \"message\": \"You have deleted forum \\\"Music Avon back ROI bluetooth\\\" successfully\"\n}"
						},
						{
							"name": "404",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomWords}}\",\r\n    \"description\": \"{{$randomPhrase}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/forum/:id",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jul 2022 15:29:00 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-21 22:29:00 +0700\",\n    \"status\": 404,\n    \"operationId\": \"14a38c22e81b1077\",\n    \"error\": \"RESOURCE_NOT_FOUND_ERROR\",\n    \"message\": \"Forum, id:24 not found\",\n    \"path\": \"/forum/24\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "04.01_/post POST",
			"item": [
				{
					"name": "create post",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"forumId\", 24);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomWords}}\",\r\n    \"content\": \"{{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}\",\r\n    \"forumId\": {{forumId}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/post",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomWords}}\",\r\n    \"content\": \"{{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}\",\r\n    \"forumId\": 18\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/post",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 05 Jul 2022 15:17:00 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"CREATE POST SUCCESS\",\n    \"message\": \"You have create post \\\"intangible Developer Oklahoma\\\" successfully\"\n}"
						}
					]
				},
				{
					"name": "No Auth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomWords}}\",\r\n    \"content\": \"{{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}\",\r\n    \"forumId\": 48\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/post",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							]
						}
					},
					"response": [
						{
							"name": "401",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomWords}}\",\r\n    \"content\": \"{{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}\",\r\n    \"forumId\": 48\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/post",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 14:39:59 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 21:39:59 +0700\",\n    \"status\": 401,\n    \"operationId\": \"d458534275c5efbd\",\n    \"error\": \"UNAUTHORIZED\",\n    \"message\": \"Full authentication is required to access this resource\",\n    \"path\": \"/post\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "04.02_/post GET",
			"item": [
				{
					"name": "default - page index 0, size 10, direction DESC, properties lastModifiedDate",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 05 Jul 2022 17:39:40 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 17,\n            \"name\": \"Tasty Frozen artificial\",\n            \"content\": \"Try to bypass the USB pixel, maybe it will generate the haptic port!, I'll compress the back-end GB sensor, that should card the SAS system!, We need to copy the auxiliary FTP application!, You can't program the sensor without connecting the optical FTP firewall!, The CSS monitor is down, index the digital sensor so we can hack the XSS feed!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:33:44 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:33:44 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 1,\n    \"totalPages\": 1,\n    \"last\": true,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 1,\n    \"first\": true,\n    \"empty\": false\n}"
						},
						{
							"name": "200 2",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jul 2022 15:24:08 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 33,\n            \"name\": \"facilitate Bike Brand\",\n            \"content\": \"Use the mobile CSS program, then you can input the 1080p card!, compressing the feed won't do anything, we need to back up the cross-platform SAS matrix!, overriding the bus won't do anything, we need to connect the solid state SAS transmitter!, You can't hack the transmitter without navigating the cross-platform GB bandwidth!, copying the sensor won't do anything, we need to quantify the digital HTTP protocol!\",\n            \"forumId\": 24,\n            \"createdBy\": \"admin1\",\n            \"createdDate\": \"2022-07-21 22:22:20 +0700\",\n            \"lastModifiedBy\": \"admin1\",\n            \"lastModifiedDate\": \"2022-07-21 22:22:20 +0700\"\n        },\n        {\n            \"id\": 32,\n            \"name\": \"Plastic Games mesh\",\n            \"content\": \"Use the primary PNG protocol, then you can synthesize the multi-byte program!, Use the optical HDD firewall, then you can copy the auxiliary program!, Try to program the XSS monitor, maybe it will bypass the wireless microchip!, You can't connect the feed without quantifying the primary JSON application!, calculating the capacitor won't do anything, we need to compress the digital FTP panel!\",\n            \"forumId\": 24,\n            \"createdBy\": \"admin1\",\n            \"createdDate\": \"2022-07-21 22:22:19 +0700\",\n            \"lastModifiedBy\": \"admin1\",\n            \"lastModifiedDate\": \"2022-07-21 22:22:19 +0700\"\n        },\n        {\n            \"id\": 31,\n            \"name\": \"engage Fish Steel\",\n            \"content\": \"Use the multi-byte RAM monitor, then you can synthesize the redundant sensor!, If we quantify the microchip, we can get to the SMTP microchip through the optical SMTP hard drive!, We need to reboot the wireless HTTP hard drive!, compressing the pixel won't do anything, we need to connect the optical XSS interface!, I'll compress the online GB pixel, that should transmitter the GB transmitter!\",\n            \"forumId\": 24,\n            \"createdBy\": \"admin1\",\n            \"createdDate\": \"2022-07-21 22:22:18 +0700\",\n            \"lastModifiedBy\": \"admin1\",\n            \"lastModifiedDate\": \"2022-07-21 22:22:18 +0700\"\n        },\n        {\n            \"id\": 30,\n            \"name\": \"Arkansas Bike Account Azerbaijan\",\n            \"content\": \"Use the multi-byte ADP protocol, then you can hack the online pixel!, If we input the card, we can get to the SMS program through the cross-platform IB matrix!, Try to transmit the PCI application, maybe it will compress the wireless port!, Try to index the JSON driver, maybe it will bypass the virtual bandwidth!, We need to compress the primary IB driver!\",\n            \"forumId\": 24,\n            \"createdBy\": \"admin1\",\n            \"createdDate\": \"2022-07-21 22:22:17 +0700\",\n            \"lastModifiedBy\": \"admin1\",\n            \"lastModifiedDate\": \"2022-07-21 22:22:17 +0700\"\n        },\n        {\n            \"id\": 29,\n            \"name\": \"Bedfordshire Concrete Walks Avon Philippine\",\n            \"content\": \"Use the digital EXE monitor, then you can parse the haptic feed!, You can't synthesize the card without synthesizing the online XSS firewall!, Use the solid state COM feed, then you can input the cross-platform pixel!, We need to input the redundant SQL firewall!, The RAM transmitter is down, hack the multi-byte monitor so we can calculate the FTP panel!\",\n            \"forumId\": 23,\n            \"createdBy\": \"admin1\",\n            \"createdDate\": \"2022-07-21 17:50:40 +0700\",\n            \"lastModifiedBy\": \"admin1\",\n            \"lastModifiedDate\": \"2022-07-21 17:50:40 +0700\"\n        },\n        {\n            \"id\": 28,\n            \"name\": \"Executive Virgin quantify Dinar Handcrafted\",\n            \"content\": \"You can't connect the sensor without parsing the mobile FTP interface!, We need to parse the redundant USB protocol!, We need to parse the multi-byte THX firewall!, The PCI alarm is down, override the bluetooth sensor so we can navigate the PNG driver!, If we calculate the alarm, we can get to the EXE pixel through the neural SCSI card!\",\n            \"forumId\": 23,\n            \"createdBy\": \"admin1\",\n            \"createdDate\": \"2022-07-21 17:50:39 +0700\",\n            \"lastModifiedBy\": \"admin1\",\n            \"lastModifiedDate\": \"2022-07-21 17:50:39 +0700\"\n        },\n        {\n            \"id\": 27,\n            \"name\": \"Quality Fish Kip SMTP\",\n            \"content\": \"Use the neural AI card, then you can navigate the redundant capacitor!, If we navigate the firewall, we can get to the XML port through the online HTTP pixel!, We need to hack the haptic EXE bandwidth!, If we connect the alarm, we can get to the FTP feed through the optical TCP hard drive!, If we bypass the alarm, we can get to the AI capacitor through the 1080p CSS microchip!\",\n            \"forumId\": 23,\n            \"createdBy\": \"admin1\",\n            \"createdDate\": \"2022-07-21 17:50:38 +0700\",\n            \"lastModifiedBy\": \"admin1\",\n            \"lastModifiedDate\": \"2022-07-21 17:50:38 +0700\"\n        },\n        {\n            \"id\": 26,\n            \"name\": \"Metal Ergonomic cross-platform Multi-layered invoice\",\n            \"content\": \"The SAS card is down, copy the wireless feed so we can input the CSS pixel!, We need to parse the primary SDD microchip!, The PCI port is down, override the wireless feed so we can generate the FTP array!, The THX circuit is down, index the primary alarm so we can input the JBOD sensor!, I'll navigate the multi-byte SQL firewall, that should matrix the RAM program!\",\n            \"forumId\": 22,\n            \"createdBy\": \"moderator1\",\n            \"createdDate\": \"2022-07-15 23:14:10 +0700\",\n            \"lastModifiedBy\": \"moderator1\",\n            \"lastModifiedDate\": \"2022-07-15 23:14:10 +0700\"\n        },\n        {\n            \"id\": 25,\n            \"name\": \"Practical redefine\",\n            \"content\": \"I'll input the solid state RSS sensor, that should hard drive the SMTP matrix!, transmitting the bandwidth won't do anything, we need to back up the virtual RAM program!, Use the bluetooth HTTP interface, then you can synthesize the digital bus!, If we compress the interface, we can get to the RAM driver through the virtual USB circuit!, Use the cross-platform SMTP port, then you can transmit the redundant sensor!\",\n            \"forumId\": 22,\n            \"createdBy\": \"moderator1\",\n            \"createdDate\": \"2022-07-15 23:14:09 +0700\",\n            \"lastModifiedBy\": \"moderator1\",\n            \"lastModifiedDate\": \"2022-07-15 23:14:09 +0700\"\n        },\n        {\n            \"id\": 24,\n            \"name\": \"withdrawal bypassing Metal Peso\",\n            \"content\": \"You can't back up the interface without compressing the open-source SAS panel!, calculating the circuit won't do anything, we need to parse the haptic JBOD microchip!, We need to transmit the online SMS transmitter!, I'll synthesize the optical IB hard drive, that should protocol the XML firewall!, The THX panel is down, input the solid state system so we can index the SDD alarm!\",\n            \"forumId\": 22,\n            \"createdBy\": \"moderator1\",\n            \"createdDate\": \"2022-07-15 23:14:09 +0700\",\n            \"lastModifiedBy\": \"moderator1\",\n            \"lastModifiedDate\": \"2022-07-15 23:14:09 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageSize\": 10,\n        \"pageNumber\": 0,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 33,\n    \"totalPages\": 4,\n    \"last\": false,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 10,\n    \"first\": true,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "get deleted post - isActive = false",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?search=isActive=bool=false",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "search",
									"value": "isActive=bool=false"
								}
							]
						}
					},
					"response": [
						{
							"name": "403_ROLE_USER",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?search=isActive=bool=false",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "search",
											"value": "isActive=bool=false"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jul 2022 15:59:10 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-14 22:59:10 +0700\",\n    \"status\": 403,\n    \"operationId\": \"f17389b174fcf380\",\n    \"error\": \"FORBIDDEN\",\n    \"message\": \"User does not have permission to search inactive resource\",\n    \"path\": \"/post\"\n}"
						},
						{
							"name": "200_>=ROLE_MODERATOR",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?search=isActive=bool=false",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "search",
											"value": "isActive=bool=false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jul 2022 16:00:24 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 65,\n            \"name\": \"Arkansas XSS Dynamic Grenada Associate\",\n            \"content\": \"Use the virtual JBOD matrix, then you can compress the redundant card!, I'll copy the multi-byte GB capacitor, that should program the JBOD microchip!, Try to synthesize the RAM hard drive, maybe it will quantify the online system!, Use the optical HDD microchip, then you can transmit the redundant interface!, Use the bluetooth SSL panel, then you can back up the optical capacitor!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-14 14:31:08 +0700\",\n            \"lastModifiedBy\": \"admin\",\n            \"lastModifiedDate\": \"2022-07-14 14:31:51 +0700\"\n        },\n        {\n            \"id\": 63,\n            \"name\": \"York hacking Account Customer-focused dedicated\",\n            \"content\": \"compressing the protocol won't do anything, we need to back up the neural XML panel!, We need to input the wireless SMS pixel!, I'll transmit the wireless JSON matrix, that should program the AGP interface!, Try to connect the SQL interface, maybe it will generate the mobile microchip!, We need to input the auxiliary HDD bandwidth!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-14 14:22:58 +0700\",\n            \"lastModifiedBy\": \"javadev311\",\n            \"lastModifiedDate\": \"2022-07-14 14:29:14 +0700\"\n        },\n        {\n            \"id\": 64,\n            \"name\": \"copying Cotton Kids\",\n            \"content\": \"navigating the pixel won't do anything, we need to copy the online SQL interface!, Use the cross-platform AI firewall, then you can back up the virtual sensor!, copying the circuit won't do anything, we need to bypass the wireless SMS sensor!, We need to input the multi-byte THX monitor!, hacking the circuit won't do anything, we need to input the 1080p PCI matrix!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-14 14:23:03 +0700\",\n            \"lastModifiedBy\": \"javadev311\",\n            \"lastModifiedDate\": \"2022-07-14 14:23:45 +0700\"\n        },\n        {\n            \"id\": 61,\n            \"name\": \"24/365 Borders Soap Dollar\",\n            \"content\": \"quantifying the capacitor won't do anything, we need to bypass the back-end SQL hard drive!, Use the back-end EXE sensor, then you can reboot the back-end panel!, I'll quantify the online SQL interface, that should feed the AGP sensor!, We need to input the cross-platform RSS capacitor!, We need to copy the neural THX microchip!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-14 13:50:41 +0700\",\n            \"lastModifiedBy\": \"admin\",\n            \"lastModifiedDate\": \"2022-07-14 13:53:48 +0700\"\n        },\n        {\n            \"id\": 58,\n            \"name\": \"Granite integrated Berkshire parsing\",\n            \"content\": \"The SDD protocol is down, program the wireless interface so we can override the XSS capacitor!, You can't hack the capacitor without transmitting the redundant SDD monitor!, I'll input the cross-platform AI feed, that should interface the FTP system!, You can't copy the card without backing up the redundant IB microchip!, Use the back-end USB program, then you can navigate the open-source system!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-14 12:14:11 +0700\",\n            \"lastModifiedBy\": \"javadev311\",\n            \"lastModifiedDate\": \"2022-07-14 13:12:24 +0700\"\n        },\n        {\n            \"id\": 59,\n            \"name\": \"Product hack indigo Gibraltar\",\n            \"content\": \"We need to override the open-source SAS program!, You can't connect the hard drive without navigating the 1080p SDD bandwidth!, I'll calculate the optical SCSI panel, that should system the USB firewall!, Try to generate the FTP application, maybe it will navigate the mobile microchip!, Use the bluetooth XML port, then you can transmit the open-source panel!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-14 12:14:12 +0700\",\n            \"lastModifiedBy\": \"javadev311\",\n            \"lastModifiedDate\": \"2022-07-14 12:35:15 +0700\"\n        },\n        {\n            \"id\": 50,\n            \"name\": \"SQL yellow Pound Tasty architecture\",\n            \"content\": \"Try to override the PNG transmitter, maybe it will transmit the solid state hard drive!, transmitting the card won't do anything, we need to copy the 1080p JSON bus!, We need to copy the virtual SSL pixel!, calculating the array won't do anything, we need to generate the wireless SAS bus!, The RAM transmitter is down, quantify the primary feed so we can override the JBOD interface!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:55:01 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-11 23:03:06 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 7,\n    \"totalPages\": 1,\n    \"last\": true,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 7,\n    \"first\": true,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "No Auth get deleted post - isActive = false Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?search=isActive=bool=false",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "search",
									"value": "isActive=bool=false"
								}
							]
						}
					},
					"response": [
						{
							"name": "403_ROLE_ANONYMOUS",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?search=isActive=bool=false",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "search",
											"value": "isActive=bool=false"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jul 2022 15:59:10 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-14 22:59:10 +0700\",\n    \"status\": 403,\n    \"operationId\": \"f17389b174fcf380\",\n    \"error\": \"FORBIDDEN\",\n    \"message\": \"User does not have permission to search inactive resource\",\n    \"path\": \"/post\"\n}"
						}
					]
				},
				{
					"name": "pageable - page index 2, total page 6",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?page=2&size=3&direction=DESC&properties=name,content",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								},
								{
									"key": "size",
									"value": "3"
								},
								{
									"key": "direction",
									"value": "DESC"
								},
								{
									"key": "properties",
									"value": "name,content"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?page=2&size=3&direction=DESC&properties=name,content",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "size",
											"value": "3"
										},
										{
											"key": "direction",
											"value": "DESC"
										},
										{
											"key": "properties",
											"value": "name,content"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 05 Jul 2022 17:40:41 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 32,\n            \"name\": \"invoice Avon discrete Unbranded\",\n            \"content\": \"programming the sensor won't do anything, we need to index the redundant SCSI feed!, I'll input the solid state XSS sensor, that should driver the SMTP driver!, We need to transmit the mobile XML bus!, Use the back-end SMTP matrix, then you can override the cross-platform alarm!, Use the solid state PNG port, then you can generate the virtual protocol!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:35 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:35 +0700\"\n        },\n        {\n            \"id\": 20,\n            \"name\": \"indigo salmon Garden Computer\",\n            \"content\": \"Try to synthesize the AI matrix, maybe it will connect the digital system!, navigating the application won't do anything, we need to index the back-end SMTP feed!, I'll navigate the digital JSON bus, that should transmitter the THX array!, Use the digital XML transmitter, then you can synthesize the 1080p firewall!, We need to navigate the optical HTTP program!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:24 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:24 +0700\"\n        },\n        {\n            \"id\": 21,\n            \"name\": \"Home hack deposit AI withdrawal\",\n            \"content\": \"If we transmit the feed, we can get to the RSS feed through the online THX panel!, You can't generate the driver without synthesizing the digital SAS application!, We need to bypass the redundant IB matrix!, We need to input the wireless AI pixel!, We need to hack the auxiliary FTP array!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:25 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:25 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 6,\n        \"pageNumber\": 2,\n        \"pageSize\": 3,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 17,\n    \"totalPages\": 6,\n    \"last\": false,\n    \"size\": 3,\n    \"number\": 2,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 3,\n    \"first\": false,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "pageable - page index >= totalPage",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?page=9999999&size=3&direction=DESC&properties=name,content",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "page",
									"value": "9999999"
								},
								{
									"key": "size",
									"value": "3"
								},
								{
									"key": "direction",
									"value": "DESC"
								},
								{
									"key": "properties",
									"value": "name,content"
								}
							]
						}
					},
					"response": [
						{
							"name": "204",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?page=9999999&size=3&direction=DESC&properties=name,content",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "page",
											"value": "9999999"
										},
										{
											"key": "size",
											"value": "3"
										},
										{
											"key": "direction",
											"value": "DESC"
										},
										{
											"key": "properties",
											"value": "name,content"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 14:44:51 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "id in (33,32,31)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?search=id=in=(33,32,31)",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "search",
									"value": "id=in=(33,32,31)"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?search=id=in=(33,32,31)",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "search",
											"value": "id=in=(33,32,31)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 05 Jul 2022 17:42:48 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 33,\n            \"name\": \"SDR red\",\n            \"content\": \"You can't quantify the circuit without hacking the virtual THX bus!, The AGP card is down, quantify the virtual alarm so we can copy the AI transmitter!, We need to input the virtual HDD pixel!, Try to hack the XSS protocol, maybe it will quantify the solid state system!, Try to quantify the EXE program, maybe it will quantify the digital sensor!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:35 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:35 +0700\"\n        },\n        {\n            \"id\": 32,\n            \"name\": \"invoice Avon discrete Unbranded\",\n            \"content\": \"programming the sensor won't do anything, we need to index the redundant SCSI feed!, I'll input the solid state XSS sensor, that should driver the SMTP driver!, We need to transmit the mobile XML bus!, Use the back-end SMTP matrix, then you can override the cross-platform alarm!, Use the solid state PNG port, then you can generate the virtual protocol!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:35 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:35 +0700\"\n        },\n        {\n            \"id\": 31,\n            \"name\": \"dot-com enable\",\n            \"content\": \"Try to compress the SMS alarm, maybe it will quantify the haptic card!, Try to generate the ADP array, maybe it will reboot the online driver!, Use the neural RAM card, then you can reboot the online firewall!, compressing the monitor won't do anything, we need to navigate the primary PNG feed!, If we quantify the bus, we can get to the USB interface through the multi-byte CSS bus!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:34 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:34 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 3,\n    \"totalPages\": 1,\n    \"last\": true,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 3,\n    \"first\": true,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "id not in (33,32,31)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?search=id=out=(33,32,31)",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "search",
									"value": "id=out=(33,32,31)"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?search=id=out=(33,32,31)",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "search",
											"value": "id=out=(33,32,31)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 05 Jul 2022 17:43:22 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 30,\n            \"name\": \"Fish Mouse Switchable\",\n            \"content\": \"If we navigate the interface, we can get to the SAS sensor through the haptic COM capacitor!, If we bypass the matrix, we can get to the GB hard drive through the haptic SDD alarm!, You can't quantify the program without navigating the virtual JSON interface!, The GB card is down, back up the neural driver so we can bypass the JSON matrix!, You can't synthesize the monitor without compressing the cross-platform SMS bus!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:33 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:33 +0700\"\n        },\n        {\n            \"id\": 29,\n            \"name\": \"tan Books Branding invoice Bedfordshire\",\n            \"content\": \"Use the neural AI alarm, then you can copy the primary array!, Use the 1080p XML microchip, then you can connect the online monitor!, calculating the panel won't do anything, we need to parse the digital SSL bus!, Use the auxiliary EXE alarm, then you can quantify the wireless monitor!, You can't copy the firewall without generating the redundant XML pixel!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:32 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:32 +0700\"\n        },\n        {\n            \"id\": 28,\n            \"name\": \"transition 1080p disintermediate invoice\",\n            \"content\": \"programming the bandwidth won't do anything, we need to copy the neural AI feed!, The SCSI pixel is down, reboot the wireless firewall so we can parse the ADP circuit!, I'll program the 1080p CSS transmitter, that should panel the THX driver!, If we hack the bus, we can get to the TCP application through the haptic RSS transmitter!, If we calculate the hard drive, we can get to the USB microchip through the wireless SDD hard drive!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:31 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:31 +0700\"\n        },\n        {\n            \"id\": 27,\n            \"name\": \"moratorium programming SMS Frozen PCI\",\n            \"content\": \"I'll quantify the 1080p TCP microchip, that should firewall the SAS transmitter!, I'll compress the wireless XML protocol, that should sensor the AGP card!, Use the wireless TCP pixel, then you can input the 1080p circuit!, If we compress the system, we can get to the SDD bandwidth through the auxiliary IB port!, If we input the driver, we can get to the TCP sensor through the back-end SMS system!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:31 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:31 +0700\"\n        },\n        {\n            \"id\": 26,\n            \"name\": \"generating program pixel Concrete\",\n            \"content\": \"Use the digital SMS circuit, then you can compress the haptic microchip!, If we parse the interface, we can get to the IB circuit through the bluetooth XSS application!, We need to transmit the mobile JSON monitor!, Use the redundant COM bandwidth, then you can input the multi-byte array!, You can't synthesize the capacitor without compressing the primary PCI sensor!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:30 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:30 +0700\"\n        },\n        {\n            \"id\": 25,\n            \"name\": \"Cambridgeshire withdrawal feed\",\n            \"content\": \"transmitting the application won't do anything, we need to back up the primary SSL pixel!, compressing the alarm won't do anything, we need to program the cross-platform GB hard drive!, Try to calculate the GB transmitter, maybe it will compress the digital matrix!, You can't input the firewall without hacking the redundant PNG program!, The SQL panel is down, override the redundant panel so we can quantify the RAM bandwidth!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:28 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:28 +0700\"\n        },\n        {\n            \"id\": 24,\n            \"name\": \"Garden redefine Creative Gabon\",\n            \"content\": \"Use the 1080p ADP bandwidth, then you can parse the multi-byte monitor!, generating the protocol won't do anything, we need to program the digital ADP monitor!, Try to synthesize the USB sensor, maybe it will compress the optical pixel!, You can't compress the sensor without quantifying the 1080p SMS port!, If we program the application, we can get to the SMS bus through the wireless TCP protocol!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:27 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:27 +0700\"\n        },\n        {\n            \"id\": 23,\n            \"name\": \"architect Berkshire\",\n            \"content\": \"I'll hack the neural RSS feed, that should matrix the EXE hard drive!, You can't bypass the driver without parsing the back-end SQL matrix!, Use the optical SQL alarm, then you can quantify the optical card!, If we back up the bandwidth, we can get to the ADP sensor through the solid state ADP panel!, If we hack the card, we can get to the SCSI microchip through the wireless SAS port!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:26 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:26 +0700\"\n        },\n        {\n            \"id\": 22,\n            \"name\": \"Designer copy Solutions Gateway Chips\",\n            \"content\": \"You can't compress the interface without hacking the open-source SAS program!, copying the sensor won't do anything, we need to calculate the multi-byte GB alarm!, The HTTP pixel is down, generate the cross-platform alarm so we can navigate the GB program!, I'll transmit the mobile PNG bus, that should interface the SQL protocol!, We need to quantify the online PCI feed!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:26 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:26 +0700\"\n        },\n        {\n            \"id\": 21,\n            \"name\": \"Home hack deposit AI withdrawal\",\n            \"content\": \"If we transmit the feed, we can get to the RSS feed through the online THX panel!, You can't generate the driver without synthesizing the digital SAS application!, We need to bypass the redundant IB matrix!, We need to input the wireless AI pixel!, We need to hack the auxiliary FTP array!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:25 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:25 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 14,\n    \"totalPages\": 2,\n    \"last\": false,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 10,\n    \"first\": true,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "name contains red",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?search=name==*red*",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "search",
									"value": "name==*red*"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?search=name==*red*",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "search",
											"value": "name==*red*"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 05 Jul 2022 17:44:57 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 33,\n            \"name\": \"SDR red\",\n            \"content\": \"You can't quantify the circuit without hacking the virtual THX bus!, The AGP card is down, quantify the virtual alarm so we can copy the AI transmitter!, We need to input the virtual HDD pixel!, Try to hack the XSS protocol, maybe it will quantify the solid state system!, Try to quantify the EXE program, maybe it will quantify the digital sensor!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:35 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:35 +0700\"\n        },\n        {\n            \"id\": 24,\n            \"name\": \"Garden redefine Creative Gabon\",\n            \"content\": \"Use the 1080p ADP bandwidth, then you can parse the multi-byte monitor!, generating the protocol won't do anything, we need to program the digital ADP monitor!, Try to synthesize the USB sensor, maybe it will compress the optical pixel!, You can't compress the sensor without quantifying the 1080p SMS port!, If we program the application, we can get to the SMS bus through the wireless TCP protocol!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:27 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:27 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 2,\n    \"totalPages\": 1,\n    \"last\": true,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 2,\n    \"first\": true,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "content contains circuit",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?search=content==*circuit*",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "search",
									"value": "content==*circuit*"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?search=content==*circuit*",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "search",
											"value": "content==*circuit*"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 05 Jul 2022 17:45:47 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 33,\n            \"name\": \"SDR red\",\n            \"content\": \"You can't quantify the circuit without hacking the virtual THX bus!, The AGP card is down, quantify the virtual alarm so we can copy the AI transmitter!, We need to input the virtual HDD pixel!, Try to hack the XSS protocol, maybe it will quantify the solid state system!, Try to quantify the EXE program, maybe it will quantify the digital sensor!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:35 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:35 +0700\"\n        },\n        {\n            \"id\": 28,\n            \"name\": \"transition 1080p disintermediate invoice\",\n            \"content\": \"programming the bandwidth won't do anything, we need to copy the neural AI feed!, The SCSI pixel is down, reboot the wireless firewall so we can parse the ADP circuit!, I'll program the 1080p CSS transmitter, that should panel the THX driver!, If we hack the bus, we can get to the TCP application through the haptic RSS transmitter!, If we calculate the hard drive, we can get to the USB microchip through the wireless SDD hard drive!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:31 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:31 +0700\"\n        },\n        {\n            \"id\": 27,\n            \"name\": \"moratorium programming SMS Frozen PCI\",\n            \"content\": \"I'll quantify the 1080p TCP microchip, that should firewall the SAS transmitter!, I'll compress the wireless XML protocol, that should sensor the AGP card!, Use the wireless TCP pixel, then you can input the 1080p circuit!, If we compress the system, we can get to the SDD bandwidth through the auxiliary IB port!, If we input the driver, we can get to the TCP sensor through the back-end SMS system!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:31 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:31 +0700\"\n        },\n        {\n            \"id\": 26,\n            \"name\": \"generating program pixel Concrete\",\n            \"content\": \"Use the digital SMS circuit, then you can compress the haptic microchip!, If we parse the interface, we can get to the IB circuit through the bluetooth XSS application!, We need to transmit the mobile JSON monitor!, Use the redundant COM bandwidth, then you can input the multi-byte array!, You can't synthesize the capacitor without compressing the primary PCI sensor!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:30 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:30 +0700\"\n        },\n        {\n            \"id\": 18,\n            \"name\": \"Diverse turquoise\",\n            \"content\": \"I'll bypass the redundant PNG bandwidth, that should system the PNG protocol!, We need to generate the digital PNG program!, The GB program is down, calculate the virtual panel so we can compress the XML bus!, bypassing the interface won't do anything, we need to synthesize the redundant GB firewall!, Use the auxiliary THX circuit, then you can transmit the wireless protocol!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:22 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:22 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 5,\n    \"totalPages\": 1,\n    \"last\": true,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 5,\n    \"first\": true,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "content contains circuitAND name not contains red",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?search=content==*circuit*;name!=*red*",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "search",
									"value": "content==*circuit*;name!=*red*"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?search=content==*circuit*;name!=*red*",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "search",
											"value": "content==*circuit*;name!=*red*"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 05 Jul 2022 17:47:18 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 28,\n            \"name\": \"transition 1080p disintermediate invoice\",\n            \"content\": \"programming the bandwidth won't do anything, we need to copy the neural AI feed!, The SCSI pixel is down, reboot the wireless firewall so we can parse the ADP circuit!, I'll program the 1080p CSS transmitter, that should panel the THX driver!, If we hack the bus, we can get to the TCP application through the haptic RSS transmitter!, If we calculate the hard drive, we can get to the USB microchip through the wireless SDD hard drive!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:31 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:31 +0700\"\n        },\n        {\n            \"id\": 27,\n            \"name\": \"moratorium programming SMS Frozen PCI\",\n            \"content\": \"I'll quantify the 1080p TCP microchip, that should firewall the SAS transmitter!, I'll compress the wireless XML protocol, that should sensor the AGP card!, Use the wireless TCP pixel, then you can input the 1080p circuit!, If we compress the system, we can get to the SDD bandwidth through the auxiliary IB port!, If we input the driver, we can get to the TCP sensor through the back-end SMS system!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:31 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:31 +0700\"\n        },\n        {\n            \"id\": 26,\n            \"name\": \"generating program pixel Concrete\",\n            \"content\": \"Use the digital SMS circuit, then you can compress the haptic microchip!, If we parse the interface, we can get to the IB circuit through the bluetooth XSS application!, We need to transmit the mobile JSON monitor!, Use the redundant COM bandwidth, then you can input the multi-byte array!, You can't synthesize the capacitor without compressing the primary PCI sensor!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:30 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:30 +0700\"\n        },\n        {\n            \"id\": 18,\n            \"name\": \"Diverse turquoise\",\n            \"content\": \"I'll bypass the redundant PNG bandwidth, that should system the PNG protocol!, We need to generate the digital PNG program!, The GB program is down, calculate the virtual panel so we can compress the XML bus!, bypassing the interface won't do anything, we need to synthesize the redundant GB firewall!, Use the auxiliary THX circuit, then you can transmit the wireless protocol!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:22 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:22 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 4,\n    \"totalPages\": 1,\n    \"last\": true,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 4,\n    \"first\": true,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "content contains quantify,redundant,compressing",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?search=content==*quantify*;content==*redundant*;content==*compressing*",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "search",
									"value": "content==*quantify*;content==*redundant*;content==*compressing*"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?search=content==*quantify*;content==*redundant*;content==*compressing*",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "search",
											"value": "content==*quantify*;content==*redundant*;content==*compressing*"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 05 Jul 2022 17:50:08 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 25,\n            \"name\": \"Cambridgeshire withdrawal feed\",\n            \"content\": \"transmitting the application won't do anything, we need to back up the primary SSL pixel!, compressing the alarm won't do anything, we need to program the cross-platform GB hard drive!, Try to calculate the GB transmitter, maybe it will compress the digital matrix!, You can't input the firewall without hacking the redundant PNG program!, The SQL panel is down, override the redundant panel so we can quantify the RAM bandwidth!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:28 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:28 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 1,\n    \"totalPages\": 1,\n    \"last\": true,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 1,\n    \"first\": true,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "name contains red OR discrete",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?search=name==*red*,name==**discrete*",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "search",
									"value": "name==*red*,name==**discrete*"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?search=name==*red*,name==**discrete*",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "search",
											"value": "name==*red*,name==**discrete*"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 05 Jul 2022 17:51:46 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 33,\n            \"name\": \"SDR red\",\n            \"content\": \"You can't quantify the circuit without hacking the virtual THX bus!, The AGP card is down, quantify the virtual alarm so we can copy the AI transmitter!, We need to input the virtual HDD pixel!, Try to hack the XSS protocol, maybe it will quantify the solid state system!, Try to quantify the EXE program, maybe it will quantify the digital sensor!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:35 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:35 +0700\"\n        },\n        {\n            \"id\": 32,\n            \"name\": \"invoice Avon discrete Unbranded\",\n            \"content\": \"programming the sensor won't do anything, we need to index the redundant SCSI feed!, I'll input the solid state XSS sensor, that should driver the SMTP driver!, We need to transmit the mobile XML bus!, Use the back-end SMTP matrix, then you can override the cross-platform alarm!, Use the solid state PNG port, then you can generate the virtual protocol!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:35 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:35 +0700\"\n        },\n        {\n            \"id\": 24,\n            \"name\": \"Garden redefine Creative Gabon\",\n            \"content\": \"Use the 1080p ADP bandwidth, then you can parse the multi-byte monitor!, generating the protocol won't do anything, we need to program the digital ADP monitor!, Try to synthesize the USB sensor, maybe it will compress the optical pixel!, You can't compress the sensor without quantifying the 1080p SMS port!, If we program the application, we can get to the SMS bus through the wireless TCP protocol!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:27 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:27 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 3,\n    \"totalPages\": 1,\n    \"last\": true,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 3,\n    \"first\": true,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "full params - pageable + search",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?page=2&size=3&direction=DESC&properties=name,content&search=name!=*red*;name!=**discrete*;id>21",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								},
								{
									"key": "size",
									"value": "3"
								},
								{
									"key": "direction",
									"value": "DESC"
								},
								{
									"key": "properties",
									"value": "name,content"
								},
								{
									"key": "search",
									"value": "name!=*red*;name!=**discrete*;id>21"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?page=2&size=3&direction=DESC&properties=name,content&search=name!=*red*;name!=**discrete*;id>21",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "size",
											"value": "3"
										},
										{
											"key": "direction",
											"value": "DESC"
										},
										{
											"key": "properties",
											"value": "name,content"
										},
										{
											"key": "search",
											"value": "name!=*red*;name!=**discrete*;id>21"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 05 Jul 2022 17:53:36 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 22,\n            \"name\": \"Designer copy Solutions Gateway Chips\",\n            \"content\": \"You can't compress the interface without hacking the open-source SAS program!, copying the sensor won't do anything, we need to calculate the multi-byte GB alarm!, The HTTP pixel is down, generate the cross-platform alarm so we can navigate the GB program!, I'll transmit the mobile PNG bus, that should interface the SQL protocol!, We need to quantify the online PCI feed!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:26 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:26 +0700\"\n        },\n        {\n            \"id\": 25,\n            \"name\": \"Cambridgeshire withdrawal feed\",\n            \"content\": \"transmitting the application won't do anything, we need to back up the primary SSL pixel!, compressing the alarm won't do anything, we need to program the cross-platform GB hard drive!, Try to calculate the GB transmitter, maybe it will compress the digital matrix!, You can't input the firewall without hacking the redundant PNG program!, The SQL panel is down, override the redundant panel so we can quantify the RAM bandwidth!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:28 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:28 +0700\"\n        },\n        {\n            \"id\": 23,\n            \"name\": \"architect Berkshire\",\n            \"content\": \"I'll hack the neural RSS feed, that should matrix the EXE hard drive!, You can't bypass the driver without parsing the back-end SQL matrix!, Use the optical SQL alarm, then you can quantify the optical card!, If we back up the bandwidth, we can get to the ADP sensor through the solid state ADP panel!, If we hack the card, we can get to the SCSI microchip through the wireless SAS port!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:40:26 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:40:26 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 6,\n        \"pageNumber\": 2,\n        \"pageSize\": 3,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 9,\n    \"totalPages\": 3,\n    \"last\": true,\n    \"size\": 3,\n    \"number\": 2,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 3,\n    \"first\": false,\n    \"empty\": false\n}"
						}
					]
				}
			]
		},
		{
			"name": "04.03_/post/forum/{{forumId}}",
			"item": [
				{
					"name": "200",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"forumId\", 48);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post/forum/{{forumId}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post",
								"forum",
								"{{forumId}}"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post/forum/{{forumId}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post",
										"forum",
										"{{forumId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 11 Jul 2022 09:24:59 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 50,\n            \"name\": \"SQL yellow Pound Tasty architecture\",\n            \"content\": \"Try to override the PNG transmitter, maybe it will transmit the solid state hard drive!, transmitting the card won't do anything, we need to copy the 1080p JSON bus!, We need to copy the virtual SSL pixel!, calculating the array won't do anything, we need to generate the wireless SAS bus!, The RAM transmitter is down, quantify the primary feed so we can override the JBOD interface!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:55:01 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:55:01 +0700\"\n        },\n        {\n            \"id\": 49,\n            \"name\": \"Australia Computer Baby Table green\",\n            \"content\": \"parsing the port won't do anything, we need to input the bluetooth ADP protocol!, connecting the monitor won't do anything, we need to parse the neural SMTP transmitter!, The JBOD interface is down, compress the multi-byte bandwidth so we can program the HDD microchip!, If we hack the card, we can get to the IB firewall through the online AGP sensor!, Try to connect the IB panel, maybe it will index the neural microchip!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:55:00 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:55:00 +0700\"\n        },\n        {\n            \"id\": 48,\n            \"name\": \"payment Kids solid\",\n            \"content\": \"Use the virtual TCP circuit, then you can index the 1080p sensor!, Try to back up the HDD panel, maybe it will generate the mobile interface!, Try to compress the SCSI pixel, maybe it will parse the primary sensor!, We need to parse the online HDD panel!, Try to copy the FTP bus, maybe it will synthesize the online hard drive!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:54:59 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:54:59 +0700\"\n        },\n        {\n            \"id\": 47,\n            \"name\": \"Future-proofed uniform\",\n            \"content\": \"I'll back up the auxiliary JSON alarm, that should array the JSON hard drive!, I'll back up the auxiliary RSS port, that should matrix the ADP capacitor!, transmitting the driver won't do anything, we need to hack the neural PNG card!, The SSL array is down, generate the bluetooth system so we can generate the SCSI matrix!, I'll parse the redundant SMTP panel, that should application the SAS pixel!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:54:59 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:54:59 +0700\"\n        },\n        {\n            \"id\": 46,\n            \"name\": \"Cotton Brand JSON calculating Plastic\",\n            \"content\": \"You can't compress the transmitter without connecting the neural USB driver!, generating the port won't do anything, we need to hack the mobile SCSI firewall!, If we transmit the application, we can get to the RAM feed through the optical PCI array!, Use the wireless HDD application, then you can compress the auxiliary matrix!, Try to connect the SCSI microchip, maybe it will synthesize the back-end system!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:54:58 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:54:58 +0700\"\n        },\n        {\n            \"id\": 45,\n            \"name\": \"District Cape\",\n            \"content\": \"Try to synthesize the CSS microchip, maybe it will hack the 1080p bandwidth!, programming the application won't do anything, we need to navigate the haptic RAM pixel!, If we index the port, we can get to the SMS firewall through the digital SMTP system!, If we input the transmitter, we can get to the JBOD microchip through the bluetooth PNG application!, You can't hack the port without parsing the auxiliary THX microchip!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:54:58 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:54:58 +0700\"\n        },\n        {\n            \"id\": 44,\n            \"name\": \"implementation generate Customizable Account\",\n            \"content\": \"We need to parse the open-source XML driver!, We need to override the multi-byte PNG system!, We need to transmit the cross-platform PCI alarm!, You can't override the pixel without compressing the wireless SMTP microchip!, Use the primary USB driver, then you can index the back-end circuit!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:54:58 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:54:58 +0700\"\n        },\n        {\n            \"id\": 43,\n            \"name\": \"parsing Metal\",\n            \"content\": \"We need to bypass the auxiliary SMS firewall!, overriding the pixel won't do anything, we need to compress the haptic JBOD panel!, Use the redundant THX sensor, then you can bypass the optical driver!, I'll program the virtual THX driver, that should port the SSL bandwidth!, I'll parse the neural SAS application, that should bus the SDD sensor!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:54:57 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:54:57 +0700\"\n        },\n        {\n            \"id\": 42,\n            \"name\": \"Bedfordshire ADP\",\n            \"content\": \"We need to connect the virtual RAM transmitter!, Try to quantify the SQL array, maybe it will reboot the redundant sensor!, Use the multi-byte SCSI transmitter, then you can generate the primary panel!, The PNG bandwidth is down, override the multi-byte matrix so we can compress the AGP circuit!, If we program the monitor, we can get to the AGP driver through the haptic COM bus!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:54:56 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:54:56 +0700\"\n        },\n        {\n            \"id\": 41,\n            \"name\": \"Cameroon pixel\",\n            \"content\": \"The SDD hard drive is down, parse the 1080p card so we can bypass the SCSI sensor!, We need to transmit the 1080p SSL alarm!, You can't navigate the card without parsing the bluetooth HTTP sensor!, You can't connect the capacitor without synthesizing the auxiliary SQL firewall!, You can't index the card without hacking the 1080p XSS alarm!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:54:55 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:54:55 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageSize\": 10,\n        \"pageNumber\": 0,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 34,\n    \"last\": false,\n    \"totalPages\": 4,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 10,\n    \"first\": true,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "page index >= totalPage",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"forumId\", 48);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post/forum/{{forumId}}?page=1000",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post",
								"forum",
								"{{forumId}}"
							],
							"query": [
								{
									"key": "page",
									"value": "1000"
								}
							]
						}
					},
					"response": [
						{
							"name": "204",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post/forum/{{forumId}}?page=1000",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post",
										"forum",
										"{{forumId}}"
									],
									"query": [
										{
											"key": "page",
											"value": "1000"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 15:30:37 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "404",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"forumId\", 999999999999999);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post/forum/{{forumId}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post",
								"forum",
								"{{forumId}}"
							]
						}
					},
					"response": [
						{
							"name": "404",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post/forum/{{forumId}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post",
										"forum",
										"{{forumId}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 15:28:54 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 22:28:54 +0700\",\n    \"status\": 404,\n    \"operationId\": \"addda9bab24824f9\",\n    \"error\": \"RESOURCE_NOT_FOUND_ERROR\",\n    \"message\": \"Forum, id:999999999999999 not found\",\n    \"path\": \"/post/forum/999999999999999\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "04.04_/post/createdBy/{{createdBy}}",
			"item": [
				{
					"name": "200",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"createdBy\", \"javadev311\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post/createdBy/{{createdBy}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post",
								"createdBy",
								"{{createdBy}}"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post/createdBy/{{createdBy}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post",
										"createdBy",
										"{{createdBy}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 15:31:10 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 49,\n            \"name\": \"Australia Computer Baby Table green\",\n            \"content\": \"parsing the port won't do anything, we need to input the bluetooth ADP protocol!, connecting the monitor won't do anything, we need to parse the neural SMTP transmitter!, The JBOD interface is down, compress the multi-byte bandwidth so we can program the HDD microchip!, If we hack the card, we can get to the IB firewall through the online AGP sensor!, Try to connect the IB panel, maybe it will index the neural microchip!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:55:00 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:55:00 +0700\"\n        },\n        {\n            \"id\": 48,\n            \"name\": \"payment Kids solid\",\n            \"content\": \"Use the virtual TCP circuit, then you can index the 1080p sensor!, Try to back up the HDD panel, maybe it will generate the mobile interface!, Try to compress the SCSI pixel, maybe it will parse the primary sensor!, We need to parse the online HDD panel!, Try to copy the FTP bus, maybe it will synthesize the online hard drive!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:54:59 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:54:59 +0700\"\n        },\n        {\n            \"id\": 47,\n            \"name\": \"Future-proofed uniform\",\n            \"content\": \"I'll back up the auxiliary JSON alarm, that should array the JSON hard drive!, I'll back up the auxiliary RSS port, that should matrix the ADP capacitor!, transmitting the driver won't do anything, we need to hack the neural PNG card!, The SSL array is down, generate the bluetooth system so we can generate the SCSI matrix!, I'll parse the redundant SMTP panel, that should application the SAS pixel!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:54:59 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:54:59 +0700\"\n        },\n        {\n            \"id\": 46,\n            \"name\": \"Cotton Brand JSON calculating Plastic\",\n            \"content\": \"You can't compress the transmitter without connecting the neural USB driver!, generating the port won't do anything, we need to hack the mobile SCSI firewall!, If we transmit the application, we can get to the RAM feed through the optical PCI array!, Use the wireless HDD application, then you can compress the auxiliary matrix!, Try to connect the SCSI microchip, maybe it will synthesize the back-end system!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:54:58 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:54:58 +0700\"\n        },\n        {\n            \"id\": 45,\n            \"name\": \"District Cape\",\n            \"content\": \"Try to synthesize the CSS microchip, maybe it will hack the 1080p bandwidth!, programming the application won't do anything, we need to navigate the haptic RAM pixel!, If we index the port, we can get to the SMS firewall through the digital SMTP system!, If we input the transmitter, we can get to the JBOD microchip through the bluetooth PNG application!, You can't hack the port without parsing the auxiliary THX microchip!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:54:58 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:54:58 +0700\"\n        },\n        {\n            \"id\": 44,\n            \"name\": \"implementation generate Customizable Account\",\n            \"content\": \"We need to parse the open-source XML driver!, We need to override the multi-byte PNG system!, We need to transmit the cross-platform PCI alarm!, You can't override the pixel without compressing the wireless SMTP microchip!, Use the primary USB driver, then you can index the back-end circuit!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:54:58 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:54:58 +0700\"\n        },\n        {\n            \"id\": 43,\n            \"name\": \"parsing Metal\",\n            \"content\": \"We need to bypass the auxiliary SMS firewall!, overriding the pixel won't do anything, we need to compress the haptic JBOD panel!, Use the redundant THX sensor, then you can bypass the optical driver!, I'll program the virtual THX driver, that should port the SSL bandwidth!, I'll parse the neural SAS application, that should bus the SDD sensor!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:54:57 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:54:57 +0700\"\n        },\n        {\n            \"id\": 42,\n            \"name\": \"Bedfordshire ADP\",\n            \"content\": \"We need to connect the virtual RAM transmitter!, Try to quantify the SQL array, maybe it will reboot the redundant sensor!, Use the multi-byte SCSI transmitter, then you can generate the primary panel!, The PNG bandwidth is down, override the multi-byte matrix so we can compress the AGP circuit!, If we program the monitor, we can get to the AGP driver through the haptic COM bus!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:54:56 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:54:56 +0700\"\n        },\n        {\n            \"id\": 41,\n            \"name\": \"Cameroon pixel\",\n            \"content\": \"The SDD hard drive is down, parse the 1080p card so we can bypass the SCSI sensor!, We need to transmit the 1080p SSL alarm!, You can't navigate the card without parsing the bluetooth HTTP sensor!, You can't connect the capacitor without synthesizing the auxiliary SQL firewall!, You can't index the card without hacking the 1080p XSS alarm!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:54:55 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:54:55 +0700\"\n        },\n        {\n            \"id\": 40,\n            \"name\": \"alarm Buckinghamshire\",\n            \"content\": \"The AGP driver is down, navigate the mobile protocol so we can parse the XML matrix!, If we compress the feed, we can get to the RSS panel through the mobile JBOD application!, I'll index the open-source THX program, that should driver the PNG protocol!, Use the open-source TCP feed, then you can hack the wireless transmitter!, Try to override the EXE alarm, maybe it will parse the mobile card!\",\n            \"forumId\": 48,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:54:55 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:54:55 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 33,\n    \"last\": false,\n    \"totalPages\": 4,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 10,\n    \"first\": true,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "404",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"createdBy\", \"wrongusername\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post/createdBy/{{createdBy}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post",
								"createdBy",
								"{{createdBy}}"
							]
						}
					},
					"response": [
						{
							"name": "404",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post/createdBy/{{createdBy}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post",
										"createdBy",
										"{{createdBy}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 15:32:58 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 22:32:58 +0700\",\n    \"status\": 404,\n    \"operationId\": \"6cf5eda5d64da84e\",\n    \"error\": \"RESOURCE_NOT_FOUND_ERROR\",\n    \"message\": \"username wrongusername not found\",\n    \"path\": \"/post/createdBy/wrongusername\"\n}"
						}
					]
				},
				{
					"name": "page index >= totalPage",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"createdBy\", \"javadev311\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post/createdBy/{{createdBy}}?page=1000000",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post",
								"createdBy",
								"{{createdBy}}"
							],
							"query": [
								{
									"key": "page",
									"value": "1000000"
								}
							]
						}
					},
					"response": [
						{
							"name": "204",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post/createdBy/{{createdBy}}?page=1000000",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post",
										"createdBy",
										"{{createdBy}}"
									],
									"query": [
										{
											"key": "page",
											"value": "1000000"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 15:32:19 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "04.05_/post/{{postId}} GET",
			"item": [
				{
					"name": "200",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"postId\", 31);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post/{{postId}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post",
								"{{postId}}"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post/{{postId}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post",
										"{{postId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 15:34:34 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 31,\n    \"name\": \"dot-com enable\",\n    \"content\": \"Try to compress the SMS alarm, maybe it will quantify the haptic card!, Try to generate the ADP array, maybe it will reboot the online driver!, Use the neural RAM card, then you can reboot the online firewall!, compressing the monitor won't do anything, we need to navigate the primary PNG feed!, If we quantify the bus, we can get to the USB interface through the multi-byte CSS bus!\",\n    \"createdBy\": \"javadev111\",\n    \"createdDate\": \"2022-07-06 00:40:34 +0700\",\n    \"lastModifiedBy\": \"javadev111\",\n    \"lastModifiedDate\": \"2022-07-06 00:40:34 +0700\"\n}"
						}
					]
				},
				{
					"name": "404",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"postId\", 9999999);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post/{{postId}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post",
								"{{postId}}"
							]
						}
					},
					"response": [
						{
							"name": "404",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post/{{postId}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post",
										"{{postId}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 15:35:01 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 22:35:01 +0700\",\n    \"status\": 404,\n    \"operationId\": \"6d2d466f0bd5d4cf\",\n    \"error\": \"RESOURCE_NOT_FOUND_ERROR\",\n    \"message\": \"Post, id:9999999 not found\",\n    \"path\": \"/post/9999999\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "04.06_/post/{{postId}} DELETE",
			"item": [
				{
					"name": "delete",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"postId\", 65);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/post/{{postId}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post",
								"{{postId}}"
							]
						}
					},
					"response": [
						{
							"name": "403_ROLE_USER_username does not match created by",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/post/{{postId}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post",
										"{{postId}}"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jul 2022 06:51:33 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-14 13:51:33 +0700\",\n    \"status\": 403,\n    \"operationId\": \"1149da6430c0a76a\",\n    \"error\": \"FORBIDDEN\",\n    \"message\": \"Access is denied\",\n    \"path\": \"/post/61\"\n}"
						},
						{
							"name": "200_ROLE_USER_username_match_created_by",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/post/{{postId}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post",
										"{{postId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jul 2022 07:29:14 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"DELETE POST SUCCESS\",\n    \"message\": \"You have deleted post \\\"York hacking Account Customer-focused dedicated\\\" successfully\"\n}"
						},
						{
							"name": "200_>=ROLE_MODERATOR",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/post/{{postId}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post",
										"{{postId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jul 2022 07:31:51 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"DELETE POST SUCCESS\",\n    \"message\": \"You have deleted post \\\"Arkansas XSS Dynamic Grenada Associate\\\" successfully\"\n}"
						}
					]
				},
				{
					"name": "No Auth delete",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"postId\", 70);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/post/{{postId}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post",
								"{{postId}}"
							]
						}
					},
					"response": [
						{
							"name": "401",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/post/{{postId}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post",
										"{{postId}}"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jul 2022 17:02:50 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-15 00:02:50 +0700\",\n    \"status\": 401,\n    \"operationId\": \"0c05b9c829590fbc\",\n    \"error\": \"UNAUTHORIZED\",\n    \"message\": \"Full authentication is required to access this resource\",\n    \"path\": \"/post/70\"\n}"
						}
					]
				},
				{
					"name": "inactive post or postId not found",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"postId\", 99999999999);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/post/{{postId}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post",
								"{{postId}}"
							]
						}
					},
					"response": [
						{
							"name": "400",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/post/{{postId}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post",
										"{{postId}}"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jul 2022 07:28:27 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-14 14:28:27 +0700\",\n    \"status\": 400,\n    \"operationId\": \"5c835a8a3c8fe969\",\n    \"error\": \"BAD_REQUEST\",\n    \"message\": \"Post, id:99999999999 not found\",\n    \"path\": \"/post/99999999999\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "05.01_/comment POST",
			"item": [
				{
					"name": "create comment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"postId\", 33);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"{{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}\",\r\n    \"postId\": {{postId}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/comment",
							"host": [
								"{{domain}}"
							],
							"path": [
								"comment"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"content\": \"{{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}\",\r\n    \"postId\": 17\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/comment",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 15:36:37 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "No Auth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"{{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}\",\r\n    \"postId\": 17\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/comment",
							"host": [
								"{{domain}}"
							],
							"path": [
								"comment"
							]
						}
					},
					"response": [
						{
							"name": "401",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"content\": \"{{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}\",\r\n    \"postId\": 17\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/comment",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 15:38:03 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 22:38:03 +0700\",\n    \"status\": 401,\n    \"operationId\": \"7d9835823080cb23\",\n    \"error\": \"UNAUTHORIZED\",\n    \"message\": \"Full authentication is required to access this resource\",\n    \"path\": \"/comment\"\n}"
						}
					]
				},
				{
					"name": "Post is inactive or Post not found",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"{{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}\",\r\n    \"postId\": 9999999\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/comment",
							"host": [
								"{{domain}}"
							],
							"path": [
								"comment"
							]
						}
					},
					"response": [
						{
							"name": "404",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"content\": \"{{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}\",\r\n    \"postId\": 9999999\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/comment",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 15:37:31 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 22:37:31 +0700\",\n    \"status\": 404,\n    \"operationId\": \"b7e5828c96a1e00d\",\n    \"error\": \"RESOURCE_NOT_FOUND_ERROR\",\n    \"message\": \"Post, id:9999999 not found\",\n    \"path\": \"/comment\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "05.02_/comment GET",
			"item": [
				{
					"name": "get comment default",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/comment",
							"host": [
								"{{domain}}"
							],
							"path": [
								"comment"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/comment",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 05 Jul 2022 18:00:08 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 21,\n            \"content\": \"I'll compress the primary FTP driver, that should bus the COM interface!, You can't connect the monitor without hacking the auxiliary SCSI firewall!, Try to compress the SMTP transmitter, maybe it will bypass the wireless bandwidth!, If we bypass the sensor, we can get to the SCSI sensor through the bluetooth HDD system!, You can't parse the application without parsing the haptic SSL program!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:11 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:11 +0700\"\n        },\n        {\n            \"id\": 20,\n            \"content\": \"I'll reboot the virtual USB hard drive, that should bus the SAS array!, Try to reboot the SMS array, maybe it will override the online feed!, Use the bluetooth XML pixel, then you can reboot the optical sensor!, I'll synthesize the wireless FTP feed, that should matrix the JBOD interface!, The JSON transmitter is down, connect the digital port so we can back up the SSL feed!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:11 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:11 +0700\"\n        },\n        {\n            \"id\": 19,\n            \"content\": \"synthesizing the microchip won't do anything, we need to compress the neural AGP matrix!, We need to transmit the digital SMS bus!, If we input the bandwidth, we can get to the RAM array through the mobile SCSI monitor!, The SMTP bus is down, calculate the auxiliary circuit so we can calculate the SMS port!, Try to reboot the TCP firewall, maybe it will back up the primary array!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:10 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:10 +0700\"\n        },\n        {\n            \"id\": 18,\n            \"content\": \"I'll generate the neural XSS bus, that should system the RSS feed!, We need to program the mobile JSON port!, You can't transmit the array without programming the haptic HTTP alarm!, We need to copy the redundant JSON microchip!, I'll calculate the wireless SDD panel, that should card the COM firewall!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:10 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:10 +0700\"\n        },\n        {\n            \"id\": 17,\n            \"content\": \"quantifying the hard drive won't do anything, we need to transmit the solid state XSS driver!, Try to input the SDD application, maybe it will program the redundant monitor!, I'll quantify the digital HDD card, that should microchip the PNG port!, programming the monitor won't do anything, we need to quantify the virtual XSS circuit!, indexing the firewall won't do anything, we need to parse the digital SSL port!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:09 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:09 +0700\"\n        },\n        {\n            \"id\": 16,\n            \"content\": \"I'll calculate the primary AGP transmitter, that should microchip the THX bandwidth!, The SMTP pixel is down, connect the cross-platform monitor so we can hack the JBOD feed!, calculating the protocol won't do anything, we need to generate the haptic IB pixel!, I'll parse the solid state EXE driver, that should sensor the RSS feed!, We need to program the cross-platform ADP bus!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:09 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:09 +0700\"\n        },\n        {\n            \"id\": 15,\n            \"content\": \"You can't index the driver without overriding the primary SMS program!, You can't calculate the feed without compressing the back-end THX card!, We need to reboot the digital AI firewall!, backing up the firewall won't do anything, we need to generate the virtual RAM matrix!, connecting the system won't do anything, we need to calculate the digital AI transmitter!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:08 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:08 +0700\"\n        },\n        {\n            \"id\": 14,\n            \"content\": \"Use the primary EXE port, then you can parse the back-end feed!, connecting the interface won't do anything, we need to bypass the back-end CSS system!, You can't generate the system without hacking the back-end JSON hard drive!, Try to calculate the COM program, maybe it will parse the neural alarm!, The HDD system is down, quantify the bluetooth firewall so we can override the USB system!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:08 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:08 +0700\"\n        },\n        {\n            \"id\": 13,\n            \"content\": \"We need to calculate the solid state FTP card!, I'll connect the digital TCP matrix, that should hard drive the XSS system!, If we index the pixel, we can get to the COM capacitor through the cross-platform AGP transmitter!, We need to quantify the optical GB bandwidth!, Use the open-source HTTP port, then you can parse the wireless transmitter!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:07 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:07 +0700\"\n        },\n        {\n            \"id\": 12,\n            \"content\": \"You can't connect the system without navigating the online XML monitor!, Try to compress the THX hard drive, maybe it will navigate the cross-platform feed!, We need to index the multi-byte SQL transmitter!, overriding the bus won't do anything, we need to parse the back-end XML hard drive!, We need to hack the online XML transmitter!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:07 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:07 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 21,\n    \"last\": false,\n    \"totalPages\": 3,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 10,\n    \"first\": true,\n    \"empty\": false\n}"
						},
						{
							"name": "200 2",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/comment",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jul 2022 15:24:20 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 30,\n            \"content\": \"quantifying the pixel won't do anything, we need to program the auxiliary PNG bandwidth!, You can't connect the port without backing up the haptic HTTP microchip!, calculating the feed won't do anything, we need to override the redundant HDD pixel!, Try to back up the TCP microchip, maybe it will synthesize the wireless hard drive!, We need to parse the primary JBOD circuit!\",\n            \"postId\": 33,\n            \"createdBy\": \"admin1\",\n            \"createdDate\": \"2022-07-21 22:23:05 +0700\",\n            \"lastModifiedBy\": \"admin1\",\n            \"lastModifiedDate\": \"2022-07-21 22:23:05 +0700\"\n        },\n        {\n            \"id\": 29,\n            \"content\": \"I'll back up the 1080p SQL matrix, that should microchip the THX protocol!, Use the 1080p SQL pixel, then you can calculate the virtual feed!, copying the feed won't do anything, we need to parse the 1080p TCP capacitor!, The PNG array is down, back up the optical panel so we can quantify the JSON pixel!, If we quantify the bus, we can get to the RAM sensor through the open-source TCP pixel!\",\n            \"postId\": 33,\n            \"createdBy\": \"admin1\",\n            \"createdDate\": \"2022-07-21 22:23:04 +0700\",\n            \"lastModifiedBy\": \"admin1\",\n            \"lastModifiedDate\": \"2022-07-21 22:23:04 +0700\"\n        },\n        {\n            \"id\": 28,\n            \"content\": \"Use the online CSS program, then you can parse the cross-platform panel!, navigating the application won't do anything, we need to index the virtual IB port!, Try to transmit the XML alarm, maybe it will navigate the cross-platform microchip!, Use the open-source CSS program, then you can input the open-source monitor!, You can't program the bandwidth without programming the virtual FTP monitor!\",\n            \"postId\": 33,\n            \"createdBy\": \"admin1\",\n            \"createdDate\": \"2022-07-21 22:23:03 +0700\",\n            \"lastModifiedBy\": \"admin1\",\n            \"lastModifiedDate\": \"2022-07-21 22:23:03 +0700\"\n        },\n        {\n            \"id\": 27,\n            \"content\": \"calculating the program won't do anything, we need to copy the digital HDD circuit!, You can't override the card without indexing the solid state ADP card!, Use the multi-byte COM card, then you can compress the online card!, copying the capacitor won't do anything, we need to program the virtual GB firewall!, The SQL alarm is down, hack the virtual panel so we can input the AI protocol!\",\n            \"postId\": 33,\n            \"createdBy\": \"admin1\",\n            \"createdDate\": \"2022-07-21 22:23:02 +0700\",\n            \"lastModifiedBy\": \"admin1\",\n            \"lastModifiedDate\": \"2022-07-21 22:23:02 +0700\"\n        },\n        {\n            \"id\": 26,\n            \"content\": \"Use the neural TCP circuit, then you can index the back-end firewall!, If we bypass the array, we can get to the AGP program through the cross-platform EXE firewall!, transmitting the bandwidth won't do anything, we need to calculate the cross-platform SSL driver!, If we compress the card, we can get to the SMS system through the mobile USB driver!, You can't bypass the matrix without compressing the optical SCSI monitor!\",\n            \"postId\": 26,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-15 23:16:36 +0700\",\n            \"lastModifiedBy\": \"javadev311\",\n            \"lastModifiedDate\": \"2022-07-15 23:16:36 +0700\"\n        },\n        {\n            \"id\": 25,\n            \"content\": \"You can't parse the bandwidth without programming the multi-byte ADP panel!, You can't copy the bandwidth without compressing the digital HDD circuit!, If we back up the firewall, we can get to the JBOD pixel through the neural PCI bus!, I'll navigate the optical SAS firewall, that should feed the SCSI panel!, You can't synthesize the capacitor without indexing the digital SMS transmitter!\",\n            \"postId\": 26,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-15 23:16:35 +0700\",\n            \"lastModifiedBy\": \"javadev311\",\n            \"lastModifiedDate\": \"2022-07-15 23:16:35 +0700\"\n        },\n        {\n            \"id\": 24,\n            \"content\": \"You can't quantify the monitor without generating the 1080p SMTP protocol!, The JSON matrix is down, connect the neural card so we can copy the SAS panel!, Try to bypass the JSON sensor, maybe it will quantify the mobile hard drive!, You can't compress the application without backing up the wireless CSS card!, If we override the driver, we can get to the EXE bandwidth through the primary RAM interface!\",\n            \"postId\": 26,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-15 23:16:34 +0700\",\n            \"lastModifiedBy\": \"javadev311\",\n            \"lastModifiedDate\": \"2022-07-15 23:16:34 +0700\"\n        },\n        {\n            \"id\": 23,\n            \"content\": \"quantifying the system won't do anything, we need to parse the primary RAM feed!, We need to hack the auxiliary AI firewall!, If we compress the capacitor, we can get to the XSS pixel through the solid state ADP monitor!, If we transmit the bandwidth, we can get to the RAM hard drive through the neural PCI feed!, synthesizing the driver won't do anything, we need to reboot the redundant TCP microchip!\",\n            \"postId\": 26,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-15 23:16:34 +0700\",\n            \"lastModifiedBy\": \"javadev311\",\n            \"lastModifiedDate\": \"2022-07-15 23:16:34 +0700\"\n        },\n        {\n            \"id\": 22,\n            \"content\": \"Try to reboot the PCI hard drive, maybe it will navigate the multi-byte sensor!, You can't parse the hard drive without quantifying the digital XML program!, Try to connect the PCI bus, maybe it will quantify the bluetooth circuit!, We need to index the cross-platform PNG matrix!, I'll calculate the 1080p CSS feed, that should bandwidth the SMTP program!\",\n            \"postId\": 26,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-15 23:16:33 +0700\",\n            \"lastModifiedBy\": \"javadev311\",\n            \"lastModifiedDate\": \"2022-07-15 23:16:33 +0700\"\n        },\n        {\n            \"id\": 21,\n            \"content\": \"indexing the hard drive won't do anything, we need to navigate the haptic THX capacitor!, If we reboot the driver, we can get to the ADP panel through the auxiliary XSS feed!, Try to back up the SCSI card, maybe it will hack the primary array!, I'll quantify the primary THX microchip, that should capacitor the SQL circuit!, Use the redundant TCP panel, then you can reboot the solid state card!\",\n            \"postId\": 26,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-15 23:16:32 +0700\",\n            \"lastModifiedBy\": \"javadev311\",\n            \"lastModifiedDate\": \"2022-07-15 23:16:32 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageSize\": 10,\n        \"pageNumber\": 0,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 30,\n    \"totalPages\": 3,\n    \"last\": false,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 10,\n    \"first\": true,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "search_inactive comment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/comment?search=isActive=bool=false",
							"host": [
								"{{domain}}"
							],
							"path": [
								"comment"
							],
							"query": [
								{
									"key": "search",
									"value": "isActive=bool=false"
								}
							]
						}
					},
					"response": [
						{
							"name": "200_>=ROLE_MODERATOR",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/comment?search=isActive=bool=false",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment"
									],
									"query": [
										{
											"key": "search",
											"value": "isActive=bool=false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jul 2022 16:48:57 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 36,\n            \"content\": \"We need to program the wireless EXE bandwidth!, If we connect the bandwidth, we can get to the CSS bus through the optical AI transmitter!, We need to bypass the auxiliary RAM hard drive!, Use the virtual PCI application, then you can bypass the redundant microchip!, You can't reboot the bandwidth without backing up the multi-byte SAS bandwidth!\",\n            \"postId\": 65,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-14 14:31:25 +0700\",\n            \"lastModifiedBy\": \"admin\",\n            \"lastModifiedDate\": \"2022-07-14 14:31:51 +0700\"\n        },\n        {\n            \"id\": 34,\n            \"content\": \"Try to program the HDD port, maybe it will compress the back-end sensor!, Try to calculate the HDD program, maybe it will compress the back-end port!, The HDD panel is down, input the primary panel so we can calculate the SSL feed!, If we reboot the sensor, we can get to the SMS alarm through the auxiliary PNG hard drive!, Use the optical RAM protocol, then you can navigate the online interface!\",\n            \"postId\": 65,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-14 14:31:23 +0700\",\n            \"lastModifiedBy\": \"admin\",\n            \"lastModifiedDate\": \"2022-07-14 14:31:51 +0700\"\n        },\n        {\n            \"id\": 35,\n            \"content\": \"You can't override the interface without calculating the redundant ADP protocol!, You can't parse the capacitor without generating the neural HTTP bandwidth!, If we index the monitor, we can get to the RSS sensor through the wireless AI microchip!, I'll parse the auxiliary XML microchip, that should card the RAM panel!, The FTP panel is down, compress the haptic hard drive so we can reboot the GB capacitor!\",\n            \"postId\": 65,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-14 14:31:24 +0700\",\n            \"lastModifiedBy\": \"admin\",\n            \"lastModifiedDate\": \"2022-07-14 14:31:51 +0700\"\n        },\n        {\n            \"id\": 33,\n            \"content\": \"I'll program the solid state IB monitor, that should sensor the CSS circuit!, I'll program the optical RSS circuit, that should protocol the COM bandwidth!, We need to transmit the auxiliary SCSI interface!, I'll override the mobile SDD firewall, that should alarm the COM port!, The HTTP sensor is down, input the virtual system so we can parse the SSL protocol!\",\n            \"postId\": 64,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-14 14:23:26 +0700\",\n            \"lastModifiedBy\": \"javadev311\",\n            \"lastModifiedDate\": \"2022-07-14 14:23:45 +0700\"\n        },\n        {\n            \"id\": 32,\n            \"content\": \"Try to synthesize the EXE protocol, maybe it will generate the online panel!, Use the wireless SDD system, then you can quantify the primary system!, navigating the firewall won't do anything, we need to override the redundant IB bus!, We need to transmit the virtual COM array!, You can't connect the card without generating the primary USB matrix!\",\n            \"postId\": 64,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-14 14:23:24 +0700\",\n            \"lastModifiedBy\": \"javadev311\",\n            \"lastModifiedDate\": \"2022-07-14 14:23:45 +0700\"\n        },\n        {\n            \"id\": 31,\n            \"content\": \"We need to compress the haptic JBOD feed!, I'll program the redundant SCSI hard drive, that should microchip the HTTP bandwidth!, I'll override the optical SMTP application, that should port the XSS driver!, We need to override the digital JSON feed!, Use the wireless HDD capacitor, then you can program the primary alarm!\",\n            \"postId\": 61,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-14 13:50:57 +0700\",\n            \"lastModifiedBy\": \"admin\",\n            \"lastModifiedDate\": \"2022-07-14 13:53:48 +0700\"\n        },\n        {\n            \"id\": 30,\n            \"content\": \"I'll program the redundant IB matrix, that should application the USB hard drive!, We need to override the primary RAM port!, I'll quantify the redundant SMS microchip, that should alarm the SMTP circuit!, connecting the capacitor won't do anything, we need to navigate the redundant EXE alarm!, I'll quantify the auxiliary GB interface, that should monitor the USB application!\",\n            \"postId\": 61,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-14 13:50:56 +0700\",\n            \"lastModifiedBy\": \"admin\",\n            \"lastModifiedDate\": \"2022-07-14 13:53:48 +0700\"\n        },\n        {\n            \"id\": 29,\n            \"content\": \"The HDD panel is down, index the multi-byte matrix so we can parse the HDD transmitter!, Try to transmit the RAM port, maybe it will parse the cross-platform card!, If we back up the alarm, we can get to the TCP system through the cross-platform SAS feed!, parsing the sensor won't do anything, we need to copy the 1080p ADP interface!, quantifying the feed won't do anything, we need to bypass the auxiliary HDD bandwidth!\",\n            \"postId\": 61,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-14 13:50:54 +0700\",\n            \"lastModifiedBy\": \"admin\",\n            \"lastModifiedDate\": \"2022-07-14 13:53:48 +0700\"\n        },\n        {\n            \"id\": 27,\n            \"content\": \"Try to synthesize the TCP panel, maybe it will copy the solid state application!, If we index the application, we can get to the GB array through the 1080p SMS panel!, You can't synthesize the port without compressing the open-source EXE bandwidth!, Use the redundant SMS application, then you can bypass the wireless firewall!, If we generate the pixel, we can get to the SQL application through the solid state CSS bus!\",\n            \"postId\": 58,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-14 13:12:00 +0700\",\n            \"lastModifiedBy\": \"javadev311\",\n            \"lastModifiedDate\": \"2022-07-14 13:12:24 +0700\"\n        },\n        {\n            \"id\": 28,\n            \"content\": \"The EXE system is down, synthesize the primary protocol so we can hack the SMS capacitor!, Use the auxiliary RSS driver, then you can reboot the back-end capacitor!, Try to parse the JBOD transmitter, maybe it will index the multi-byte array!, Try to calculate the SAS panel, maybe it will quantify the primary pixel!, Try to program the RSS bus, maybe it will generate the mobile hard drive!\",\n            \"postId\": 58,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-14 13:12:01 +0700\",\n            \"lastModifiedBy\": \"javadev311\",\n            \"lastModifiedDate\": \"2022-07-14 13:12:24 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"sorted\": true,\n            \"unsorted\": false,\n            \"empty\": false\n        },\n        \"pageSize\": 10,\n        \"pageNumber\": 0,\n        \"offset\": 0,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 14,\n    \"last\": false,\n    \"totalPages\": 2,\n    \"sort\": {\n        \"sorted\": true,\n        \"unsorted\": false,\n        \"empty\": false\n    },\n    \"numberOfElements\": 10,\n    \"first\": true,\n    \"size\": 10,\n    \"number\": 0,\n    \"empty\": false\n}"
						},
						{
							"name": "403_ROLE_USER",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/comment?search=isActive=bool=false",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment"
									],
									"query": [
										{
											"key": "search",
											"value": "isActive=bool=false"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jul 2022 16:49:28 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-14 23:49:28 +0700\",\n    \"status\": 403,\n    \"operationId\": \"b65275e940586816\",\n    \"error\": \"FORBIDDEN\",\n    \"message\": \"User does not have permission to search inactive resource\",\n    \"path\": \"/comment\"\n}"
						}
					]
				},
				{
					"name": "No_Auth_search_inactive comment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/comment?search=isActive=bool=false",
							"host": [
								"{{domain}}"
							],
							"path": [
								"comment"
							],
							"query": [
								{
									"key": "search",
									"value": "isActive=bool=false"
								}
							]
						}
					},
					"response": [
						{
							"name": "403",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/comment?search=isActive=bool=false",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment"
									],
									"query": [
										{
											"key": "search",
											"value": "isActive=bool=false"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jul 2022 16:50:23 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-14 23:50:23 +0700\",\n    \"status\": 403,\n    \"operationId\": \"fadc08b8f4ca9326\",\n    \"error\": \"FORBIDDEN\",\n    \"message\": \"User does not have permission to search inactive resource\",\n    \"path\": \"/comment\"\n}"
						}
					]
				},
				{
					"name": "page index >= totalPage",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/comment?page=10000",
							"host": [
								"{{domain}}"
							],
							"path": [
								"comment"
							],
							"query": [
								{
									"key": "page",
									"value": "10000"
								}
							]
						}
					},
					"response": [
						{
							"name": "204",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/comment?page=10000",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment"
									],
									"query": [
										{
											"key": "page",
											"value": "10000"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 15:39:46 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "search_contains navigating",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/comment?search=content==*navigating*",
							"host": [
								"{{domain}}"
							],
							"path": [
								"comment"
							],
							"query": [
								{
									"key": "search",
									"value": "content==*navigating*"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/comment?search=content==*navigating*",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment"
									],
									"query": [
										{
											"key": "search",
											"value": "content==*navigating*"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 15:43:08 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 22,\n            \"content\": \"navigating the port won't do anything, we need to bypass the back-end SAS sensor!, Try to synthesize the PCI bandwidth, maybe it will connect the virtual application!, I'll reboot the cross-platform USB firewall, that should port the SQL driver!, We need to program the open-source AI feed!, I'll connect the redundant FTP program, that should hard drive the THX protocol!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-13 22:36:37 +0700\",\n            \"lastModifiedBy\": \"javadev311\",\n            \"lastModifiedDate\": \"2022-07-13 22:36:37 +0700\"\n        },\n        {\n            \"id\": 12,\n            \"content\": \"You can't connect the system without navigating the online XML monitor!, Try to compress the THX hard drive, maybe it will navigate the cross-platform feed!, We need to index the multi-byte SQL transmitter!, overriding the bus won't do anything, we need to parse the back-end XML hard drive!, We need to hack the online XML transmitter!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:07 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:07 +0700\"\n        },\n        {\n            \"id\": 11,\n            \"content\": \"programming the monitor won't do anything, we need to bypass the auxiliary EXE feed!, Try to calculate the RAM capacitor, maybe it will input the solid state panel!, You can't index the feed without navigating the solid state ADP protocol!, The JBOD capacitor is down, back up the solid state bandwidth so we can override the HTTP array!, Try to override the FTP program, maybe it will override the digital capacitor!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:06 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:06 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 3,\n    \"last\": true,\n    \"totalPages\": 1,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 3,\n    \"first\": true,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "search_contains navigating_start with You",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/comment?search=content==*navigating*;content==You*",
							"host": [
								"{{domain}}"
							],
							"path": [
								"comment"
							],
							"query": [
								{
									"key": "search",
									"value": "content==*navigating*;content==You*"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/comment?search=content==*navigating*;content==You*",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment"
									],
									"query": [
										{
											"key": "search",
											"value": "content==*navigating*;content==You*"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 15:55:12 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 12,\n            \"content\": \"You can't connect the system without navigating the online XML monitor!, Try to compress the THX hard drive, maybe it will navigate the cross-platform feed!, We need to index the multi-byte SQL transmitter!, overriding the bus won't do anything, we need to parse the back-end XML hard drive!, We need to hack the online XML transmitter!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:07 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:07 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 1,\n    \"last\": true,\n    \"totalPages\": 1,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 1,\n    \"first\": true,\n    \"empty\": false\n}"
						}
					]
				}
			]
		},
		{
			"name": "05.03_/comment/post/{{postId}}",
			"item": [
				{
					"name": "200",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"postId\", 17);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/comment/post/{{postId}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"comment",
								"post",
								"{{postId}}"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/comment/post/{{postId}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment",
										"post",
										"{{postId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 15:43:55 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 22,\n            \"content\": \"navigating the port won't do anything, we need to bypass the back-end SAS sensor!, Try to synthesize the PCI bandwidth, maybe it will connect the virtual application!, I'll reboot the cross-platform USB firewall, that should port the SQL driver!, We need to program the open-source AI feed!, I'll connect the redundant FTP program, that should hard drive the THX protocol!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev311\",\n            \"createdDate\": \"2022-07-13 22:36:37 +0700\",\n            \"lastModifiedBy\": \"javadev311\",\n            \"lastModifiedDate\": \"2022-07-13 22:36:37 +0700\"\n        },\n        {\n            \"id\": 21,\n            \"content\": \"I'll compress the primary FTP driver, that should bus the COM interface!, You can't connect the monitor without hacking the auxiliary SCSI firewall!, Try to compress the SMTP transmitter, maybe it will bypass the wireless bandwidth!, If we bypass the sensor, we can get to the SCSI sensor through the bluetooth HDD system!, You can't parse the application without parsing the haptic SSL program!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:11 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:11 +0700\"\n        },\n        {\n            \"id\": 20,\n            \"content\": \"I'll reboot the virtual USB hard drive, that should bus the SAS array!, Try to reboot the SMS array, maybe it will override the online feed!, Use the bluetooth XML pixel, then you can reboot the optical sensor!, I'll synthesize the wireless FTP feed, that should matrix the JBOD interface!, The JSON transmitter is down, connect the digital port so we can back up the SSL feed!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:11 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:11 +0700\"\n        },\n        {\n            \"id\": 19,\n            \"content\": \"synthesizing the microchip won't do anything, we need to compress the neural AGP matrix!, We need to transmit the digital SMS bus!, If we input the bandwidth, we can get to the RAM array through the mobile SCSI monitor!, The SMTP bus is down, calculate the auxiliary circuit so we can calculate the SMS port!, Try to reboot the TCP firewall, maybe it will back up the primary array!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:10 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:10 +0700\"\n        },\n        {\n            \"id\": 18,\n            \"content\": \"I'll generate the neural XSS bus, that should system the RSS feed!, We need to program the mobile JSON port!, You can't transmit the array without programming the haptic HTTP alarm!, We need to copy the redundant JSON microchip!, I'll calculate the wireless SDD panel, that should card the COM firewall!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:10 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:10 +0700\"\n        },\n        {\n            \"id\": 17,\n            \"content\": \"quantifying the hard drive won't do anything, we need to transmit the solid state XSS driver!, Try to input the SDD application, maybe it will program the redundant monitor!, I'll quantify the digital HDD card, that should microchip the PNG port!, programming the monitor won't do anything, we need to quantify the virtual XSS circuit!, indexing the firewall won't do anything, we need to parse the digital SSL port!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:09 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:09 +0700\"\n        },\n        {\n            \"id\": 16,\n            \"content\": \"I'll calculate the primary AGP transmitter, that should microchip the THX bandwidth!, The SMTP pixel is down, connect the cross-platform monitor so we can hack the JBOD feed!, calculating the protocol won't do anything, we need to generate the haptic IB pixel!, I'll parse the solid state EXE driver, that should sensor the RSS feed!, We need to program the cross-platform ADP bus!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:09 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:09 +0700\"\n        },\n        {\n            \"id\": 15,\n            \"content\": \"You can't index the driver without overriding the primary SMS program!, You can't calculate the feed without compressing the back-end THX card!, We need to reboot the digital AI firewall!, backing up the firewall won't do anything, we need to generate the virtual RAM matrix!, connecting the system won't do anything, we need to calculate the digital AI transmitter!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:08 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:08 +0700\"\n        },\n        {\n            \"id\": 14,\n            \"content\": \"Use the primary EXE port, then you can parse the back-end feed!, connecting the interface won't do anything, we need to bypass the back-end CSS system!, You can't generate the system without hacking the back-end JSON hard drive!, Try to calculate the COM program, maybe it will parse the neural alarm!, The HDD system is down, quantify the bluetooth firewall so we can override the USB system!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:08 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:08 +0700\"\n        },\n        {\n            \"id\": 13,\n            \"content\": \"We need to calculate the solid state FTP card!, I'll connect the digital TCP matrix, that should hard drive the XSS system!, If we index the pixel, we can get to the COM capacitor through the cross-platform AGP transmitter!, We need to quantify the optical GB bandwidth!, Use the open-source HTTP port, then you can parse the wireless transmitter!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:07 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:07 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 22,\n    \"last\": false,\n    \"totalPages\": 3,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 10,\n    \"first\": true,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "404",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"postId\", 999999);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/comment/post/{{postId}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"comment",
								"post",
								"{{postId}}"
							]
						}
					},
					"response": [
						{
							"name": "404",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/comment/post/{{postId}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment",
										"post",
										"{{postId}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 15:44:23 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 22:44:23 +0700\",\n    \"status\": 404,\n    \"operationId\": \"9634b4d60a38546b\",\n    \"error\": \"RESOURCE_NOT_FOUND_ERROR\",\n    \"message\": \"Post, id:999999 not found\",\n    \"path\": \"/comment/post/999999\"\n}"
						}
					]
				},
				{
					"name": "page index >= totalPage",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"postId\", 17);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/comment/post/{{postId}}?page=999999",
							"host": [
								"{{domain}}"
							],
							"path": [
								"comment",
								"post",
								"{{postId}}"
							],
							"query": [
								{
									"key": "page",
									"value": "999999"
								}
							]
						}
					},
					"response": [
						{
							"name": "204",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/comment/post/{{postId}}?page=999999",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment",
										"post",
										"{{postId}}"
									],
									"query": [
										{
											"key": "page",
											"value": "999999"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 15:45:27 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "05.04_/comment/createdBy/{{createdBy}}",
			"item": [
				{
					"name": "200",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"createdBy\", \"javadev111\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/comment/createdBy/{{createdBy}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"comment",
								"createdBy",
								"{{createdBy}}"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/comment/createdBy/{{createdBy}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment",
										"createdBy",
										"{{createdBy}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 11 Jul 2022 10:56:12 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 21,\n            \"content\": \"I'll compress the primary FTP driver, that should bus the COM interface!, You can't connect the monitor without hacking the auxiliary SCSI firewall!, Try to compress the SMTP transmitter, maybe it will bypass the wireless bandwidth!, If we bypass the sensor, we can get to the SCSI sensor through the bluetooth HDD system!, You can't parse the application without parsing the haptic SSL program!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:11 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:11 +0700\"\n        },\n        {\n            \"id\": 20,\n            \"content\": \"I'll reboot the virtual USB hard drive, that should bus the SAS array!, Try to reboot the SMS array, maybe it will override the online feed!, Use the bluetooth XML pixel, then you can reboot the optical sensor!, I'll synthesize the wireless FTP feed, that should matrix the JBOD interface!, The JSON transmitter is down, connect the digital port so we can back up the SSL feed!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:11 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:11 +0700\"\n        },\n        {\n            \"id\": 19,\n            \"content\": \"synthesizing the microchip won't do anything, we need to compress the neural AGP matrix!, We need to transmit the digital SMS bus!, If we input the bandwidth, we can get to the RAM array through the mobile SCSI monitor!, The SMTP bus is down, calculate the auxiliary circuit so we can calculate the SMS port!, Try to reboot the TCP firewall, maybe it will back up the primary array!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:10 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:10 +0700\"\n        },\n        {\n            \"id\": 18,\n            \"content\": \"I'll generate the neural XSS bus, that should system the RSS feed!, We need to program the mobile JSON port!, You can't transmit the array without programming the haptic HTTP alarm!, We need to copy the redundant JSON microchip!, I'll calculate the wireless SDD panel, that should card the COM firewall!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:10 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:10 +0700\"\n        },\n        {\n            \"id\": 17,\n            \"content\": \"quantifying the hard drive won't do anything, we need to transmit the solid state XSS driver!, Try to input the SDD application, maybe it will program the redundant monitor!, I'll quantify the digital HDD card, that should microchip the PNG port!, programming the monitor won't do anything, we need to quantify the virtual XSS circuit!, indexing the firewall won't do anything, we need to parse the digital SSL port!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:09 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:09 +0700\"\n        },\n        {\n            \"id\": 16,\n            \"content\": \"I'll calculate the primary AGP transmitter, that should microchip the THX bandwidth!, The SMTP pixel is down, connect the cross-platform monitor so we can hack the JBOD feed!, calculating the protocol won't do anything, we need to generate the haptic IB pixel!, I'll parse the solid state EXE driver, that should sensor the RSS feed!, We need to program the cross-platform ADP bus!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:09 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:09 +0700\"\n        },\n        {\n            \"id\": 15,\n            \"content\": \"You can't index the driver without overriding the primary SMS program!, You can't calculate the feed without compressing the back-end THX card!, We need to reboot the digital AI firewall!, backing up the firewall won't do anything, we need to generate the virtual RAM matrix!, connecting the system won't do anything, we need to calculate the digital AI transmitter!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:08 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:08 +0700\"\n        },\n        {\n            \"id\": 14,\n            \"content\": \"Use the primary EXE port, then you can parse the back-end feed!, connecting the interface won't do anything, we need to bypass the back-end CSS system!, You can't generate the system without hacking the back-end JSON hard drive!, Try to calculate the COM program, maybe it will parse the neural alarm!, The HDD system is down, quantify the bluetooth firewall so we can override the USB system!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:08 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:08 +0700\"\n        },\n        {\n            \"id\": 13,\n            \"content\": \"We need to calculate the solid state FTP card!, I'll connect the digital TCP matrix, that should hard drive the XSS system!, If we index the pixel, we can get to the COM capacitor through the cross-platform AGP transmitter!, We need to quantify the optical GB bandwidth!, Use the open-source HTTP port, then you can parse the wireless transmitter!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:07 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:07 +0700\"\n        },\n        {\n            \"id\": 12,\n            \"content\": \"You can't connect the system without navigating the online XML monitor!, Try to compress the THX hard drive, maybe it will navigate the cross-platform feed!, We need to index the multi-byte SQL transmitter!, overriding the bus won't do anything, we need to parse the back-end XML hard drive!, We need to hack the online XML transmitter!\",\n            \"postId\": 17,\n            \"createdBy\": \"javadev111\",\n            \"createdDate\": \"2022-07-06 00:57:07 +0700\",\n            \"lastModifiedBy\": \"javadev111\",\n            \"lastModifiedDate\": \"2022-07-06 00:57:07 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 21,\n    \"totalPages\": 3,\n    \"last\": false,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 10,\n    \"first\": true,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "404",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"createdBy\", \"wrongusername\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/comment/createdBy/{{createdBy}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"comment",
								"createdBy",
								"{{createdBy}}"
							]
						}
					},
					"response": [
						{
							"name": "404",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/comment/createdBy/{{createdBy}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment",
										"createdBy",
										"{{createdBy}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 15:46:18 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 22:46:18 +0700\",\n    \"status\": 404,\n    \"operationId\": \"946facbf2b6a6ac4\",\n    \"error\": \"RESOURCE_NOT_FOUND_ERROR\",\n    \"message\": \"username wrongusername not found\",\n    \"path\": \"/comment/createdBy/wrongusername\"\n}"
						}
					]
				},
				{
					"name": "page index >= totalPage",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"createdBy\", \"javadev111\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/comment/createdBy/{{createdBy}}?page=999999",
							"host": [
								"{{domain}}"
							],
							"path": [
								"comment",
								"createdBy",
								"{{createdBy}}"
							],
							"query": [
								{
									"key": "page",
									"value": "999999"
								}
							]
						}
					},
					"response": [
						{
							"name": "204",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/comment/createdBy/{{createdBy}}?page=999999",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment",
										"createdBy",
										"{{createdBy}}"
									],
									"query": [
										{
											"key": "page",
											"value": "999999"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 15:46:56 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "05.05_/comment/{{commentId}} GET",
			"item": [
				{
					"name": "200",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"commentId\", 21);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/comment/{{commentId}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"comment",
								"{{commentId}}"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/comment/{{commentId}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment",
										"{{commentId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 11 Jul 2022 14:57:58 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 21,\n    \"content\": \"I'll compress the primary FTP driver, that should bus the COM interface!, You can't connect the monitor without hacking the auxiliary SCSI firewall!, Try to compress the SMTP transmitter, maybe it will bypass the wireless bandwidth!, If we bypass the sensor, we can get to the SCSI sensor through the bluetooth HDD system!, You can't parse the application without parsing the haptic SSL program!\",\n    \"createdBy\": \"javadev111\",\n    \"createdDate\": \"2022-07-06 00:57:11 +0700\",\n    \"lastModifiedBy\": \"javadev111\",\n    \"lastModifiedDate\": \"2022-07-06 00:57:11 +0700\"\n}"
						}
					]
				},
				{
					"name": "404",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"commentId\", 999999);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/comment/{{commentId}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"comment",
								"{{commentId}}"
							]
						}
					},
					"response": [
						{
							"name": "404",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/comment/{{commentId}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment",
										"{{commentId}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 15:48:06 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 22:48:06 +0700\",\n    \"status\": 404,\n    \"operationId\": \"558cad18de0a9496\",\n    \"error\": \"RESOURCE_NOT_FOUND_ERROR\",\n    \"message\": \"Comment, id:999999 not found\",\n    \"path\": \"/comment/999999\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "05.06_/comment/{{commentId}} DELETE",
			"item": [
				{
					"name": "delete",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"commentId\", 40);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{domain}}/comment/{{commentId}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"comment",
								"{{commentId}}"
							]
						}
					},
					"response": [
						{
							"name": "403_ROLE_USER_username does not match comment created by",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{domain}}/comment/{{commentId}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment",
										"{{commentId}}"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jul 2022 16:55:45 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-14 23:55:45 +0700\",\n    \"status\": 403,\n    \"operationId\": \"ebfa79d9bff89874\",\n    \"error\": \"FORBIDDEN\",\n    \"message\": \"Access is denied\",\n    \"path\": \"/comment/41\"\n}"
						},
						{
							"name": "200_ROLE_USER_username match comment created by",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{domain}}/comment/{{commentId}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment",
										"{{commentId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jul 2022 16:56:45 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "200_>=ROLE_MODERATOR",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{domain}}/comment/{{commentId}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment",
										"{{commentId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jul 2022 16:57:49 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "No Auth delete",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"commentId\", 39);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{domain}}/comment/{{commentId}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"comment",
								"{{commentId}}"
							]
						}
					},
					"response": [
						{
							"name": "401",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{domain}}/comment/{{commentId}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment",
										"{{commentId}}"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "inactive comment  or comment not found",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"commentId\", 999999);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{domain}}/comment/{{commentId}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"comment",
								"{{commentId}}"
							]
						}
					},
					"response": [
						{
							"name": "400",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{domain}}/comment/{{commentId}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"comment",
										"{{commentId}}"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jul 2022 17:08:11 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-15 00:08:11 +0700\",\n    \"status\": 400,\n    \"operationId\": \"6b66c8e94d2f386a\",\n    \"error\": \"BAD_REQUEST\",\n    \"message\": \"Comment, id:999999 not found\",\n    \"path\": \"/comment/999999\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "08.01_/account/updateRole PUT",
			"item": [
				{
					"name": "update role moderator",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"usernameUpdate\", \"javadev311\");\r",
									"pm.environment.set(\"roleUpdate\", \"ROLE_MODERATOR\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{usernameUpdate}}\",\r\n    \"role\": \"{{roleUpdate}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/account/updateRole",
							"host": [
								"{{domain}}"
							],
							"path": [
								"account",
								"updateRole"
							]
						}
					},
					"response": [
						{
							"name": "403_<=ROLE_MODERATOR",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{usernameUpdate}}\",\r\n    \"role\": \"{{roleUpdate}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/account/updateRole",
									"host": [
										"{{domain}}"
									],
									"path": [
										"account",
										"updateRole"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 Jul 2022 15:37:02 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-15 22:37:02 +0700\",\n    \"status\": 403,\n    \"operationId\": \"abee1ad3a44c1f19\",\n    \"error\": \"FORBIDDEN\",\n    \"message\": \"Access is denied\",\n    \"path\": \"/account/updateRole\"\n}"
						},
						{
							"name": "200_>=ROLE_ADMIN",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{usernameUpdate}}\",\r\n    \"role\": \"{{roleUpdate}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/account/updateRole",
									"host": [
										"{{domain}}"
									],
									"path": [
										"account",
										"updateRole"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 Jul 2022 16:35:31 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"UPDATE ROLE SUCCESS\",\n    \"message\": \"You have updated role ROLE_MODERATOR to user javadev311 successfully\"\n}"
						},
						{
							"name": "400",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{usernameUpdate}}\",\r\n    \"role\": \"{{roleUpdate}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/account/updateRole",
									"host": [
										"{{domain}}"
									],
									"path": [
										"account",
										"updateRole"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 Jul 2022 16:47:47 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-15 23:47:47 +0700\",\n    \"status\": 400,\n    \"operationId\": \"6a6c14a24ee9395a\",\n    \"error\": \"BAD_REQUEST\",\n    \"message\": \"This user has already had this role\",\n    \"path\": \"/account/updateRole\"\n}"
						}
					]
				},
				{
					"name": "update role user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"usernameUpdate\", \"javadev311\");\r",
									"pm.environment.set(\"roleUpdate\", \"ROLE_USER\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{usernameUpdate}}\",\r\n    \"role\": \"{{roleUpdate}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/account/updateRole",
							"host": [
								"{{domain}}"
							],
							"path": [
								"account",
								"updateRole"
							]
						}
					},
					"response": [
						{
							"name": "403_<=_ROLE_MODERATOR",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{usernameUpdate}}\",\r\n    \"role\": \"{{roleUpdate}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/account/updateRole",
									"host": [
										"{{domain}}"
									],
									"path": [
										"account",
										"updateRole"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 Jul 2022 16:49:37 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-15 23:49:37 +0700\",\n    \"status\": 403,\n    \"operationId\": \"1324c1421503ecf9\",\n    \"error\": \"FORBIDDEN\",\n    \"message\": \"Access is denied\",\n    \"path\": \"/account/updateRole\"\n}"
						},
						{
							"name": "200_>=ROLE_ADMIN_update account <=ROLE_MODERATOR",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{usernameUpdate}}\",\r\n    \"role\": \"{{roleUpdate}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/account/updateRole",
									"host": [
										"{{domain}}"
									],
									"path": [
										"account",
										"updateRole"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 Jul 2022 16:36:12 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"UPDATE ROLE SUCCESS\",\n    \"message\": \"You have updated role ROLE_USER to user javadev311 successfully\"\n}"
						},
						{
							"name": "200_ROLE_ROOT_ADMIN_update account ROLE_ADMIN",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{usernameUpdate}}\",\r\n    \"role\": \"{{roleUpdate}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/account/updateRole",
									"host": [
										"{{domain}}"
									],
									"path": [
										"account",
										"updateRole"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 Jul 2022 16:36:12 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"UPDATE ROLE SUCCESS\",\n    \"message\": \"You have updated role ROLE_USER to user javadev311 successfully\"\n}"
						},
						{
							"name": "400",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{usernameUpdate}}\",\r\n    \"role\": \"{{roleUpdate}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/account/updateRole",
									"host": [
										"{{domain}}"
									],
									"path": [
										"account",
										"updateRole"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 Jul 2022 16:48:25 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-15 23:48:25 +0700\",\n    \"status\": 400,\n    \"operationId\": \"878fcb3671ebd794\",\n    \"error\": \"BAD_REQUEST\",\n    \"message\": \"This user has already had this role\",\n    \"path\": \"/account/updateRole\"\n}"
						},
						{
							"name": "403 _update role to admin account",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{usernameUpdate}}\",\r\n    \"role\": \"{{roleUpdate}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/account/updateRole",
									"host": [
										"{{domain}}"
									],
									"path": [
										"account",
										"updateRole"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 16 Jul 2022 05:05:22 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-16 12:05:22 +0700\",\n    \"status\": 403,\n    \"operationId\": \"2ba208df8ff5013a\",\n    \"error\": \"FORBIDDEN\",\n    \"message\": \"You don't have permission to set role to this user\",\n    \"path\": \"/account/updateRole\"\n}"
						}
					]
				},
				{
					"name": "update role admin",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"usernameUpdate\", \"javadev311\");\r",
									"pm.environment.set(\"roleUpdate\", \"ROLE_ADMIN\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{usernameUpdate}}\",\r\n    \"role\": \"{{roleUpdate}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/account/updateRole",
							"host": [
								"{{domain}}"
							],
							"path": [
								"account",
								"updateRole"
							]
						}
					},
					"response": [
						{
							"name": "403_<=ROLE_ADMIN",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{usernameUpdate}}\",\r\n    \"role\": \"{{roleUpdate}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/account/updateRole",
									"host": [
										"{{domain}}"
									],
									"path": [
										"account",
										"updateRole"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 Jul 2022 16:51:10 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-15 23:51:10 +0700\",\n    \"status\": 403,\n    \"operationId\": \"35e74c892c17df7c\",\n    \"error\": \"FORBIDDEN\",\n    \"message\": \"You don't have permission to set this role\",\n    \"path\": \"/account/updateRole\"\n}"
						},
						{
							"name": "400",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{usernameUpdate}}\",\r\n    \"role\": \"{{roleUpdate}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/account/updateRole",
									"host": [
										"{{domain}}"
									],
									"path": [
										"account",
										"updateRole"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 Jul 2022 16:57:51 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-15 23:57:51 +0700\",\n    \"status\": 400,\n    \"operationId\": \"e123d0c92ec5c857\",\n    \"error\": \"BAD_REQUEST\",\n    \"message\": \"This user has already had this role\",\n    \"path\": \"/account/updateRole\"\n}"
						}
					]
				},
				{
					"name": "ROLE_ADMIN update role to >=ROLE_ADMIN account",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"usernameUpdate\", \"rootAdmin\");\r",
									"pm.environment.set(\"roleUpdate\", \"ROLE_USER\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{usernameUpdate}}\",\r\n    \"role\": \"{{roleUpdate}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/account/updateRole",
							"host": [
								"{{domain}}"
							],
							"path": [
								"account",
								"updateRole"
							]
						}
					},
					"response": [
						{
							"name": "403",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{usernameUpdate}}\",\r\n    \"role\": \"{{roleUpdate}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/account/updateRole",
									"host": [
										"{{domain}}"
									],
									"path": [
										"account",
										"updateRole"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 Jul 2022 17:01:40 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-16 00:01:40 +0700\",\n    \"status\": 403,\n    \"operationId\": \"1420df6052e5ab7b\",\n    \"error\": \"FORBIDDEN\",\n    \"message\": \"You don't have permission to set role to this user\",\n    \"path\": \"/account/updateRole\"\n}"
						}
					]
				},
				{
					"name": "update role to itself",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"usernameUpdate\", \"admin\");\r",
									"pm.environment.set(\"roleUpdate\", \"ROLE_USER\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{usernameUpdate}}\",\r\n    \"role\": \"{{roleUpdate}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/account/updateRole",
							"host": [
								"{{domain}}"
							],
							"path": [
								"account",
								"updateRole"
							]
						}
					},
					"response": [
						{
							"name": "403",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{usernameUpdate}}\",\r\n    \"role\": \"{{roleUpdate}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/account/updateRole",
									"host": [
										"{{domain}}"
									],
									"path": [
										"account",
										"updateRole"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 Jul 2022 17:07:25 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-16 00:07:25 +0700\",\n    \"status\": 403,\n    \"operationId\": \"3b285b0cede8d4dc\",\n    \"error\": \"FORBIDDEN\",\n    \"message\": \"You can't set role to yourself\",\n    \"path\": \"/account/updateRole\"\n}"
						}
					]
				},
				{
					"name": "ROLE wrong value",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"usernameUpdate\", \"javadev311\");\r",
									"pm.environment.set(\"roleUpdate\", \"abcxyz\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{usernameUpdate}}\",\r\n    \"role\": \"{{roleUpdate}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/account/updateRole",
							"host": [
								"{{domain}}"
							],
							"path": [
								"account",
								"updateRole"
							]
						}
					},
					"response": [
						{
							"name": "400",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{usernameUpdate}}\",\r\n    \"role\": \"{{roleUpdate}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/account/updateRole",
									"host": [
										"{{domain}}"
									],
									"path": [
										"account",
										"updateRole"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 16 Jul 2022 04:30:47 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-16 11:30:47 +0700\",\n    \"status\": 400,\n    \"operationId\": \"756edff7c7b4e7a8\",\n    \"error\": \"BAD_REQUEST\",\n    \"message\": \"Bad Request\",\n    \"path\": \"/account/updateRole\"\n}"
						}
					]
				},
				{
					"name": "username not found",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"usernameUpdate\", \"wrongusername\");\r",
									"pm.environment.set(\"roleUpdate\", \"ROLE_MODERATOR\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{usernameUpdate}}\",\r\n    \"role\": \"{{roleUpdate}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/account/updateRole",
							"host": [
								"{{domain}}"
							],
							"path": [
								"account",
								"updateRole"
							]
						}
					},
					"response": [
						{
							"name": "404",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{usernameUpdate}}\",\r\n    \"role\": \"{{roleUpdate}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/account/updateRole",
									"host": [
										"{{domain}}"
									],
									"path": [
										"account",
										"updateRole"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 16 Jul 2022 04:34:41 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-16 11:34:41 +0700\",\n    \"status\": 404,\n    \"operationId\": \"67d96614278f4891\",\n    \"error\": \"RESOURCE_NOT_FOUND_ERROR\",\n    \"message\": \"username wrongusername not found\",\n    \"path\": \"/account/updateRole\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "08.02_/account/profile/:username POST",
			"item": [
				{
					"name": "create/update user profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"usernameUpdate\", \"javadev311\");\r",
									"pm.environment.set(\"roleUpdate\", \"ROLE_MODERATOR\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"birthday\": \"2009-07-24\",\r\n    \"address\": \"{{$randomStreetAddress}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/account/profile/:username",
							"host": [
								"{{domain}}"
							],
							"path": [
								"account",
								"profile",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "{{username}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"birthday\": \"1993-12-31\",\r\n    \"address\": \"{{$randomStreetAddress}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/account/profile/{{username}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"account",
										"profile",
										"{{username}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 23 Jul 2022 00:33:03 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"Update profile successfully\",\n    \"message\": \"You have successfully updated your profile\"\n}"
						},
						{
							"name": "422_age maximum 130",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"birthday\": \"1892-07-22\",\r\n    \"address\": \"{{$randomStreetAddress}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/account/profile/:username",
									"host": [
										"{{domain}}"
									],
									"path": [
										"account",
										"profile",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "{{username}}"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 23 Jul 2022 14:21:52 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-23 21:21:52.239 +0700\",\n    \"status\": 422,\n    \"operationId\": \"a5fd2f6046c22f4c\",\n    \"error\": \"VALIDATION_ERROR\",\n    \"path\": \"/account/profile/javadev311\",\n    \"errorDetails\": [\n        {\n            \"field\": \"birthday\",\n            \"message\": \"Invalid birthday, age maximum: 130\"\n        }\n    ]\n}"
						},
						{
							"name": "422_age minimum 13",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"birthday\": \"2009-07-24\",\r\n    \"address\": \"{{$randomStreetAddress}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/account/profile/:username",
									"host": [
										"{{domain}}"
									],
									"path": [
										"account",
										"profile",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "{{username}}"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 23 Jul 2022 14:22:39 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-23 21:22:39.593 +0700\",\n    \"status\": 422,\n    \"operationId\": \"e459da4c84181307\",\n    \"error\": \"VALIDATION_ERROR\",\n    \"path\": \"/account/profile/javadev311\",\n    \"errorDetails\": [\n        {\n            \"field\": \"birthday\",\n            \"message\": \"Invalid birthday, age minimum: 13\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "403",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"usernameUpdate\", \"javadev311\");\r",
									"pm.environment.set(\"roleUpdate\", \"ROLE_MODERATOR\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"birthday\": \"1993-12-31\",\r\n    \"address\": \"{{$randomStreetAddress}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/account/profile/:username",
							"host": [
								"{{domain}}"
							],
							"path": [
								"account",
								"profile",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "admin"
								}
							]
						}
					},
					"response": [
						{
							"name": "403",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"birthday\": \"1993-12-31\",\r\n    \"address\": \"{{$randomStreetAddress}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/account/profile/:username",
									"host": [
										"{{domain}}"
									],
									"path": [
										"account",
										"profile",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "admin"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 23 Jul 2022 03:35:13 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-23 10:35:13.266 +0700\",\n    \"status\": 403,\n    \"operationId\": \"88098236058d99c4\",\n    \"error\": \"FORBIDDEN\",\n    \"message\": \"Access is denied\",\n    \"path\": \"/account/profile/admin\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "08.03_/account/profile/:username",
			"item": [
				{
					"name": "view user profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"usernameUpdate\", \"javadev311\");\r",
									"pm.environment.set(\"roleUpdate\", \"ROLE_MODERATOR\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/account/profile/:username",
							"host": [
								"{{domain}}"
							],
							"path": [
								"account",
								"profile",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "javadev311"
								}
							]
						}
					},
					"response": [
						{
							"name": "200_match username OR >=ROLE_ADMIN",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/account/profile/:username",
									"host": [
										"{{domain}}"
									],
									"path": [
										"account",
										"profile",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "javadev311"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 23 Jul 2022 03:41:58 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"fullName\": \"Ellis Rohan\",\n    \"birthday\": \"1993-12-31\",\n    \"address\": \"50159 Barrows Spring\"\n}"
						},
						{
							"name": "403_username not match",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/account/profile/:username",
									"host": [
										"{{domain}}"
									],
									"path": [
										"account",
										"profile",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "javadev311"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 23 Jul 2022 03:43:54 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-23 10:43:54.288 +0700\",\n    \"status\": 403,\n    \"operationId\": \"2413f71d99777358\",\n    \"error\": \"FORBIDDEN\",\n    \"message\": \"Access is denied\",\n    \"path\": \"/account/profile/javadev311\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "09.01_/admin/masterMessage",
			"item": [
				{
					"name": "get",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/admin/masterMessage",
							"host": [
								"{{domain}}"
							],
							"path": [
								"admin",
								"masterMessage"
							]
						}
					},
					"response": [
						{
							"name": "200_ROLE_ADMIN",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/admin/masterMessage",
									"host": [
										"{{domain}}"
									],
									"path": [
										"admin",
										"masterMessage"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 16:38:55 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"messageCode\": \"SIGN_UP_SUCCESS\",\n        \"message\": \"Hi %s, we've sent an email to %s. Please click on the link given in email to verify your account.\\nThe link in the email will expire in 24 hours.\",\n        \"title\": \"VERIFICATION LINK SENT\"\n    },\n    {\n        \"id\": 2,\n        \"messageCode\": \"VERIFY_ACCOUNT_SUCCESS\",\n        \"message\": \"Hi %s, your account has been verified.\",\n        \"title\": \"VERIFICATION SUCCESS\"\n    },\n    {\n        \"id\": 3,\n        \"messageCode\": \"CREATE_SUCCESS\",\n        \"message\": \"You have create %s \\\"%s\\\" successfully\",\n        \"title\": \"CREATE %s SUCCESS\"\n    },\n    {\n        \"id\": 10,\n        \"messageCode\": \"DELETE_SUCCESS\",\n        \"message\": \"You have deleted %s \\\"%s\\\" successfully\",\n        \"title\": \"DELETE %s SUCCESS\"\n    }\n]"
						},
						{
							"name": "403_ROLE_USER",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/admin/masterMessage",
									"host": [
										"{{domain}}"
									],
									"path": [
										"admin",
										"masterMessage"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 17:48:17 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-14 00:48:17 +0700\",\n    \"status\": 403,\n    \"operationId\": \"51cb6b713a60b25f\",\n    \"error\": \"FORBIDDEN\",\n    \"message\": \"Access is denied\",\n    \"path\": \"/admin/masterMessage\"\n}"
						},
						{
							"name": "403_ROLE_MODERATOR",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/admin/masterMessage",
									"host": [
										"{{domain}}"
									],
									"path": [
										"admin",
										"masterMessage"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 17:48:17 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-14 00:48:17 +0700\",\n    \"status\": 403,\n    \"operationId\": \"51cb6b713a60b25f\",\n    \"error\": \"FORBIDDEN\",\n    \"message\": \"Access is denied\",\n    \"path\": \"/admin/masterMessage\"\n}"
						}
					]
				},
				{
					"name": "No Auth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/admin/masterMessage",
							"host": [
								"{{domain}}"
							],
							"path": [
								"admin",
								"masterMessage"
							]
						}
					},
					"response": [
						{
							"name": "401",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/admin/masterMessage",
									"host": [
										"{{domain}}"
									],
									"path": [
										"admin",
										"masterMessage"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 16:39:55 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-13 23:39:55 +0700\",\n    \"status\": 401,\n    \"operationId\": \"b862eabdf11c48b8\",\n    \"error\": \"UNAUTHORIZED\",\n    \"message\": \"Full authentication is required to access this resource\",\n    \"path\": \"/admin/masterMessage\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "09.02_/admin/masterErrorMessage",
			"item": [
				{
					"name": "get",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/admin/masterErrorMessage",
							"host": [
								"{{domain}}"
							],
							"path": [
								"admin",
								"masterErrorMessage"
							]
						}
					},
					"response": [
						{
							"name": "200_ROLE_ADMIN",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/admin/masterErrorMessage",
									"host": [
										"{{domain}}"
									],
									"path": [
										"admin",
										"masterErrorMessage"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 16:42:58 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"errorCode\": \"SEND_MAIL_ERROR\",\n        \"errorMessage\": \"Error sending email to %s.\"\n    },\n    {\n        \"id\": 2,\n        \"errorCode\": \"USERNAME_EXISTED_ERROR\",\n        \"errorMessage\": \"This username has already been taken.\\nPlease try another.\"\n    },\n    {\n        \"id\": 3,\n        \"errorCode\": \"EMAIL_EXISTED_ERROR\",\n        \"errorMessage\": \"This email has already been taken.\\nPlease try another.\"\n    },\n    {\n        \"id\": 4,\n        \"errorCode\": \"ACCOUNT_ALREADY_ACTIVATED_ERROR\",\n        \"errorMessage\": \"Your account has been already activated.\"\n    }\n]"
						},
						{
							"name": "403_ROLE_USER",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/admin/masterErrorMessage",
									"host": [
										"{{domain}}"
									],
									"path": [
										"admin",
										"masterErrorMessage"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 17:48:46 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-14 00:48:46 +0700\",\n    \"status\": 403,\n    \"operationId\": \"794a98d63ed07d98\",\n    \"error\": \"FORBIDDEN\",\n    \"message\": \"Access is denied\",\n    \"path\": \"/admin/masterErrorMessage\"\n}"
						},
						{
							"name": "403_ROLE_MODERATOR",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/admin/masterErrorMessage",
									"host": [
										"{{domain}}"
									],
									"path": [
										"admin",
										"masterErrorMessage"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 17:48:46 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-14 00:48:46 +0700\",\n    \"status\": 403,\n    \"operationId\": \"794a98d63ed07d98\",\n    \"error\": \"FORBIDDEN\",\n    \"message\": \"Access is denied\",\n    \"path\": \"/admin/masterErrorMessage\"\n}"
						}
					]
				},
				{
					"name": "No Auth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/admin/masterErrorMessage",
							"host": [
								"{{domain}}"
							],
							"path": [
								"admin",
								"masterErrorMessage"
							]
						}
					},
					"response": [
						{
							"name": "401",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/admin/masterErrorMessage",
									"host": [
										"{{domain}}"
									],
									"path": [
										"admin",
										"masterErrorMessage"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Jul 2022 18:02:06 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-14 01:02:06 +0700\",\n    \"status\": 401,\n    \"operationId\": \"1d41e111da298995\",\n    \"error\": \"UNAUTHORIZED\",\n    \"message\": \"Full authentication is required to access this resource\",\n    \"path\": \"/admin/masterErrorMessage\"\n}"
						}
					]
				}
			]
		}
	]
}