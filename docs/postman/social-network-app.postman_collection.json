{
	"info": {
		"_postman_id": "7fe1a6ed-6a85-46c2-9068-67500240ded7",
		"name": "social-network-app",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13249139"
	},
	"item": [
		{
			"name": "01.01_Prepare",
			"item": [
				{
					"name": "Prepare account javadev111",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"domain\", \"http://localhost:8080\");\r",
									"pm.environment.set(\"email\", \"javadev111@javadev111.com\");\r",
									"pm.environment.set(\"username\", \"javadev111\");\r",
									"pm.environment.set(\"password\", \"P@ssw0rd\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/auth",
							"host": [
								"{{domain}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/auth/signIn",
							"host": [
								"{{domain}}"
							],
							"path": [
								"auth",
								"signIn"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "02.01_/auth/signUp",
			"item": [
				{
					"name": "account javadev111",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"email\", \"javadev111@javadev111.com\");\r",
									"pm.environment.set(\"username\", \"javadev111\");\r",
									"pm.environment.set(\"password\", \"P@ssw0rd\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/auth/signUp",
							"host": [
								"{{domain}}"
							],
							"path": [
								"auth",
								"signUp"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"javadev1234@gmail.com\",\r\n    \"username\": \"javadev4\",\r\n    \"password\": \"password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signUp",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signUp"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 05:55:30 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"VERIFICATION LINK SENT\",\n    \"message\": \"Hi javadev4, we've sent an email to j*********4@g***l.com. Please click on the link given in email to verify your account.\\nThe link in the email will expire in 24 hours.\"\n}"
						},
						{
							"name": "500 SEND_MAIL_ERROR",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"javadev123@gmail.com\",\r\n    \"username\": \"javadev\",\r\n    \"password\": \"password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signUp",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signUp"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 24 Jun 2022 04:07:19 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"24-06-2022 11:07:19\",\n    \"status\": 500,\n    \"operationId\": \"fcb786117e0974b3\",\n    \"error\": \"SEND_MAIL_ERROR\",\n    \"message\": \"Error sending email to j********3@g***l.com\",\n    \"path\": \"/auth/signUp\"\n}"
						},
						{
							"name": "404 Error code SEND_MAIL_ERROR not found in master_error_message",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"javadev1233@gmail.com\",\r\n    \"username\": \"javadev3\",\r\n    \"password\": \"password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signUp",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signUp"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 05:50:10 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"26-06-2022 12:50:10\",\n    \"status\": 404,\n    \"operationId\": \"2dd05cdca52685a8\",\n    \"error\": \"RESOURCE_NOT_FOUND_ERROR\",\n    \"message\": \"Error code SEND_MAIL_ERROR not found\",\n    \"path\": \"/auth/signUp\"\n}"
						},
						{
							"name": "500 Error sending email to %s %s; Error sending email to %d",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"javadev123@gmail.com\",\r\n    \"username\": \"javadev\",\r\n    \"password\": \"password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signUp",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signUp"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 24 Jun 2022 05:45:28 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"24-06-2022 12:45:28\",\n    \"status\": 500,\n    \"operationId\": \"694c47f35cdfec6b\",\n    \"error\": \"INTERNAL_SERVER_ERROR\",\n    \"message\": \"Internal Server Error\",\n    \"path\": \"/auth/signUp\"\n}"
						},
						{
							"name": "409 VALIDATION_ERROR CONFLICT",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"javadev123@gmail.com\",\r\n    \"username\": \"javadev\",\r\n    \"password\": \"password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signUp",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signUp"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jun 2022 15:08:27 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"25-06-2022 22:08:27\",\n    \"status\": 409,\n    \"operationId\": \"b08022079f8882cc\",\n    \"error\": \"VALIDATION_ERROR\",\n    \"path\": \"/auth/signUp\",\n    \"errorDetails\": [\n        {\n            \"field\": \"email\",\n            \"message\": \"This email has already been taken.\\nPlease try another.\"\n        },\n        {\n            \"field\": \"username\",\n            \"message\": \"This username has already been taken.\\nPlease try another.\"\n        }\n    ]\n}"
						},
						{
							"name": "409 VALIDATION_ERROR CONFLICT",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"javadev1231@gmail.com\",\r\n    \"username\": \"javadev\",\r\n    \"password\": \"password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signUp",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signUp"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jun 2022 15:09:38 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"25-06-2022 22:09:38\",\n    \"status\": 409,\n    \"operationId\": \"9cb6af1796443db7\",\n    \"error\": \"VALIDATION_ERROR\",\n    \"path\": \"/auth/signUp\",\n    \"errorDetails\": [\n        {\n            \"field\": \"username\",\n            \"message\": \"This username has already been taken.\\nPlease try another.\"\n        }\n    ]\n}"
						},
						{
							"name": "409 VALIDATION_ERROR CONFLICT",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"javadev123@gmail.com\",\r\n    \"username\": \"javadev1\",\r\n    \"password\": \"password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signUp",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signUp"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jun 2022 15:10:17 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"25-06-2022 22:10:17\",\n    \"status\": 409,\n    \"operationId\": \"5f83675a145bebeb\",\n    \"error\": \"VALIDATION_ERROR\",\n    \"path\": \"/auth/signUp\",\n    \"errorDetails\": [\n        {\n            \"field\": \"email\",\n            \"message\": \"This email has already been taken.\\nPlease try another.\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "random username + email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));\r",
									"pm.environment.set(\"username\", pm.variables.replaceIn('{{$randomUserName}}'));\r",
									"pm.environment.set(\"password\", \"P@ssw0rd\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/auth/signUp",
							"host": [
								"{{domain}}"
							],
							"path": [
								"auth",
								"signUp"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"javadev1234@gmail.com\",\r\n    \"username\": \"javadev4\",\r\n    \"password\": \"password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signUp",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signUp"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 05:55:30 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"VERIFICATION LINK SENT\",\n    \"message\": \"Hi javadev4, we've sent an email to j*********4@g***l.com. Please click on the link given in email to verify your account.\\nThe link in the email will expire in 24 hours.\"\n}"
						},
						{
							"name": "500 SEND_MAIL_ERROR",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"javadev123@gmail.com\",\r\n    \"username\": \"javadev\",\r\n    \"password\": \"password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signUp",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signUp"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 24 Jun 2022 04:07:19 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"24-06-2022 11:07:19\",\n    \"status\": 500,\n    \"operationId\": \"fcb786117e0974b3\",\n    \"error\": \"SEND_MAIL_ERROR\",\n    \"message\": \"Error sending email to j********3@g***l.com\",\n    \"path\": \"/auth/signUp\"\n}"
						},
						{
							"name": "404 Error code SEND_MAIL_ERROR not found in master_error_message",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"javadev1233@gmail.com\",\r\n    \"username\": \"javadev3\",\r\n    \"password\": \"password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signUp",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signUp"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 05:50:10 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"26-06-2022 12:50:10\",\n    \"status\": 404,\n    \"operationId\": \"2dd05cdca52685a8\",\n    \"error\": \"RESOURCE_NOT_FOUND_ERROR\",\n    \"message\": \"Error code SEND_MAIL_ERROR not found\",\n    \"path\": \"/auth/signUp\"\n}"
						},
						{
							"name": "500 Error sending email to %s %s; Error sending email to %d",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"javadev123@gmail.com\",\r\n    \"username\": \"javadev\",\r\n    \"password\": \"password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signUp",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signUp"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 24 Jun 2022 05:45:28 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"24-06-2022 12:45:28\",\n    \"status\": 500,\n    \"operationId\": \"694c47f35cdfec6b\",\n    \"error\": \"INTERNAL_SERVER_ERROR\",\n    \"message\": \"Internal Server Error\",\n    \"path\": \"/auth/signUp\"\n}"
						},
						{
							"name": "409 VALIDATION_ERROR CONFLICT",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"javadev123@gmail.com\",\r\n    \"username\": \"javadev\",\r\n    \"password\": \"password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signUp",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signUp"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jun 2022 15:08:27 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"25-06-2022 22:08:27\",\n    \"status\": 409,\n    \"operationId\": \"b08022079f8882cc\",\n    \"error\": \"VALIDATION_ERROR\",\n    \"path\": \"/auth/signUp\",\n    \"errorDetails\": [\n        {\n            \"field\": \"email\",\n            \"message\": \"This email has already been taken.\\nPlease try another.\"\n        },\n        {\n            \"field\": \"username\",\n            \"message\": \"This username has already been taken.\\nPlease try another.\"\n        }\n    ]\n}"
						},
						{
							"name": "409 VALIDATION_ERROR CONFLICT",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"javadev1231@gmail.com\",\r\n    \"username\": \"javadev\",\r\n    \"password\": \"password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signUp",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signUp"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jun 2022 15:09:38 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"25-06-2022 22:09:38\",\n    \"status\": 409,\n    \"operationId\": \"9cb6af1796443db7\",\n    \"error\": \"VALIDATION_ERROR\",\n    \"path\": \"/auth/signUp\",\n    \"errorDetails\": [\n        {\n            \"field\": \"username\",\n            \"message\": \"This username has already been taken.\\nPlease try another.\"\n        }\n    ]\n}"
						},
						{
							"name": "409 VALIDATION_ERROR CONFLICT",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"javadev123@gmail.com\",\r\n    \"username\": \"javadev1\",\r\n    \"password\": \"password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signUp",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signUp"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jun 2022 15:10:17 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"25-06-2022 22:10:17\",\n    \"status\": 409,\n    \"operationId\": \"5f83675a145bebeb\",\n    \"error\": \"VALIDATION_ERROR\",\n    \"path\": \"/auth/signUp\",\n    \"errorDetails\": [\n        {\n            \"field\": \"email\",\n            \"message\": \"This email has already been taken.\\nPlease try another.\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "validation exception",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"email\", \"javadev111javadev111.com\");\r",
									"pm.environment.set(\"username\", \"\");\r",
									"pm.environment.set(\"password\", \"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/auth/signUp",
							"host": [
								"{{domain}}"
							],
							"path": [
								"auth",
								"signUp"
							]
						}
					},
					"response": [
						{
							"name": "422",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"emailemail.com\",\r\n    \"username\": \"\",\r\n    \"password\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signUp",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signUp"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jun 2022 11:03:36 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"25-06-2022 18:03:36\",\n    \"status\": 422,\n    \"operationId\": \"a543efebf5c39237\",\n    \"error\": \"VALIDATION_ERROR\",\n    \"path\": \"/auth/signUp\",\n    \"errorDetails\": [\n        {\n            \"field\": \"password\",\n            \"message\": \"Password is required\"\n        },\n        {\n            \"field\": \"email\",\n            \"message\": \"must be a well-formed email address\"\n        },\n        {\n            \"field\": \"username\",\n            \"message\": \"Username is required\"\n        }\n    ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "02.02_/auth/verifyAccount/{token}",
			"item": [
				{
					"name": "Token found",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", \"808e7991-1821-44a9-b1b6-bd9d79c2cc7b\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/auth/verifyAccount/{{token}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"auth",
								"verifyAccount",
								"{{token}}"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"emailemail.com\",\r\n    \"username1\": \"\",\r\n    \"password1\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/verifyAccount/{{token}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"verifyAccount",
										"{{token}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 05:38:03 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"VERIFICATION SUCCESS\",\n    \"message\": \"Hi javadev2, your account has been verified.\"\n}"
						},
						{
							"name": "400 ACCOUNT_ALREADY_ACTIVATED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"emailemail.com\",\r\n    \"username1\": \"\",\r\n    \"password1\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/verifyAccount/{{token}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"verifyAccount",
										"{{token}}"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 05:38:35 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"26-06-2022 12:38:35\",\n    \"status\": 400,\n    \"operationId\": \"73a9927fad12a736\",\n    \"error\": \"ACCOUNT_ALREADY_ACTIVATED_ERROR\",\n    \"message\": \"Your account has been already activated.\",\n    \"path\": \"/auth/verifyAccount/40e2d367-03f9-46db-a752-ae71cb2356d2\"\n}"
						}
					]
				},
				{
					"name": "Token not found",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", \"hgvjvc\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/auth/verifyAccount/{{token}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"auth",
								"verifyAccount",
								"{{token}}"
							]
						}
					},
					"response": [
						{
							"name": "404",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/auth/verifyAccount/{{token}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"verifyAccount",
										"{{token}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 05:51:47 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"26-06-2022 12:51:47\",\n    \"status\": 404,\n    \"operationId\": \"338ced444121e471\",\n    \"error\": \"RESOURCE_NOT_FOUND_ERROR\",\n    \"message\": \"Token hgvjvc not found\",\n    \"path\": \"/auth/verifyAccount/hgvjvc\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "02.03_/auth/signIn",
			"item": [
				{
					"name": "Correct username + password",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"if (pm.response.code === 200) {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.test(\"accessToken is not null\", function () {\r",
									"        pm.expect(jsonData.accessToken).is.not.null;\r",
									"    });\r",
									"    if (jsonData.accessToken != null) {\r",
									"        pm.environment.set(\"accessToken\", jsonData.accessToken);\r",
									"    }\r",
									"\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/auth/signIn",
							"host": [
								"{{domain}}"
							],
							"path": [
								"auth",
								"signIn"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signIn",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signIn"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 02 Jul 2022 15:04:06 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"accessToken\": \"eyJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJzZWxmIiwic3ViIjoiamF2YWRldjExMSIsImV4cCI6MTY1Njc3NDMzNiwiaWF0IjoxNjU2Nzc0MjQ2LCJzY29wZSI6WyJST0xFX1VTRVIiXX0.bNsGu5k6EqbN3oYKjw5fsJ6Era9wUUdLyPGVp1-9MQgHMaGcjl1uFWTeVLHkMpoTWBGEpKUpt_ZeiGbAHYqDS7bhy-WHRjngFpi-Lwos02v_ziMALNCHmQbEnf3a545YTnxIY0Dms92HHoNRnc12jhbMezXVg6VvdGuSlabctK1SFFJuV7i3MR-5cUO7PBxX0ApwVlos_OWCEeIiAa8bEW-Z_PLdn89-m3VTeXeKq1GGLXM-zLjYs73It8duXUATAMVguregNdNifwQV4HqIawYEAsQbBXhSYrrIdSuDYCjvzQt6Tl4X9SbOnxyXsWexQANC_XCw59GAtP-2eO6asQ\",\n    \"refreshToken\": \"7f7d08e0-4416-4cb5-a6c5-b92815b79ff1\",\n    \"expiresAt\": \"2022-07-02T15:05:36.321Z\"\n}"
						}
					]
				},
				{
					"name": "wrong password",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"wrongpassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/auth/signIn",
							"host": [
								"{{domain}}"
							],
							"path": [
								"auth",
								"signIn"
							]
						}
					},
					"response": [
						{
							"name": "401",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"wrongpassword\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signIn",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signIn"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 02 Jul 2022 15:12:41 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"02-07-2022 22:12:41\",\n    \"status\": 401,\n    \"operationId\": \"6f492292bc995872\",\n    \"error\": \"UNAUTHORIZED\",\n    \"message\": \"Unauthorized\",\n    \"path\": \"/auth/signIn\"\n}"
						}
					]
				},
				{
					"name": "wrong username",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"wrongusername\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/auth/signIn",
							"host": [
								"{{domain}}"
							],
							"path": [
								"auth",
								"signIn"
							]
						}
					},
					"response": [
						{
							"name": "401",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"wrongusername\",\r\n    \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signIn",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signIn"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 02 Jul 2022 15:12:58 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"02-07-2022 22:12:58\",\n    \"status\": 401,\n    \"operationId\": \"024822ae6e79086f\",\n    \"error\": \"UNAUTHORIZED\",\n    \"message\": \"Unauthorized\",\n    \"path\": \"/auth/signIn\"\n}"
						}
					]
				},
				{
					"name": "wrong username + wrong password",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"wrongusername\",\r\n    \"password\": \"wrongpassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/auth/signIn",
							"host": [
								"{{domain}}"
							],
							"path": [
								"auth",
								"signIn"
							]
						}
					},
					"response": [
						{
							"name": "401",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"wrongusername\",\r\n    \"password\": \"wrongpassword\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/auth/signIn",
									"host": [
										"{{domain}}"
									],
									"path": [
										"auth",
										"signIn"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 03 Jul 2022 05:55:37 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"03-07-2022 12:55:37\",\n    \"status\": 401,\n    \"operationId\": \"576b5d08dd651c0c\",\n    \"error\": \"UNAUTHORIZED\",\n    \"message\": \"Unauthorized\",\n    \"path\": \"/auth/signIn\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "03.01_/forum POST",
			"item": [
				{
					"name": "200",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomWords}}\",\r\n    \"description\": \"{{$randomPhrase}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/forum",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"forum name 123\",\r\n    \"description\": \"forum description 123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/forum",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 02 Jul 2022 15:49:06 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"CREATE FORUM SUCCESS\",\n    \"message\": \"You have create forum \\\"forum name 123\\\" successfully\"\n}"
						}
					]
				},
				{
					"name": "wrong accessToken",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJzZWxmIiwic3ViIjoiamF2YWRldjExMSIsImV4cCI6MTY1Njc3MjQ2OCwiaWF0IjoxNjU2NzcyMzc4LCJzY29wZSI6WyKLT0xFX1VTRVIiXX0.rCjmcDKKYjsJWPOL4p9GUd0aGKmvoaH_mCy4hRYx1PDBro8BiEWB7V_cCZXmn0s_n4MFuNetYHbuN4PtTLkU-HCC3bWXB26S_RdSynE5X8NVX0ue_9TcF8HrqOLXdp-AOFsaeoh7yL4wV_zWhQrn1Xbo3U1P_pSJwAm6Zwpccza_QkTvlXmw4LWJAD94DSHFvIp1waAlu0kHbbqVdMVkbEUll7PN-6kZFsqb4D_x3uYlucMzK1UFpVsgi-6JJGwQXPP1IM6EgFmyQ_aGdG4rJlttQRgJnrOs2vzSxbRnln14aQsvE_RsSZquP96jwOOZRdlyUMBL_f4S9U4Pu8nYEa",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"forum name\",\r\n    \"description\": \"forum description\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/forum",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum"
							]
						}
					},
					"response": [
						{
							"name": "401",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"forum name\",\r\n    \"description\": \"forum description\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/forum",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "WWW-Authenticate",
									"value": "Bearer error=\"invalid_token\", error_description=\"An error occurred while attempting to decode the Jwt: Signed JWT rejected: Invalid signature\", error_uri=\"https://tools.ietf.org/html/rfc6750#section-3.1\""
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Date",
									"value": "Sat, 02 Jul 2022 15:49:56 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "name and description blank",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"\",\r\n    \"description\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/forum",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum"
							]
						}
					},
					"response": [
						{
							"name": "422",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"\",\r\n    \"description\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/forum",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 02 Jul 2022 15:50:33 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"02-07-2022 22:50:33\",\n    \"status\": 422,\n    \"operationId\": \"722881ebb95b65e3\",\n    \"error\": \"VALIDATION_ERROR\",\n    \"path\": \"/forum\",\n    \"errorDetails\": [\n        {\n            \"field\": \"description\",\n            \"message\": \"Description is required\"\n        },\n        {\n            \"field\": \"name\",\n            \"message\": \"Name is required\"\n        }\n    ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "03.02_/forum GET",
			"item": [
				{
					"name": "with no params",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/forum",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/forum",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 03 Jul 2022 05:54:02 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 20,\n            \"name\": \"Jenna Lindgren\",\n            \"description\": \"Sophie O'Connell\",\n            \"lastModifiedDate\": \"2022-07-03 11:47:36.961\"\n        },\n        {\n            \"id\": 19,\n            \"name\": \"Andre Reilly\",\n            \"description\": \"Lowell Harber\",\n            \"lastModifiedDate\": \"2022-07-03 11:44:50.755\"\n        },\n        {\n            \"id\": 18,\n            \"name\": \"Allen Botsford I\",\n            \"description\": \"Ed Effertz\",\n            \"lastModifiedDate\": \"2022-07-03 11:43:39.259\"\n        },\n        {\n            \"id\": 17,\n            \"name\": \"Pearl Hoppe\",\n            \"description\": \"Kelley Trantow\",\n            \"lastModifiedDate\": \"2022-07-03 11:17:53.846\"\n        },\n        {\n            \"id\": 16,\n            \"name\": \"Helen Murray\",\n            \"description\": \"Lisa Lueilwitz PhD\",\n            \"lastModifiedDate\": \"2022-07-03 01:20:56.711\"\n        },\n        {\n            \"id\": 15,\n            \"name\": \"Joanna Runolfsson PhD\",\n            \"description\": \"Rogelio Emmerich DVM\",\n            \"lastModifiedDate\": \"2022-07-03 01:20:55.917\"\n        },\n        {\n            \"id\": 14,\n            \"name\": \"Sheldon Rempel\",\n            \"description\": \"Wilfred Swaniawski\",\n            \"lastModifiedDate\": \"2022-07-03 01:20:55.156\"\n        },\n        {\n            \"id\": 13,\n            \"name\": \"Mr. Lynn Friesen\",\n            \"description\": \"Kathy Gerhold\",\n            \"lastModifiedDate\": \"2022-07-03 01:20:54.376\"\n        },\n        {\n            \"id\": 12,\n            \"name\": \"Luther Marquardt\",\n            \"description\": \"Chelsea Marvin\",\n            \"lastModifiedDate\": \"2022-07-03 01:20:53.364\"\n        },\n        {\n            \"id\": 11,\n            \"name\": \"Randy Medhurst\",\n            \"description\": \"Richard Robel\",\n            \"lastModifiedDate\": \"2022-07-03 01:20:52.279\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 19,\n    \"last\": false,\n    \"totalPages\": 2,\n    \"size\": 10,\n    \"number\": 0,\n    \"first\": true,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 10,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "with request params",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/forum?page=0&size=5&direction=DESC&properties=description",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "5"
								},
								{
									"key": "direction",
									"value": "DESC"
								},
								{
									"key": "properties",
									"value": "description"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/forum?page=0&size=5&direction=DESC&properties=description",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "5"
										},
										{
											"key": "direction",
											"value": "DESC"
										},
										{
											"key": "properties",
											"value": "description"
										}
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "list all",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/forum?size=99",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum"
							],
							"query": [
								{
									"key": "size",
									"value": "99"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/forum?size=99",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									],
									"query": [
										{
											"key": "size",
											"value": "99"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 04 Jul 2022 17:42:40 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 20,\n            \"name\": \"redefine Lodge Account Universal\",\n            \"description\": \"You can't parse the hard drive without parsing the optical ADP interface!\",\n            \"lastModifiedDate\": \"2022-07-04 12:33:44 +0700\",\n            \"createdDate\": \"2022-07-04 12:33:44 +0700\"\n        },\n        {\n            \"id\": 19,\n            \"name\": \"Polarised cyan PCI\",\n            \"description\": \"I'll connect the back-end USB panel, that should capacitor the EXE array!\",\n            \"lastModifiedDate\": \"2022-07-04 12:27:03 +0700\",\n            \"createdDate\": \"2022-07-04 12:27:03 +0700\"\n        },\n        {\n            \"id\": 18,\n            \"name\": \"cutting-edge Cambridgeshire Fantastic orange transmitting\",\n            \"description\": \"The XML port is down, navigate the multi-byte application so we can program the IB system!\",\n            \"lastModifiedDate\": \"2022-07-04 11:19:18 +0700\",\n            \"createdDate\": \"2022-07-04 11:19:18 +0700\"\n        },\n        {\n            \"id\": 17,\n            \"name\": \"Glens Customer Aruba deposit\",\n            \"description\": \"We need to transmit the primary ADP protocol!\",\n            \"lastModifiedDate\": \"2022-07-04 11:19:17 +0700\",\n            \"createdDate\": \"2022-07-04 11:19:17 +0700\"\n        },\n        {\n            \"id\": 16,\n            \"name\": \"redundant maximized redundant Granite\",\n            \"description\": \"connecting the monitor won't do anything, we need to index the multi-byte PCI feed!\",\n            \"lastModifiedDate\": \"2022-07-04 11:19:16 +0700\",\n            \"createdDate\": \"2022-07-04 11:19:16 +0700\"\n        },\n        {\n            \"id\": 15,\n            \"name\": \"service-desk Locks SAS\",\n            \"description\": \"We need to compress the solid state SQL protocol!\",\n            \"lastModifiedDate\": \"2022-07-04 11:19:15 +0700\",\n            \"createdDate\": \"2022-07-04 11:19:15 +0700\"\n        },\n        {\n            \"id\": 14,\n            \"name\": \"Practical quantifying Fully-configurable\",\n            \"description\": \"Try to generate the AI pixel, maybe it will transmit the open-source capacitor!\",\n            \"lastModifiedDate\": \"2022-07-04 11:19:14 +0700\",\n            \"createdDate\": \"2022-07-04 11:19:14 +0700\"\n        },\n        {\n            \"id\": 13,\n            \"name\": \"Cotton RAM hack Loan\",\n            \"description\": \"Try to reboot the SMTP program, maybe it will index the multi-byte capacitor!\",\n            \"lastModifiedDate\": \"2022-07-04 11:19:13 +0700\",\n            \"createdDate\": \"2022-07-04 11:19:13 +0700\"\n        },\n        {\n            \"id\": 12,\n            \"name\": \"U.S. Games\",\n            \"description\": \"navigating the protocol won't do anything, we need to quantify the auxiliary EXE monitor!\",\n            \"lastModifiedDate\": \"2022-07-04 11:19:13 +0700\",\n            \"createdDate\": \"2022-07-04 11:19:13 +0700\"\n        },\n        {\n            \"id\": 11,\n            \"name\": \"Officer connecting\",\n            \"description\": \"Use the back-end COM feed, then you can transmit the solid state feed!\",\n            \"lastModifiedDate\": \"2022-07-04 11:19:10 +0700\",\n            \"createdDate\": \"2022-07-04 11:19:10 +0700\"\n        },\n        {\n            \"id\": 10,\n            \"name\": \"Sausages Optional conglomeration\",\n            \"description\": \"We need to navigate the 1080p RSS port!\",\n            \"lastModifiedDate\": \"2022-07-04 11:19:09 +0700\",\n            \"createdDate\": \"2022-07-04 11:19:09 +0700\"\n        },\n        {\n            \"id\": 9,\n            \"name\": \"next-generation Franc\",\n            \"description\": \"navigating the microchip won't do anything, we need to back up the multi-byte JSON capacitor!\",\n            \"lastModifiedDate\": \"2022-07-04 11:19:09 +0700\",\n            \"createdDate\": \"2022-07-04 11:19:09 +0700\"\n        },\n        {\n            \"id\": 8,\n            \"name\": \"Grocery Specialist Visionary markets Rubber\",\n            \"description\": \"overriding the bandwidth won't do anything, we need to generate the digital COM panel!\",\n            \"lastModifiedDate\": \"2022-07-04 11:19:08 +0700\",\n            \"createdDate\": \"2022-07-04 11:19:08 +0700\"\n        },\n        {\n            \"id\": 7,\n            \"name\": \"Liaison Mexico GB communities\",\n            \"description\": \"The FTP feed is down, override the back-end card so we can bypass the HTTP application!\",\n            \"lastModifiedDate\": \"2022-07-04 11:19:07 +0700\",\n            \"createdDate\": \"2022-07-04 11:19:07 +0700\"\n        },\n        {\n            \"id\": 6,\n            \"name\": \"Italy Handcrafted multi-byte\",\n            \"description\": \"We need to parse the bluetooth RSS feed!\",\n            \"lastModifiedDate\": \"2022-07-04 11:19:06 +0700\",\n            \"createdDate\": \"2022-07-04 11:19:06 +0700\"\n        },\n        {\n            \"id\": 5,\n            \"name\": \"Legacy Response Falls\",\n            \"description\": \"I'll quantify the redundant SMTP feed, that should port the IB capacitor!\",\n            \"lastModifiedDate\": \"2022-07-04 11:19:05 +0700\",\n            \"createdDate\": \"2022-07-04 11:19:05 +0700\"\n        },\n        {\n            \"id\": 4,\n            \"name\": \"Facilitator methodologies Sausages synthesizing\",\n            \"description\": \"synthesizing the microchip won't do anything, we need to override the cross-platform RAM system!\",\n            \"lastModifiedDate\": \"2022-07-04 11:19:04 +0700\",\n            \"createdDate\": \"2022-07-04 11:19:04 +0700\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"hacking Gabon dedicated Toys\",\n            \"description\": \"We need to bypass the optical RSS capacitor!\",\n            \"lastModifiedDate\": \"2022-07-04 11:19:03 +0700\",\n            \"createdDate\": \"2022-07-04 11:19:03 +0700\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"salmon deposit Directives teal\",\n            \"description\": \"Use the 1080p AI array, then you can override the redundant capacitor!\",\n            \"lastModifiedDate\": \"2022-07-04 11:19:02 +0700\",\n            \"createdDate\": \"2022-07-04 11:19:02 +0700\"\n        },\n        {\n            \"id\": 1,\n            \"name\": \"cultivate Adaptive\",\n            \"description\": \"I'll hack the online CSS port, that should sensor the AI system!\",\n            \"lastModifiedDate\": \"2022-07-04 11:18:58 +0700\",\n            \"createdDate\": \"2022-07-04 11:18:58 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"sorted\": true,\n            \"unsorted\": false,\n            \"empty\": false\n        },\n        \"pageNumber\": 0,\n        \"pageSize\": 99,\n        \"offset\": 0,\n        \"paged\": true,\n        \"unpaged\": false\n    },\n    \"totalElements\": 20,\n    \"totalPages\": 1,\n    \"last\": true,\n    \"first\": true,\n    \"sort\": {\n        \"sorted\": true,\n        \"unsorted\": false,\n        \"empty\": false\n    },\n    \"numberOfElements\": 20,\n    \"size\": 99,\n    \"number\": 0,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "Page index must not be less than zero!",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/forum?page=-1&size=5&direction=DESC&properties=description",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum"
							],
							"query": [
								{
									"key": "page",
									"value": "-1"
								},
								{
									"key": "size",
									"value": "5"
								},
								{
									"key": "direction",
									"value": "DESC"
								},
								{
									"key": "properties",
									"value": "description"
								}
							]
						}
					},
					"response": [
						{
							"name": "400",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/forum?page=-1&size=5&direction=DESC&properties=description",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									],
									"query": [
										{
											"key": "page",
											"value": "-1"
										},
										{
											"key": "size",
											"value": "5"
										},
										{
											"key": "direction",
											"value": "DESC"
										},
										{
											"key": "properties",
											"value": "description"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 03 Jul 2022 05:52:39 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"03-07-2022 12:52:39\",\n    \"status\": 400,\n    \"operationId\": \"37052ef832d4139c\",\n    \"error\": \"BAD_REQUEST\",\n    \"message\": \"Bad Request\",\n    \"path\": \"/forum\"\n}"
						}
					]
				},
				{
					"name": "Page size must not be less than one!",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/forum?page=0&size=0&direction=DESC&properties=description",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "0"
								},
								{
									"key": "direction",
									"value": "DESC"
								},
								{
									"key": "properties",
									"value": "description"
								}
							]
						}
					},
					"response": [
						{
							"name": "400",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/forum?page=0&size=0&direction=DESC&properties=description",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "0"
										},
										{
											"key": "direction",
											"value": "DESC"
										},
										{
											"key": "properties",
											"value": "description"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 03 Jul 2022 05:51:51 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"03-07-2022 12:51:51\",\n    \"status\": 400,\n    \"operationId\": \"640a77ef8ec0d046\",\n    \"error\": \"BAD_REQUEST\",\n    \"message\": \"Bad Request\",\n    \"path\": \"/forum\"\n}"
						}
					]
				},
				{
					"name": "direction not valid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/forum?page=0&size=5&direction=xyz&properties=description",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "5"
								},
								{
									"key": "direction",
									"value": "xyz"
								},
								{
									"key": "properties",
									"value": "description"
								}
							]
						}
					},
					"response": [
						{
							"name": "400",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/forum?page=0&size=5&direction=xyz&properties=description",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "5"
										},
										{
											"key": "direction",
											"value": "xyz"
										},
										{
											"key": "properties",
											"value": "description"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 03 Jul 2022 05:50:31 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"03-07-2022 12:50:31\",\n    \"status\": 400,\n    \"operationId\": \"79127b5092e35d54\",\n    \"error\": \"BAD_REQUEST\",\n    \"message\": \"Bad Request\",\n    \"path\": \"/forum\"\n}"
						}
					]
				},
				{
					"name": "page index is equal or greater than totalPages",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/forum?page=99&size=5&direction=DESC&properties=description",
							"host": [
								"{{domain}}"
							],
							"path": [
								"forum"
							],
							"query": [
								{
									"key": "page",
									"value": "99"
								},
								{
									"key": "size",
									"value": "5"
								},
								{
									"key": "direction",
									"value": "DESC"
								},
								{
									"key": "properties",
									"value": "description"
								}
							]
						}
					},
					"response": [
						{
							"name": "204",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/forum?page=4&size=5&direction=DESC&properties=description",
									"host": [
										"{{domain}}"
									],
									"path": [
										"forum"
									],
									"query": [
										{
											"key": "page",
											"value": "4"
										},
										{
											"key": "size",
											"value": "5"
										},
										{
											"key": "direction",
											"value": "DESC"
										},
										{
											"key": "properties",
											"value": "description"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Sun, 03 Jul 2022 05:49:57 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "04.01_/post POST",
			"item": [
				{
					"name": "200",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomWords}}\",\r\n    \"content\": \"{{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}, {{$randomPhrase}}\",\r\n    \"forumId\": 18\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/post",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "04.02_/post GET",
			"item": [
				{
					"name": "default - page index 0, size 10, direction DESC, properties lastModifiedDate",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 04 Jul 2022 15:36:34 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 13,\n            \"name\": \"hub Analyst Saint Fantastic\",\n            \"content\": \"If we index the program, we can get to the SCSI interface through the auxiliary SMS port!, The IB application is down, calculate the mobile program so we can parse the SCSI bandwidth!, If we quantify the panel, we can get to the GB array through the bluetooth SAS port!, You can't index the feed without calculating the neural PCI microchip!, I'll calculate the mobile XSS hard drive, that should port the COM interface!\",\n            \"lastModifiedDate\": \"2022-07-04 12:41:47 +0700\",\n            \"createdDate\": \"2022-07-04 12:41:47 +0700\"\n        },\n        {\n            \"id\": 12,\n            \"name\": \"Germany Pines Tuna productivity\",\n            \"content\": \"If we parse the array, we can get to the TCP system through the neural HTTP array!, We need to input the digital JBOD protocol!, Try to hack the SAS bandwidth, maybe it will copy the redundant bus!, We need to generate the redundant SSL pixel!, synthesizing the matrix won't do anything, we need to copy the neural PNG port!\",\n            \"lastModifiedDate\": \"2022-07-04 12:26:35 +0700\",\n            \"createdDate\": \"2022-07-04 12:26:35 +0700\"\n        },\n        {\n            \"id\": 11,\n            \"name\": \"Wells directional\",\n            \"content\": \"You can't calculate the card without parsing the virtual COM bandwidth!, Use the open-source EXE bus, then you can generate the back-end matrix!, We need to index the mobile RSS sensor!, I'll connect the primary IB capacitor, that should program the CSS port!, The SDD program is down, calculate the back-end protocol so we can generate the CSS panel!\",\n            \"lastModifiedDate\": \"2022-07-04 11:22:02 +0700\",\n            \"createdDate\": \"2022-07-04 11:22:02 +0700\"\n        },\n        {\n            \"id\": 10,\n            \"name\": \"withdrawal Estates\",\n            \"content\": \"The PNG hard drive is down, back up the 1080p sensor so we can copy the RSS capacitor!, The AI port is down, bypass the multi-byte panel so we can navigate the SSL pixel!, I'll transmit the virtual XML port, that should microchip the USB pixel!, Try to parse the SAS protocol, maybe it will navigate the mobile port!, You can't copy the capacitor without programming the cross-platform SAS panel!\",\n            \"lastModifiedDate\": \"2022-07-04 11:22:01 +0700\",\n            \"createdDate\": \"2022-07-04 11:22:01 +0700\"\n        },\n        {\n            \"id\": 9,\n            \"name\": \"alarm hardware Berkshire Indiana\",\n            \"content\": \"The FTP alarm is down, reboot the haptic card so we can parse the RSS program!, Use the online IB bus, then you can hack the optical hard drive!, If we bypass the hard drive, we can get to the AI sensor through the mobile IB program!, Try to bypass the RSS card, maybe it will navigate the auxiliary monitor!, You can't program the microchip without generating the 1080p CSS card!\",\n            \"lastModifiedDate\": \"2022-07-04 11:22:00 +0700\",\n            \"createdDate\": \"2022-07-04 11:22:00 +0700\"\n        },\n        {\n            \"id\": 8,\n            \"name\": \"tangible Investor Small functionalities\",\n            \"content\": \"Try to connect the FTP matrix, maybe it will index the online alarm!, The HDD matrix is down, index the online port so we can bypass the SAS matrix!, We need to index the mobile AI bandwidth!, calculating the bandwidth won't do anything, we need to compress the multi-byte FTP firewall!, Try to copy the AI array, maybe it will index the digital array!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:59 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:59 +0700\"\n        },\n        {\n            \"id\": 7,\n            \"name\": \"Bedfordshire synthesize EXE\",\n            \"content\": \"Use the digital TCP driver, then you can reboot the multi-byte application!, We need to back up the online SQL panel!, I'll program the back-end JSON array, that should program the USB bus!, Try to synthesize the SAS alarm, maybe it will generate the auxiliary panel!, I'll calculate the solid state SDD bandwidth, that should card the SSL alarm!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:58 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:58 +0700\"\n        },\n        {\n            \"id\": 6,\n            \"name\": \"holistic indexing York Texas\",\n            \"content\": \"The PNG sensor is down, transmit the redundant port so we can index the SDD feed!, If we transmit the driver, we can get to the HDD program through the auxiliary THX circuit!, If we reboot the card, we can get to the HDD card through the open-source THX application!, We need to input the online AGP driver!, Try to hack the AI panel, maybe it will reboot the cross-platform sensor!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:57 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:57 +0700\"\n        },\n        {\n            \"id\": 5,\n            \"name\": \"bluetooth red Factors copying\",\n            \"content\": \"Try to transmit the CSS matrix, maybe it will compress the auxiliary bandwidth!, I'll synthesize the bluetooth EXE circuit, that should port the HTTP transmitter!, You can't generate the bandwidth without compressing the multi-byte FTP capacitor!, Try to input the RSS driver, maybe it will parse the optical capacitor!, I'll program the open-source HTTP transmitter, that should circuit the EXE array!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:56 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:56 +0700\"\n        },\n        {\n            \"id\": 4,\n            \"name\": \"innovative Wyoming Pound 24/7\",\n            \"content\": \"Use the bluetooth EXE transmitter, then you can copy the multi-byte microchip!, If we quantify the feed, we can get to the TCP panel through the online COM system!, I'll index the cross-platform SMS capacitor, that should matrix the COM bus!, We need to override the bluetooth AI hard drive!, The JSON bandwidth is down, reboot the neural program so we can transmit the USB capacitor!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:55 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:55 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 13,\n    \"totalPages\": 2,\n    \"last\": false,\n    \"size\": 10,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 10,\n    \"first\": true,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "pageable - page index 2, total page 5",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?page=2&size=3&direction=DESC&properties=name,content",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								},
								{
									"key": "size",
									"value": "3"
								},
								{
									"key": "direction",
									"value": "DESC"
								},
								{
									"key": "properties",
									"value": "name,content"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?page=2&size=3&direction=DESC&properties=name,content",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "size",
											"value": "3"
										},
										{
											"key": "direction",
											"value": "DESC"
										},
										{
											"key": "properties",
											"value": "name,content"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 04 Jul 2022 15:38:00 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 13,\n            \"name\": \"hub Analyst Saint Fantastic\",\n            \"content\": \"If we index the program, we can get to the SCSI interface through the auxiliary SMS port!, The IB application is down, calculate the mobile program so we can parse the SCSI bandwidth!, If we quantify the panel, we can get to the GB array through the bluetooth SAS port!, You can't index the feed without calculating the neural PCI microchip!, I'll calculate the mobile XSS hard drive, that should port the COM interface!\",\n            \"lastModifiedDate\": \"2022-07-04 12:41:47 +0700\",\n            \"createdDate\": \"2022-07-04 12:41:47 +0700\"\n        },\n        {\n            \"id\": 6,\n            \"name\": \"holistic indexing York Texas\",\n            \"content\": \"The PNG sensor is down, transmit the redundant port so we can index the SDD feed!, If we transmit the driver, we can get to the HDD program through the auxiliary THX circuit!, If we reboot the card, we can get to the HDD card through the open-source THX application!, We need to input the online AGP driver!, Try to hack the AI panel, maybe it will reboot the cross-platform sensor!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:57 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:57 +0700\"\n        },\n        {\n            \"id\": 12,\n            \"name\": \"Germany Pines Tuna productivity\",\n            \"content\": \"If we parse the array, we can get to the TCP system through the neural HTTP array!, We need to input the digital JBOD protocol!, Try to hack the SAS bandwidth, maybe it will copy the redundant bus!, We need to generate the redundant SSL pixel!, synthesizing the matrix won't do anything, we need to copy the neural PNG port!\",\n            \"lastModifiedDate\": \"2022-07-04 12:26:35 +0700\",\n            \"createdDate\": \"2022-07-04 12:26:35 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 6,\n        \"pageNumber\": 2,\n        \"pageSize\": 3,\n        \"unpaged\": false,\n        \"paged\": true\n    },\n    \"totalElements\": 13,\n    \"totalPages\": 5,\n    \"last\": false,\n    \"size\": 3,\n    \"number\": 2,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"numberOfElements\": 3,\n    \"first\": false,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "pageable - page index 5, total page 5",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?page=5&size=3&direction=DESC&properties=name,content",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "page",
									"value": "5"
								},
								{
									"key": "size",
									"value": "3"
								},
								{
									"key": "direction",
									"value": "DESC"
								},
								{
									"key": "properties",
									"value": "name,content"
								}
							]
						}
					},
					"response": [
						{
							"name": "204",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?page=5&size=3&direction=DESC&properties=name,content",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "page",
											"value": "5"
										},
										{
											"key": "size",
											"value": "3"
										},
										{
											"key": "direction",
											"value": "DESC"
										},
										{
											"key": "properties",
											"value": "name,content"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Mon, 04 Jul 2022 15:39:58 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "id in (12,10,8)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?search=id=in=(12,10,8)",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "search",
									"value": "id=in=(12,10,8)"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?search=id=in=(12,10,8)",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "search",
											"value": "id=in=(12,10,8)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 04 Jul 2022 16:52:34 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 12,\n            \"name\": \"Germany Pines Tuna productivity\",\n            \"content\": \"If we parse the array, we can get to the TCP system through the neural HTTP array!, We need to input the digital JBOD protocol!, Try to hack the SAS bandwidth, maybe it will copy the redundant bus!, We need to generate the redundant SSL pixel!, synthesizing the matrix won't do anything, we need to copy the neural PNG port!\",\n            \"lastModifiedDate\": \"2022-07-04 12:26:35 +0700\",\n            \"createdDate\": \"2022-07-04 12:26:35 +0700\"\n        },\n        {\n            \"id\": 10,\n            \"name\": \"withdrawal Estates\",\n            \"content\": \"The PNG hard drive is down, back up the 1080p sensor so we can copy the RSS capacitor!, The AI port is down, bypass the multi-byte panel so we can navigate the SSL pixel!, I'll transmit the virtual XML port, that should microchip the USB pixel!, Try to parse the SAS protocol, maybe it will navigate the mobile port!, You can't copy the capacitor without programming the cross-platform SAS panel!\",\n            \"lastModifiedDate\": \"2022-07-04 11:22:01 +0700\",\n            \"createdDate\": \"2022-07-04 11:22:01 +0700\"\n        },\n        {\n            \"id\": 8,\n            \"name\": \"tangible Investor Small functionalities\",\n            \"content\": \"Try to connect the FTP matrix, maybe it will index the online alarm!, The HDD matrix is down, index the online port so we can bypass the SAS matrix!, We need to index the mobile AI bandwidth!, calculating the bandwidth won't do anything, we need to compress the multi-byte FTP firewall!, Try to copy the AI array, maybe it will index the digital array!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:59 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:59 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"sorted\": true,\n            \"unsorted\": false,\n            \"empty\": false\n        },\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"offset\": 0,\n        \"paged\": true,\n        \"unpaged\": false\n    },\n    \"totalElements\": 3,\n    \"totalPages\": 1,\n    \"last\": true,\n    \"first\": true,\n    \"sort\": {\n        \"sorted\": true,\n        \"unsorted\": false,\n        \"empty\": false\n    },\n    \"numberOfElements\": 3,\n    \"size\": 10,\n    \"number\": 0,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "id not in (12,10,8)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?search=id=out=(12,10,8)",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "search",
									"value": "id=out=(12,10,8)"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?search=id=out=(12,10,8)",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "search",
											"value": "id=out=(12,10,8)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 04 Jul 2022 16:53:09 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 13,\n            \"name\": \"hub Analyst Saint Fantastic\",\n            \"content\": \"If we index the program, we can get to the SCSI interface through the auxiliary SMS port!, The IB application is down, calculate the mobile program so we can parse the SCSI bandwidth!, If we quantify the panel, we can get to the GB array through the bluetooth SAS port!, You can't index the feed without calculating the neural PCI microchip!, I'll calculate the mobile XSS hard drive, that should port the COM interface!\",\n            \"lastModifiedDate\": \"2022-07-04 12:41:47 +0700\",\n            \"createdDate\": \"2022-07-04 12:41:47 +0700\"\n        },\n        {\n            \"id\": 11,\n            \"name\": \"Wells directional\",\n            \"content\": \"You can't calculate the card without parsing the virtual COM bandwidth!, Use the open-source EXE bus, then you can generate the back-end matrix!, We need to index the mobile RSS sensor!, I'll connect the primary IB capacitor, that should program the CSS port!, The SDD program is down, calculate the back-end protocol so we can generate the CSS panel!\",\n            \"lastModifiedDate\": \"2022-07-04 11:22:02 +0700\",\n            \"createdDate\": \"2022-07-04 11:22:02 +0700\"\n        },\n        {\n            \"id\": 9,\n            \"name\": \"alarm hardware Berkshire Indiana\",\n            \"content\": \"The FTP alarm is down, reboot the haptic card so we can parse the RSS program!, Use the online IB bus, then you can hack the optical hard drive!, If we bypass the hard drive, we can get to the AI sensor through the mobile IB program!, Try to bypass the RSS card, maybe it will navigate the auxiliary monitor!, You can't program the microchip without generating the 1080p CSS card!\",\n            \"lastModifiedDate\": \"2022-07-04 11:22:00 +0700\",\n            \"createdDate\": \"2022-07-04 11:22:00 +0700\"\n        },\n        {\n            \"id\": 7,\n            \"name\": \"Bedfordshire synthesize EXE\",\n            \"content\": \"Use the digital TCP driver, then you can reboot the multi-byte application!, We need to back up the online SQL panel!, I'll program the back-end JSON array, that should program the USB bus!, Try to synthesize the SAS alarm, maybe it will generate the auxiliary panel!, I'll calculate the solid state SDD bandwidth, that should card the SSL alarm!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:58 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:58 +0700\"\n        },\n        {\n            \"id\": 6,\n            \"name\": \"holistic indexing York Texas\",\n            \"content\": \"The PNG sensor is down, transmit the redundant port so we can index the SDD feed!, If we transmit the driver, we can get to the HDD program through the auxiliary THX circuit!, If we reboot the card, we can get to the HDD card through the open-source THX application!, We need to input the online AGP driver!, Try to hack the AI panel, maybe it will reboot the cross-platform sensor!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:57 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:57 +0700\"\n        },\n        {\n            \"id\": 5,\n            \"name\": \"bluetooth red Factors copying\",\n            \"content\": \"Try to transmit the CSS matrix, maybe it will compress the auxiliary bandwidth!, I'll synthesize the bluetooth EXE circuit, that should port the HTTP transmitter!, You can't generate the bandwidth without compressing the multi-byte FTP capacitor!, Try to input the RSS driver, maybe it will parse the optical capacitor!, I'll program the open-source HTTP transmitter, that should circuit the EXE array!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:56 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:56 +0700\"\n        },\n        {\n            \"id\": 4,\n            \"name\": \"innovative Wyoming Pound 24/7\",\n            \"content\": \"Use the bluetooth EXE transmitter, then you can copy the multi-byte microchip!, If we quantify the feed, we can get to the TCP panel through the online COM system!, I'll index the cross-platform SMS capacitor, that should matrix the COM bus!, We need to override the bluetooth AI hard drive!, The JSON bandwidth is down, reboot the neural program so we can transmit the USB capacitor!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:55 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:55 +0700\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"Associate deposit\",\n            \"content\": \"Use the solid state TCP bus, then you can input the auxiliary pixel!, Try to copy the XSS driver, maybe it will generate the cross-platform card!, If we override the microchip, we can get to the GB program through the mobile RAM panel!, Use the auxiliary SDD array, then you can navigate the 1080p system!, We need to reboot the 1080p SCSI hard drive!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:54 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:54 +0700\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Monitored withdrawal Movies Shirt\",\n            \"content\": \"We need to compress the neural THX protocol!, If we generate the interface, we can get to the JSON bus through the redundant AGP card!, We need to input the open-source TCP bus!, I'll quantify the redundant JSON alarm, that should firewall the ADP sensor!, hacking the sensor won't do anything, we need to reboot the digital USB matrix!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:52 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:52 +0700\"\n        },\n        {\n            \"id\": 1,\n            \"name\": \"Lead Metrics knowledge\",\n            \"content\": \"hacking the sensor won't do anything, we need to hack the multi-byte JBOD panel!, You can't generate the driver without bypassing the cross-platform SQL interface!, If we hack the bandwidth, we can get to the CSS panel through the auxiliary GB capacitor!, We need to quantify the wireless IB card!, I'll back up the bluetooth THX bandwidth, that should panel the COM feed!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:49 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:49 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"sorted\": true,\n            \"unsorted\": false,\n            \"empty\": false\n        },\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"offset\": 0,\n        \"paged\": true,\n        \"unpaged\": false\n    },\n    \"totalElements\": 10,\n    \"totalPages\": 1,\n    \"last\": true,\n    \"first\": true,\n    \"sort\": {\n        \"sorted\": true,\n        \"unsorted\": false,\n        \"empty\": false\n    },\n    \"numberOfElements\": 10,\n    \"size\": 10,\n    \"number\": 0,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "name contains Germany",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?search=name==*Germany*",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "search",
									"value": "name==*Germany*"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?search=name==*Germany*",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "search",
											"value": "name==*Germany*"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 04 Jul 2022 16:54:38 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 12,\n            \"name\": \"Germany Pines Tuna productivity\",\n            \"content\": \"If we parse the array, we can get to the TCP system through the neural HTTP array!, We need to input the digital JBOD protocol!, Try to hack the SAS bandwidth, maybe it will copy the redundant bus!, We need to generate the redundant SSL pixel!, synthesizing the matrix won't do anything, we need to copy the neural PNG port!\",\n            \"lastModifiedDate\": \"2022-07-04 12:26:35 +0700\",\n            \"createdDate\": \"2022-07-04 12:26:35 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"sorted\": true,\n            \"unsorted\": false,\n            \"empty\": false\n        },\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"offset\": 0,\n        \"paged\": true,\n        \"unpaged\": false\n    },\n    \"totalElements\": 1,\n    \"totalPages\": 1,\n    \"last\": true,\n    \"first\": true,\n    \"sort\": {\n        \"sorted\": true,\n        \"unsorted\": false,\n        \"empty\": false\n    },\n    \"numberOfElements\": 1,\n    \"size\": 10,\n    \"number\": 0,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "content contains we",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?search=content==*we*",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "search",
									"value": "content==*we*"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?search=content==*we*",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "search",
											"value": "content==*we*"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 04 Jul 2022 16:55:32 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 13,\n            \"name\": \"hub Analyst Saint Fantastic\",\n            \"content\": \"If we index the program, we can get to the SCSI interface through the auxiliary SMS port!, The IB application is down, calculate the mobile program so we can parse the SCSI bandwidth!, If we quantify the panel, we can get to the GB array through the bluetooth SAS port!, You can't index the feed without calculating the neural PCI microchip!, I'll calculate the mobile XSS hard drive, that should port the COM interface!\",\n            \"lastModifiedDate\": \"2022-07-04 12:41:47 +0700\",\n            \"createdDate\": \"2022-07-04 12:41:47 +0700\"\n        },\n        {\n            \"id\": 12,\n            \"name\": \"Germany Pines Tuna productivity\",\n            \"content\": \"If we parse the array, we can get to the TCP system through the neural HTTP array!, We need to input the digital JBOD protocol!, Try to hack the SAS bandwidth, maybe it will copy the redundant bus!, We need to generate the redundant SSL pixel!, synthesizing the matrix won't do anything, we need to copy the neural PNG port!\",\n            \"lastModifiedDate\": \"2022-07-04 12:26:35 +0700\",\n            \"createdDate\": \"2022-07-04 12:26:35 +0700\"\n        },\n        {\n            \"id\": 11,\n            \"name\": \"Wells directional\",\n            \"content\": \"You can't calculate the card without parsing the virtual COM bandwidth!, Use the open-source EXE bus, then you can generate the back-end matrix!, We need to index the mobile RSS sensor!, I'll connect the primary IB capacitor, that should program the CSS port!, The SDD program is down, calculate the back-end protocol so we can generate the CSS panel!\",\n            \"lastModifiedDate\": \"2022-07-04 11:22:02 +0700\",\n            \"createdDate\": \"2022-07-04 11:22:02 +0700\"\n        },\n        {\n            \"id\": 10,\n            \"name\": \"withdrawal Estates\",\n            \"content\": \"The PNG hard drive is down, back up the 1080p sensor so we can copy the RSS capacitor!, The AI port is down, bypass the multi-byte panel so we can navigate the SSL pixel!, I'll transmit the virtual XML port, that should microchip the USB pixel!, Try to parse the SAS protocol, maybe it will navigate the mobile port!, You can't copy the capacitor without programming the cross-platform SAS panel!\",\n            \"lastModifiedDate\": \"2022-07-04 11:22:01 +0700\",\n            \"createdDate\": \"2022-07-04 11:22:01 +0700\"\n        },\n        {\n            \"id\": 9,\n            \"name\": \"alarm hardware Berkshire Indiana\",\n            \"content\": \"The FTP alarm is down, reboot the haptic card so we can parse the RSS program!, Use the online IB bus, then you can hack the optical hard drive!, If we bypass the hard drive, we can get to the AI sensor through the mobile IB program!, Try to bypass the RSS card, maybe it will navigate the auxiliary monitor!, You can't program the microchip without generating the 1080p CSS card!\",\n            \"lastModifiedDate\": \"2022-07-04 11:22:00 +0700\",\n            \"createdDate\": \"2022-07-04 11:22:00 +0700\"\n        },\n        {\n            \"id\": 8,\n            \"name\": \"tangible Investor Small functionalities\",\n            \"content\": \"Try to connect the FTP matrix, maybe it will index the online alarm!, The HDD matrix is down, index the online port so we can bypass the SAS matrix!, We need to index the mobile AI bandwidth!, calculating the bandwidth won't do anything, we need to compress the multi-byte FTP firewall!, Try to copy the AI array, maybe it will index the digital array!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:59 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:59 +0700\"\n        },\n        {\n            \"id\": 7,\n            \"name\": \"Bedfordshire synthesize EXE\",\n            \"content\": \"Use the digital TCP driver, then you can reboot the multi-byte application!, We need to back up the online SQL panel!, I'll program the back-end JSON array, that should program the USB bus!, Try to synthesize the SAS alarm, maybe it will generate the auxiliary panel!, I'll calculate the solid state SDD bandwidth, that should card the SSL alarm!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:58 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:58 +0700\"\n        },\n        {\n            \"id\": 6,\n            \"name\": \"holistic indexing York Texas\",\n            \"content\": \"The PNG sensor is down, transmit the redundant port so we can index the SDD feed!, If we transmit the driver, we can get to the HDD program through the auxiliary THX circuit!, If we reboot the card, we can get to the HDD card through the open-source THX application!, We need to input the online AGP driver!, Try to hack the AI panel, maybe it will reboot the cross-platform sensor!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:57 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:57 +0700\"\n        },\n        {\n            \"id\": 4,\n            \"name\": \"innovative Wyoming Pound 24/7\",\n            \"content\": \"Use the bluetooth EXE transmitter, then you can copy the multi-byte microchip!, If we quantify the feed, we can get to the TCP panel through the online COM system!, I'll index the cross-platform SMS capacitor, that should matrix the COM bus!, We need to override the bluetooth AI hard drive!, The JSON bandwidth is down, reboot the neural program so we can transmit the USB capacitor!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:55 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:55 +0700\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"Associate deposit\",\n            \"content\": \"Use the solid state TCP bus, then you can input the auxiliary pixel!, Try to copy the XSS driver, maybe it will generate the cross-platform card!, If we override the microchip, we can get to the GB program through the mobile RAM panel!, Use the auxiliary SDD array, then you can navigate the 1080p system!, We need to reboot the 1080p SCSI hard drive!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:54 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:54 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"sorted\": true,\n            \"unsorted\": false,\n            \"empty\": false\n        },\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"offset\": 0,\n        \"paged\": true,\n        \"unpaged\": false\n    },\n    \"totalElements\": 12,\n    \"totalPages\": 2,\n    \"last\": false,\n    \"first\": true,\n    \"sort\": {\n        \"sorted\": true,\n        \"unsorted\": false,\n        \"empty\": false\n    },\n    \"numberOfElements\": 10,\n    \"size\": 10,\n    \"number\": 0,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "content contains we AND name not contains Analyst",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?search=content==*we*;name!=*Analyst*",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "search",
									"value": "content==*we*;name!=*Analyst*"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?search=content==*we*;name!=*Analyst*",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "search",
											"value": "content==*we*;name!=*Analyst*"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 04 Jul 2022 16:58:02 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 12,\n            \"name\": \"Germany Pines Tuna productivity\",\n            \"content\": \"If we parse the array, we can get to the TCP system through the neural HTTP array!, We need to input the digital JBOD protocol!, Try to hack the SAS bandwidth, maybe it will copy the redundant bus!, We need to generate the redundant SSL pixel!, synthesizing the matrix won't do anything, we need to copy the neural PNG port!\",\n            \"lastModifiedDate\": \"2022-07-04 12:26:35 +0700\",\n            \"createdDate\": \"2022-07-04 12:26:35 +0700\"\n        },\n        {\n            \"id\": 11,\n            \"name\": \"Wells directional\",\n            \"content\": \"You can't calculate the card without parsing the virtual COM bandwidth!, Use the open-source EXE bus, then you can generate the back-end matrix!, We need to index the mobile RSS sensor!, I'll connect the primary IB capacitor, that should program the CSS port!, The SDD program is down, calculate the back-end protocol so we can generate the CSS panel!\",\n            \"lastModifiedDate\": \"2022-07-04 11:22:02 +0700\",\n            \"createdDate\": \"2022-07-04 11:22:02 +0700\"\n        },\n        {\n            \"id\": 10,\n            \"name\": \"withdrawal Estates\",\n            \"content\": \"The PNG hard drive is down, back up the 1080p sensor so we can copy the RSS capacitor!, The AI port is down, bypass the multi-byte panel so we can navigate the SSL pixel!, I'll transmit the virtual XML port, that should microchip the USB pixel!, Try to parse the SAS protocol, maybe it will navigate the mobile port!, You can't copy the capacitor without programming the cross-platform SAS panel!\",\n            \"lastModifiedDate\": \"2022-07-04 11:22:01 +0700\",\n            \"createdDate\": \"2022-07-04 11:22:01 +0700\"\n        },\n        {\n            \"id\": 9,\n            \"name\": \"alarm hardware Berkshire Indiana\",\n            \"content\": \"The FTP alarm is down, reboot the haptic card so we can parse the RSS program!, Use the online IB bus, then you can hack the optical hard drive!, If we bypass the hard drive, we can get to the AI sensor through the mobile IB program!, Try to bypass the RSS card, maybe it will navigate the auxiliary monitor!, You can't program the microchip without generating the 1080p CSS card!\",\n            \"lastModifiedDate\": \"2022-07-04 11:22:00 +0700\",\n            \"createdDate\": \"2022-07-04 11:22:00 +0700\"\n        },\n        {\n            \"id\": 8,\n            \"name\": \"tangible Investor Small functionalities\",\n            \"content\": \"Try to connect the FTP matrix, maybe it will index the online alarm!, The HDD matrix is down, index the online port so we can bypass the SAS matrix!, We need to index the mobile AI bandwidth!, calculating the bandwidth won't do anything, we need to compress the multi-byte FTP firewall!, Try to copy the AI array, maybe it will index the digital array!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:59 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:59 +0700\"\n        },\n        {\n            \"id\": 7,\n            \"name\": \"Bedfordshire synthesize EXE\",\n            \"content\": \"Use the digital TCP driver, then you can reboot the multi-byte application!, We need to back up the online SQL panel!, I'll program the back-end JSON array, that should program the USB bus!, Try to synthesize the SAS alarm, maybe it will generate the auxiliary panel!, I'll calculate the solid state SDD bandwidth, that should card the SSL alarm!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:58 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:58 +0700\"\n        },\n        {\n            \"id\": 6,\n            \"name\": \"holistic indexing York Texas\",\n            \"content\": \"The PNG sensor is down, transmit the redundant port so we can index the SDD feed!, If we transmit the driver, we can get to the HDD program through the auxiliary THX circuit!, If we reboot the card, we can get to the HDD card through the open-source THX application!, We need to input the online AGP driver!, Try to hack the AI panel, maybe it will reboot the cross-platform sensor!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:57 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:57 +0700\"\n        },\n        {\n            \"id\": 4,\n            \"name\": \"innovative Wyoming Pound 24/7\",\n            \"content\": \"Use the bluetooth EXE transmitter, then you can copy the multi-byte microchip!, If we quantify the feed, we can get to the TCP panel through the online COM system!, I'll index the cross-platform SMS capacitor, that should matrix the COM bus!, We need to override the bluetooth AI hard drive!, The JSON bandwidth is down, reboot the neural program so we can transmit the USB capacitor!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:55 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:55 +0700\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"Associate deposit\",\n            \"content\": \"Use the solid state TCP bus, then you can input the auxiliary pixel!, Try to copy the XSS driver, maybe it will generate the cross-platform card!, If we override the microchip, we can get to the GB program through the mobile RAM panel!, Use the auxiliary SDD array, then you can navigate the 1080p system!, We need to reboot the 1080p SCSI hard drive!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:54 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:54 +0700\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Monitored withdrawal Movies Shirt\",\n            \"content\": \"We need to compress the neural THX protocol!, If we generate the interface, we can get to the JSON bus through the redundant AGP card!, We need to input the open-source TCP bus!, I'll quantify the redundant JSON alarm, that should firewall the ADP sensor!, hacking the sensor won't do anything, we need to reboot the digital USB matrix!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:52 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:52 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"sorted\": true,\n            \"unsorted\": false,\n            \"empty\": false\n        },\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"offset\": 0,\n        \"paged\": true,\n        \"unpaged\": false\n    },\n    \"totalElements\": 11,\n    \"totalPages\": 2,\n    \"last\": false,\n    \"first\": true,\n    \"sort\": {\n        \"sorted\": true,\n        \"unsorted\": false,\n        \"empty\": false\n    },\n    \"numberOfElements\": 10,\n    \"size\": 10,\n    \"number\": 0,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "content contains If, we, you",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?search=content==*If*;content==*we*;content==*you*",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "search",
									"value": "content==*If*;content==*we*;content==*you*"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?search=content==*If*;content==*we*;content==*you*",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "search",
											"value": "content==*If*;content==*we*;content==*you*"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 04 Jul 2022 17:19:51 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 13,\n            \"name\": \"hub Analyst Saint Fantastic\",\n            \"content\": \"If we index the program, we can get to the SCSI interface through the auxiliary SMS port!, The IB application is down, calculate the mobile program so we can parse the SCSI bandwidth!, If we quantify the panel, we can get to the GB array through the bluetooth SAS port!, You can't index the feed without calculating the neural PCI microchip!, I'll calculate the mobile XSS hard drive, that should port the COM interface!\",\n            \"lastModifiedDate\": \"2022-07-04 12:41:47 +0700\",\n            \"createdDate\": \"2022-07-04 12:41:47 +0700\"\n        },\n        {\n            \"id\": 9,\n            \"name\": \"alarm hardware Berkshire Indiana\",\n            \"content\": \"The FTP alarm is down, reboot the haptic card so we can parse the RSS program!, Use the online IB bus, then you can hack the optical hard drive!, If we bypass the hard drive, we can get to the AI sensor through the mobile IB program!, Try to bypass the RSS card, maybe it will navigate the auxiliary monitor!, You can't program the microchip without generating the 1080p CSS card!\",\n            \"lastModifiedDate\": \"2022-07-04 11:22:00 +0700\",\n            \"createdDate\": \"2022-07-04 11:22:00 +0700\"\n        },\n        {\n            \"id\": 4,\n            \"name\": \"innovative Wyoming Pound 24/7\",\n            \"content\": \"Use the bluetooth EXE transmitter, then you can copy the multi-byte microchip!, If we quantify the feed, we can get to the TCP panel through the online COM system!, I'll index the cross-platform SMS capacitor, that should matrix the COM bus!, We need to override the bluetooth AI hard drive!, The JSON bandwidth is down, reboot the neural program so we can transmit the USB capacitor!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:55 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:55 +0700\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"Associate deposit\",\n            \"content\": \"Use the solid state TCP bus, then you can input the auxiliary pixel!, Try to copy the XSS driver, maybe it will generate the cross-platform card!, If we override the microchip, we can get to the GB program through the mobile RAM panel!, Use the auxiliary SDD array, then you can navigate the 1080p system!, We need to reboot the 1080p SCSI hard drive!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:54 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:54 +0700\"\n        },\n        {\n            \"id\": 1,\n            \"name\": \"Lead Metrics knowledge\",\n            \"content\": \"hacking the sensor won't do anything, we need to hack the multi-byte JBOD panel!, You can't generate the driver without bypassing the cross-platform SQL interface!, If we hack the bandwidth, we can get to the CSS panel through the auxiliary GB capacitor!, We need to quantify the wireless IB card!, I'll back up the bluetooth THX bandwidth, that should panel the COM feed!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:49 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:49 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"sorted\": true,\n            \"unsorted\": false,\n            \"empty\": false\n        },\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"offset\": 0,\n        \"paged\": true,\n        \"unpaged\": false\n    },\n    \"totalElements\": 5,\n    \"totalPages\": 1,\n    \"last\": true,\n    \"first\": true,\n    \"sort\": {\n        \"sorted\": true,\n        \"unsorted\": false,\n        \"empty\": false\n    },\n    \"numberOfElements\": 5,\n    \"size\": 10,\n    \"number\": 0,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "name contains Analyst OR Germany",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?search=name==*Analyst*,name==**Germany*",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "search",
									"value": "name==*Analyst*,name==**Germany*"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?search=name==*Analyst*,name==**Germany*",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "search",
											"value": "name==*Analyst*,name==**Germany*"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 04 Jul 2022 17:22:44 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 13,\n            \"name\": \"hub Analyst Saint Fantastic\",\n            \"content\": \"If we index the program, we can get to the SCSI interface through the auxiliary SMS port!, The IB application is down, calculate the mobile program so we can parse the SCSI bandwidth!, If we quantify the panel, we can get to the GB array through the bluetooth SAS port!, You can't index the feed without calculating the neural PCI microchip!, I'll calculate the mobile XSS hard drive, that should port the COM interface!\",\n            \"lastModifiedDate\": \"2022-07-04 12:41:47 +0700\",\n            \"createdDate\": \"2022-07-04 12:41:47 +0700\"\n        },\n        {\n            \"id\": 12,\n            \"name\": \"Germany Pines Tuna productivity\",\n            \"content\": \"If we parse the array, we can get to the TCP system through the neural HTTP array!, We need to input the digital JBOD protocol!, Try to hack the SAS bandwidth, maybe it will copy the redundant bus!, We need to generate the redundant SSL pixel!, synthesizing the matrix won't do anything, we need to copy the neural PNG port!\",\n            \"lastModifiedDate\": \"2022-07-04 12:26:35 +0700\",\n            \"createdDate\": \"2022-07-04 12:26:35 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"sorted\": true,\n            \"unsorted\": false,\n            \"empty\": false\n        },\n        \"pageNumber\": 0,\n        \"pageSize\": 10,\n        \"offset\": 0,\n        \"paged\": true,\n        \"unpaged\": false\n    },\n    \"totalElements\": 2,\n    \"totalPages\": 1,\n    \"last\": true,\n    \"first\": true,\n    \"sort\": {\n        \"sorted\": true,\n        \"unsorted\": false,\n        \"empty\": false\n    },\n    \"numberOfElements\": 2,\n    \"size\": 10,\n    \"number\": 0,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "full params - pageable + search",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/post?page=2&size=3&direction=DESC&properties=name,content&search=content==*system*, content==*is*;name!=*Germany*;id<12",
							"host": [
								"{{domain}}"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								},
								{
									"key": "size",
									"value": "3"
								},
								{
									"key": "direction",
									"value": "DESC"
								},
								{
									"key": "properties",
									"value": "name,content"
								},
								{
									"key": "search",
									"value": "content==*system*, content==*is*;name!=*Germany*;id<12"
								}
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/post?page=2&size=3&direction=DESC&properties=name,content&search=content==*system*, content==*is*;name!=*Germany*;id<12",
									"host": [
										"{{domain}}"
									],
									"path": [
										"post"
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "size",
											"value": "3"
										},
										{
											"key": "direction",
											"value": "DESC"
										},
										{
											"key": "properties",
											"value": "name,content"
										},
										{
											"key": "search",
											"value": "content==*system*, content==*is*;name!=*Germany*;id<12"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 04 Jul 2022 17:26:02 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"id\": 3,\n            \"name\": \"Associate deposit\",\n            \"content\": \"Use the solid state TCP bus, then you can input the auxiliary pixel!, Try to copy the XSS driver, maybe it will generate the cross-platform card!, If we override the microchip, we can get to the GB program through the mobile RAM panel!, Use the auxiliary SDD array, then you can navigate the 1080p system!, We need to reboot the 1080p SCSI hard drive!\",\n            \"lastModifiedDate\": \"2022-07-04 11:21:54 +0700\",\n            \"createdDate\": \"2022-07-04 11:21:54 +0700\"\n        },\n        {\n            \"id\": 9,\n            \"name\": \"alarm hardware Berkshire Indiana\",\n            \"content\": \"The FTP alarm is down, reboot the haptic card so we can parse the RSS program!, Use the online IB bus, then you can hack the optical hard drive!, If we bypass the hard drive, we can get to the AI sensor through the mobile IB program!, Try to bypass the RSS card, maybe it will navigate the auxiliary monitor!, You can't program the microchip without generating the 1080p CSS card!\",\n            \"lastModifiedDate\": \"2022-07-04 11:22:00 +0700\",\n            \"createdDate\": \"2022-07-04 11:22:00 +0700\"\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"sorted\": true,\n            \"unsorted\": false,\n            \"empty\": false\n        },\n        \"pageNumber\": 2,\n        \"pageSize\": 3,\n        \"offset\": 6,\n        \"paged\": true,\n        \"unpaged\": false\n    },\n    \"totalElements\": 8,\n    \"totalPages\": 3,\n    \"last\": true,\n    \"first\": false,\n    \"sort\": {\n        \"sorted\": true,\n        \"unsorted\": false,\n        \"empty\": false\n    },\n    \"numberOfElements\": 2,\n    \"size\": 3,\n    \"number\": 2,\n    \"empty\": false\n}"
						}
					]
				}
			]
		}
	]
}